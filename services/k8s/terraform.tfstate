{
    "version": 3,
    "terraform_version": "0.11.3",
    "serial": 64,
    "lineage": "de13b843-c54b-48d3-ab1a-12990fae69c6",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "canal_yaml": {
                    "sensitive": false,
                    "type": "string",
                    "value": "# Canal Version v2.6.7\n# https://docs.projectcalico.org/v2.6/releases#v2.6.7\n# This manifest includes the following component versions:\n#   calico/node:v2.6.7\n#   calico/cni:v1.11.2\n#   coreos/flannel:v0.9.1\n\n# This ConfigMap can be used to configure a self-hosted Canal installation.\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  # The interface used by canal for host \u003c-\u003e host communication.\n  # If left blank, then the interface is chosen using the node's\n  # default route.\n  canal_iface: \"\"\n\n  # Whether or not to masquerade traffic to destinations not within\n  # the pod network.\n  masquerade: \"true\"\n\n  # The CNI network configuration to install on each node.\n  cni_network_config: |-\n    {\n        \"name\": \"k8s-pod-network\",\n        \"cniVersion\": \"0.3.0\",\n        \"plugins\": [\n            {\n                \"type\": \"calico\",\n                \"log_level\": \"info\",\n                \"datastore_type\": \"kubernetes\",\n                \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n                \"ipam\": {\n                    \"type\": \"host-local\",\n                    \"subnet\": \"usePodCidr\"\n                },\n                \"policy\": {\n                    \"type\": \"k8s\",\n                    \"k8s_auth_token\": \"__SERVICEACCOUNT_TOKEN__\"\n                },\n                \"kubernetes\": {\n                    \"k8s_api_root\": \"https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__\",\n                    \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n                }\n            },\n            {\n                \"type\": \"portmap\",\n                \"capabilities\": {\"portMappings\": true},\n                \"snat\": true\n            }\n        ]\n    }\n\n  # Flannel network configuration. Mounted into the flannel container.\n  net-conf.json: |\n    {\n      \"Network\": \"10.120.0.0/16\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\n# This manifest installs the calico/node container, as well\n# as the Calico CNI plugins and network config on\n# each master and worker node in a Kubernetes cluster.\nkind: DaemonSet\napiVersion: extensions/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: ''\n    spec:\n      hostNetwork: true\n      serviceAccountName: canal\n      tolerations:\n        # Tolerate this effect so the pods will be schedulable at all times\n        - effect: NoSchedule\n          operator: Exists\n        # Mark the pod as a critical add-on for rescheduling.\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n        - effect: NoExecute\n          operator: Exists\n      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a \"force\n      # deletion\": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.\n      terminationGracePeriodSeconds: 0\n      containers:\n        # Runs calico/node container on each Kubernetes node.  This\n        # container programs network policy and routes on each\n        # host.\n        - name: calico-node\n          image: quay.io/calico/node:v2.6.7\n          env:\n            # Use Kubernetes API as the backing datastore.\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            # Enable felix logging.\n            - name: FELIX_LOGSEVERITYSYS\n              value: \"info\"\n            # Don't enable BGP.\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            # Cluster type to identify the deployment type\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            # Disable file logging so `kubectl logs` works.\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            # Period, in seconds, at which felix re-applies all iptables state\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            # Disable IPV6 support in Felix.\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            # Wait for the datastore.\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            # No IP address needed.\n            - name: IP\n              value: \"\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            # Set Felix endpoint to host default action to ACCEPT.\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: /liveness\n              port: 9099\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: /readiness\n              port: 9099\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: /lib/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: /var/run/calico\n              name: var-run-calico\n              readOnly: false\n        # This container installs the Calico CNI binaries\n        # and CNI network config file on each node.\n        - name: install-cni\n          image: quay.io/calico/cni:v1.11.2\n          command: [\"/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            # The CNI network config to install on each node.\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n          volumeMounts:\n            - mountPath: /host/opt/cni/bin\n              name: cni-bin-dir\n            - mountPath: /host/etc/cni/net.d\n              name: cni-net-dir\n        # This container runs flannel using the kube-subnet-mgr backend\n        # for allocating subnets.\n        - name: kube-flannel\n          image: quay.io/coreos/flannel:v0.9.1\n          command: [ \"/opt/bin/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - name: run\n            mountPath: /run\n          - name: flannel-cfg\n            mountPath: /etc/kube-flannel/\n      volumes:\n        # Used by calico/node.\n        - name: lib-modules\n          hostPath:\n            path: /lib/modules\n        - name: var-run-calico\n          hostPath:\n            path: /var/run/calico\n        # Used to install CNI.\n        - name: cni-bin-dir\n          hostPath:\n            path: /opt/cni/bin\n        - name: cni-net-dir\n          hostPath:\n            path: /etc/cni/net.d\n        # Used by flannel.\n        - name: run\n          hostPath:\n            path: /run\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n\n\n# Create all the CustomResourceDefinitions needed for\n# Calico policy-only mode.\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global Felix Configuration\nkind: CustomResourceDefinition\nmetadata:\n   name: globalfelixconfigs.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalFelixConfig\n    plural: globalfelixconfigs\n    singular: globalfelixconfig\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global BGP Configuration\nkind: CustomResourceDefinition\nmetadata:\n  name: globalbgpconfigs.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalBGPConfig\n    plural: globalbgpconfigs\n    singular: globalbgpconfig\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico IP Pools\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global Network Policies\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n"
                },
                "client_kubeconfig": {
                    "sensitive": false,
                    "type": "string",
                    "value": "apiVersion: v1\nkind: Config\nusers:\n- name: admin\n  user:\n    token: hKug05I6TteN16XIAwzcXSk5d1HZeNoJ\nclusters:\n- name: local\n  cluster:\n    insecure-skip-tls-verify: true\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: admin\n  name: local-cluster-context\ncurrent-context: local-cluster-context\n"
                },
                "coredns_yaml": {
                    "sensitive": false,
                    "type": "string",
                    "value": "# Warning: This is a file generated from the base underscore template file: coredns.yaml.base\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io/cluster-service: \"true\"\n      addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes k8s.local 10.110.0.0/16 {\n            pods insecure\n            upstream /etc/resolv.conf\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        proxy . /etc/resolv.conf\n        cache 30\n    }\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: coredns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"CoreDNS\"\nspec:\n  replicas: 2\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: coredns\n  template:\n    metadata:\n      labels:\n        k8s-app: coredns\n    spec:\n      serviceAccountName: coredns\n      tolerations:\n        - key: node-role.kubernetes.io/master\n          effect: NoSchedule\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: k8s-app\n                  operator: In\n                  values:\n                  - coredns\n              topologyKey: kubernetes.io/hostname\n      containers:\n      - name: coredns\n        image: coredns/coredns:1.0.4\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"/etc/coredns/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: /etc/coredns\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: coredns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: coredns\n  clusterIP: 10.110.50.10\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP"
                },
                "etcd1": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/etcd.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewoiYXBpVmVyc2lvbiI6ICJ2MSIsCiJraW5kIjogIlBvZCIsCiJtZXRhZGF0YSI6IHsKICAibmFtZSI6ImV0Y2Qtbm9kZS0xIiwKICAibmFtZXNwYWNlIjogImt1YmUtc3lzdGVtIiwKICAiYW5ub3RhdGlvbnMiOiB7CiAgICAic2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kIjogIiIKICB9Cn0sCiJzcGVjIjp7CiJob3N0TmV0d29yayI6IHRydWUsCiJjb250YWluZXJzIjpbCiAgICB7CiAgICAibmFtZSI6ICJldGNkLWNvbnRhaW5lciIsCiAgICAiaW1hZ2UiOiAiZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2V0Y2Q6My4yLjE0IiwKICAgICJyZXNvdXJjZXMiOiB7CiAgICAgICJyZXF1ZXN0cyI6IHsKICAgICAgICAiY3B1IjogMQogICAgICB9CiAgICB9LAogICAgImNvbW1hbmQiOiBbCiAgICAgICAgICAgICAgIi9iaW4vc2giLAogICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgImlmIFsgLWUgL3Vzci9sb2NhbC9iaW4vbWlncmF0ZS1pZi1uZWVkZWQuc2ggXTsgdGhlbiAvdXNyL2xvY2FsL2Jpbi9taWdyYXRlLWlmLW5lZWRlZC5zaCAxPj4vdmFyL2xvZy9ldGNkLmxvZyAyPiYxOyBmaTsgZXhlYyAvdXNyL2xvY2FsL2Jpbi9ldGNkIC0tbmFtZSBldGNkLW5vZGUtMSAtLWxpc3Rlbi1wZWVyLXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDA6MjM4MCAtLWluaXRpYWwtYWR2ZXJ0aXNlLXBlZXItdXJscyBodHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwIC0tYWR2ZXJ0aXNlLWNsaWVudC11cmxzIGh0dHA6Ly8xMC4xMDAuNTAuMTAwOjIzNzkgLS1saXN0ZW4tY2xpZW50LXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDA6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkgLS1pbml0aWFsLWNsdXN0ZXItdG9rZW4gZXRjZC1jbHVzdGVyLTEgLS1kYXRhLWRpciAvdmFyL2V0Y2QvZGF0YSAtLWluaXRpYWwtY2x1c3RlciBldGNkLW5vZGUtMT1odHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwLGV0Y2Qtbm9kZS0yPWh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzODAsZXRjZC1ub2RlLTM9aHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtY2x1c3Rlci1zdGF0ZSBuZXcgMT4+L3Zhci9sb2cvZXRjZC5sb2cgMj4mMSIKICAgICAgICAgICAgXSwKICAgICJlbnYiOiBbCiAgICAgIHsgIm5hbWUiOiAiVEFSR0VUX1NUT1JBR0UiLAogICAgICAgICJ2YWx1ZSI6ICJldGNkMyIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJUQVJHRVRfVkVSU0lPTiIsCiAgICAgICAgInZhbHVlIjogIjMuMi4xNCIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJEQVRBX0RJUkVDVE9SWSIsCiAgICAgICAgInZhbHVlIjogIi92YXIvZXRjZC9kYXRhIgogICAgICB9CiAgICAgICAgXSwKICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAiaHR0cEdldCI6IHsKICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICJwb3J0IjogMjM3OSwKICAgICAgICAicGF0aCI6ICIvaGVhbHRoIgogICAgICB9LAogICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgfSwKICAgICJwb3J0cyI6IFsKICAgICAgeyAibmFtZSI6ICJzZXJ2ZXJwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzODAsCiAgICAgICAgImhvc3RQb3J0IjogMjM4MCAKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJjbGllbnRwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzNzksCiAgICAgICAgImhvc3RQb3J0IjogMjM3OQogICAgICB9CiAgICAgICAgXSwKICAgICJ2b2x1bWVNb3VudHMiOiBbCiAgICAgIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2V0Y2QiLAogICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsgIm5hbWUiOiAidmFybG9nZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJldGMiLAogICAgICAgICJtb3VudFBhdGgiOiAiL29wdC9ldGNkL2V0YyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfQogICAgXQogICAgfQpdLAoidm9sdW1lcyI6WwogIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgInBhdGgiOiAiL21udC9tYXN0ZXItcGQvdmFyL2V0Y2QifQogIH0sCiAgeyAibmFtZSI6ICJ2YXJsb2dldGNkIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInR5cGUiOiAiRmlsZU9yQ3JlYXRlIn0KICB9LAogIHsgIm5hbWUiOiAiZXRjIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvb3B0L2V0Y2QvZXRjIn0KICB9Cl0KfX0K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }"
                },
                "etcd2": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/etcd.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewoiYXBpVmVyc2lvbiI6ICJ2MSIsCiJraW5kIjogIlBvZCIsCiJtZXRhZGF0YSI6IHsKICAibmFtZSI6ImV0Y2Qtbm9kZS0yIiwKICAibmFtZXNwYWNlIjogImt1YmUtc3lzdGVtIiwKICAiYW5ub3RhdGlvbnMiOiB7CiAgICAic2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kIjogIiIKICB9Cn0sCiJzcGVjIjp7CiJob3N0TmV0d29yayI6IHRydWUsCiJjb250YWluZXJzIjpbCiAgICB7CiAgICAibmFtZSI6ICJldGNkLWNvbnRhaW5lciIsCiAgICAiaW1hZ2UiOiAiZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2V0Y2Q6My4yLjE0IiwKICAgICJyZXNvdXJjZXMiOiB7CiAgICAgICJyZXF1ZXN0cyI6IHsKICAgICAgICAiY3B1IjogMQogICAgICB9CiAgICB9LAogICAgImNvbW1hbmQiOiBbCiAgICAgICAgICAgICAgIi9iaW4vc2giLAogICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgImlmIFsgLWUgL3Vzci9sb2NhbC9iaW4vbWlncmF0ZS1pZi1uZWVkZWQuc2ggXTsgdGhlbiAvdXNyL2xvY2FsL2Jpbi9taWdyYXRlLWlmLW5lZWRlZC5zaCAxPj4vdmFyL2xvZy9ldGNkLmxvZyAyPiYxOyBmaTsgZXhlYyAvdXNyL2xvY2FsL2Jpbi9ldGNkIC0tbmFtZSBldGNkLW5vZGUtMiAtLWxpc3Rlbi1wZWVyLXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDE6MjM4MCAtLWluaXRpYWwtYWR2ZXJ0aXNlLXBlZXItdXJscyBodHRwOi8vMTAuMTAwLjUwLjEwMToyMzgwIC0tYWR2ZXJ0aXNlLWNsaWVudC11cmxzIGh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzNzkgLS1saXN0ZW4tY2xpZW50LXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDE6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkgLS1pbml0aWFsLWNsdXN0ZXItdG9rZW4gZXRjZC1jbHVzdGVyLTEgLS1kYXRhLWRpciAvdmFyL2V0Y2QvZGF0YSAtLWluaXRpYWwtY2x1c3RlciBldGNkLW5vZGUtMT1odHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwLGV0Y2Qtbm9kZS0yPWh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzODAsZXRjZC1ub2RlLTM9aHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtY2x1c3Rlci1zdGF0ZSBuZXcgMT4+L3Zhci9sb2cvZXRjZC5sb2cgMj4mMSIKICAgICAgICAgICAgXSwKICAgICJlbnYiOiBbCiAgICAgIHsgIm5hbWUiOiAiVEFSR0VUX1NUT1JBR0UiLAogICAgICAgICJ2YWx1ZSI6ICJldGNkMyIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJUQVJHRVRfVkVSU0lPTiIsCiAgICAgICAgInZhbHVlIjogIjMuMi4xNCIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJEQVRBX0RJUkVDVE9SWSIsCiAgICAgICAgInZhbHVlIjogIi92YXIvZXRjZC9kYXRhIgogICAgICB9CiAgICAgICAgXSwKICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAiaHR0cEdldCI6IHsKICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICJwb3J0IjogMjM3OSwKICAgICAgICAicGF0aCI6ICIvaGVhbHRoIgogICAgICB9LAogICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgfSwKICAgICJwb3J0cyI6IFsKICAgICAgeyAibmFtZSI6ICJzZXJ2ZXJwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzODAsCiAgICAgICAgImhvc3RQb3J0IjogMjM4MCAKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJjbGllbnRwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzNzksCiAgICAgICAgImhvc3RQb3J0IjogMjM3OQogICAgICB9CiAgICAgICAgXSwKICAgICJ2b2x1bWVNb3VudHMiOiBbCiAgICAgIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2V0Y2QiLAogICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsgIm5hbWUiOiAidmFybG9nZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJldGMiLAogICAgICAgICJtb3VudFBhdGgiOiAiL29wdC9ldGNkL2V0YyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfQogICAgXQogICAgfQpdLAoidm9sdW1lcyI6WwogIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgInBhdGgiOiAiL21udC9tYXN0ZXItcGQvdmFyL2V0Y2QifQogIH0sCiAgeyAibmFtZSI6ICJ2YXJsb2dldGNkIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInR5cGUiOiAiRmlsZU9yQ3JlYXRlIn0KICB9LAogIHsgIm5hbWUiOiAiZXRjIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvb3B0L2V0Y2QvZXRjIn0KICB9Cl0KfX0K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }"
                },
                "etcd3": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/etcd.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewoiYXBpVmVyc2lvbiI6ICJ2MSIsCiJraW5kIjogIlBvZCIsCiJtZXRhZGF0YSI6IHsKICAibmFtZSI6ImV0Y2Qtbm9kZS0zIiwKICAibmFtZXNwYWNlIjogImt1YmUtc3lzdGVtIiwKICAiYW5ub3RhdGlvbnMiOiB7CiAgICAic2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kIjogIiIKICB9Cn0sCiJzcGVjIjp7CiJob3N0TmV0d29yayI6IHRydWUsCiJjb250YWluZXJzIjpbCiAgICB7CiAgICAibmFtZSI6ICJldGNkLWNvbnRhaW5lciIsCiAgICAiaW1hZ2UiOiAiZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2V0Y2Q6My4yLjE0IiwKICAgICJyZXNvdXJjZXMiOiB7CiAgICAgICJyZXF1ZXN0cyI6IHsKICAgICAgICAiY3B1IjogMQogICAgICB9CiAgICB9LAogICAgImNvbW1hbmQiOiBbCiAgICAgICAgICAgICAgIi9iaW4vc2giLAogICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgImlmIFsgLWUgL3Vzci9sb2NhbC9iaW4vbWlncmF0ZS1pZi1uZWVkZWQuc2ggXTsgdGhlbiAvdXNyL2xvY2FsL2Jpbi9taWdyYXRlLWlmLW5lZWRlZC5zaCAxPj4vdmFyL2xvZy9ldGNkLmxvZyAyPiYxOyBmaTsgZXhlYyAvdXNyL2xvY2FsL2Jpbi9ldGNkIC0tbmFtZSBldGNkLW5vZGUtMyAtLWxpc3Rlbi1wZWVyLXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtYWR2ZXJ0aXNlLXBlZXItdXJscyBodHRwOi8vMTAuMTAwLjUwLjEwMjoyMzgwIC0tYWR2ZXJ0aXNlLWNsaWVudC11cmxzIGh0dHA6Ly8xMC4xMDAuNTAuMTAyOjIzNzkgLS1saXN0ZW4tY2xpZW50LXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDI6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkgLS1pbml0aWFsLWNsdXN0ZXItdG9rZW4gZXRjZC1jbHVzdGVyLTEgLS1kYXRhLWRpciAvdmFyL2V0Y2QvZGF0YSAtLWluaXRpYWwtY2x1c3RlciBldGNkLW5vZGUtMT1odHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwLGV0Y2Qtbm9kZS0yPWh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzODAsZXRjZC1ub2RlLTM9aHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtY2x1c3Rlci1zdGF0ZSBuZXcgMT4+L3Zhci9sb2cvZXRjZC5sb2cgMj4mMSIKICAgICAgICAgICAgXSwKICAgICJlbnYiOiBbCiAgICAgIHsgIm5hbWUiOiAiVEFSR0VUX1NUT1JBR0UiLAogICAgICAgICJ2YWx1ZSI6ICJldGNkMyIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJUQVJHRVRfVkVSU0lPTiIsCiAgICAgICAgInZhbHVlIjogIjMuMi4xNCIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJEQVRBX0RJUkVDVE9SWSIsCiAgICAgICAgInZhbHVlIjogIi92YXIvZXRjZC9kYXRhIgogICAgICB9CiAgICAgICAgXSwKICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAiaHR0cEdldCI6IHsKICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICJwb3J0IjogMjM3OSwKICAgICAgICAicGF0aCI6ICIvaGVhbHRoIgogICAgICB9LAogICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgfSwKICAgICJwb3J0cyI6IFsKICAgICAgeyAibmFtZSI6ICJzZXJ2ZXJwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzODAsCiAgICAgICAgImhvc3RQb3J0IjogMjM4MCAKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJjbGllbnRwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzNzksCiAgICAgICAgImhvc3RQb3J0IjogMjM3OQogICAgICB9CiAgICAgICAgXSwKICAgICJ2b2x1bWVNb3VudHMiOiBbCiAgICAgIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2V0Y2QiLAogICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsgIm5hbWUiOiAidmFybG9nZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJldGMiLAogICAgICAgICJtb3VudFBhdGgiOiAiL29wdC9ldGNkL2V0YyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfQogICAgXQogICAgfQpdLAoidm9sdW1lcyI6WwogIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgInBhdGgiOiAiL21udC9tYXN0ZXItcGQvdmFyL2V0Y2QifQogIH0sCiAgeyAibmFtZSI6ICJ2YXJsb2dldGNkIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInR5cGUiOiAiRmlsZU9yQ3JlYXRlIn0KICB9LAogIHsgIm5hbWUiOiAiZXRjIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvb3B0L2V0Y2QvZXRjIn0KICB9Cl0KfX0K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }"
                },
                "kube_dns_yaml": {
                    "sensitive": false,
                    "type": "string",
                    "value": "# Copyright 2016 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Should keep target in cluster/addons/dns-horizontal-autoscaler/dns-horizontal-autoscaler.yaml\n# in sync with this file.\n\n# Warning: This is a file generated from the base underscore template file: kube-dns.yaml.base\n\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"KubeDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: 10.110.50.10\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  # replicas: not specified here:\n  # 1. In order to make Addon Manager do not reconcile this replicas parameter.\n  # 2. Default is 1.\n  # 3. Will be tuned in real time if DNS horizontal auto-scaling is turned on.\n  strategy:\n    rollingUpdate:\n      maxSurge: 10%\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: ''\n    spec:\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                  - key: k8s-app\n                    operator: In\n                    values: [\"kube-dns\"]\n              topologyKey: kubernetes.io/hostname\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      volumes:\n      - name: kube-dns-config\n        configMap:\n          name: kube-dns\n          optional: true\n      containers:\n      - name: kubedns\n        image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.8\n        resources:\n          # TODO: Set memory limits when we've profiled the container for large\n          # clusters, then set request = limit to keep this container in\n          # guaranteed class. Currently, this container falls into the\n          # \"burstable\" category so the kubelet doesn't backoff from restarting it.\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/kubedns\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: /readiness\n            port: 8081\n            scheme: HTTP\n          # we poll on pod startup for the Kubernetes master service and\n          # only setup the /readiness HTTP server once that's available.\n          initialDelaySeconds: 3\n          timeoutSeconds: 5\n        args:\n        - --domain=k8s.local.\n        - --dns-port=10053\n        - --config-dir=/kube-dns-config\n        - --v=2\n        env:\n        - name: PROMETHEUS_PORT\n          value: \"10055\"\n        ports:\n        - containerPort: 10053\n          name: dns-local\n          protocol: UDP\n        - containerPort: 10053\n          name: dns-tcp-local\n          protocol: TCP\n        - containerPort: 10055\n          name: metrics\n          protocol: TCP\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /kube-dns-config\n      - name: dnsmasq\n        image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/dnsmasq\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - -v=2\n        - -logtostderr\n        - -configDir=/etc/k8s/dns/dnsmasq-nanny\n        - -restartDnsmasq=true\n        - --\n        - -k\n        - --cache-size=1000\n        - --no-negcache\n        - --log-facility=-\n        - --server=/k8s.local/127.0.0.1#10053\n        - --server=/in-addr.arpa/127.0.0.1#10053\n        - --server=/ip6.arpa/127.0.0.1#10053\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        # see: https://github.com/kubernetes/kubernetes/issues/29055 for details\n        resources:\n          requests:\n            cpu: 150m\n            memory: 20Mi\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /etc/k8s/dns/dnsmasq-nanny\n      - name: sidecar\n        image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /metrics\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - --v=2\n        - --logtostderr\n        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.k8s.local,5,SRV\n        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.k8s.local,5,SRV\n        ports:\n        - containerPort: 10054\n          name: metrics\n          protocol: TCP\n        resources:\n          requests:\n            memory: 20Mi\n            cpu: 10m\n      dnsPolicy: Default  # Don't use cluster DNS.\n      serviceAccountName: kube-dns"
                },
                "master": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/apiserver.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlBvZCIsCiAgImFwaVZlcnNpb24iOiAidjEiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtYXBpc2VydmVyIgogIH0sCiAgInNwZWMiOiB7CiAgICAiaG9zdE5ldHdvcmsiOiB0cnVlLAogICAgImNvbnRhaW5lcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJrdWJlLWFwaXNlcnZlciIsCiAgICAgICAgImltYWdlIjogImdjci5pby9nb29nbGUtY29udGFpbmVycy9oeXBlcmt1YmU6djEuOS4yIiwKICAgICAgICAiY29tbWFuZCI6IFsKICAgICAgICAgICIvaHlwZXJrdWJlIiwKICAgICAgICAgICJhcGlzZXJ2ZXIiLAogICAgICAgICAgIi0tYWRtaXNzaW9uLWNvbnRyb2w9TmFtZXNwYWNlTGlmZWN5Y2xlLExpbWl0UmFuZ2VyLFNlcnZpY2VBY2NvdW50LFBlcnNpc3RlbnRWb2x1bWVMYWJlbCxEZWZhdWx0U3RvcmFnZUNsYXNzLERlZmF1bHRUb2xlcmF0aW9uU2Vjb25kcyxNdXRhdGluZ0FkbWlzc2lvbldlYmhvb2ssVmFsaWRhdGluZ0FkbWlzc2lvbldlYmhvb2ssUmVzb3VyY2VRdW90YSIsCiAgICAgICAgICAiLS1hZHZlcnRpc2UtYWRkcmVzcz0xMC4xMDAuMTAwLjEwMCIsCiAgICAgICAgICAiLS1hbGxvdy1wcml2aWxlZ2VkPXRydWUiLAogICAgICAgICAgIi0tYmFzaWMtYXV0aC1maWxlPS9zcnYva3ViZXJuZXRlcy9iYXNpY19hdXRoLmNzdiIsCiAgICAgICAgICAiLS1iaW5kLWFkZHJlc3M9MTI3LjAuMC4xIiwKICAgICAgICAgICItLWNsaWVudC1jYS1maWxlPS9zcnYva3ViZXJuZXRlcy9jYS5jcnQiLAogICAgICAgICAgIi0tZXRjZC1zZXJ2ZXJzPWh0dHA6Ly8xMC4xMDAuNTAuMTAwOjIzNzksaHR0cDovLzEwLjEwMC41MC4xMDE6MjM3OSxodHRwOi8vMTAuMTAwLjUwLjEwMjoyMzc5IiwKICAgICAgICAgICItLWluc2VjdXJlLWJpbmQtYWRkcmVzcz0xMC4xMDAuMTAwLjEwMCIsCiAgICAgICAgICAiLS1zZXJ2aWNlLWFjY291bnQta2V5LWZpbGU9L3Nydi9rdWJlcm5ldGVzL3NlcnZlci5jcnQiLAogICAgICAgICAgIi0tc2VydmljZS1jbHVzdGVyLWlwLXJhbmdlPTEwLjExMC4wLjAvMTYiLAogICAgICAgICAgIi0tdG9rZW4tYXV0aC1maWxlPS9zcnYva3ViZXJuZXRlcy9rbm93bl90b2tlbnMuY3N2IgogICAgICAgIF0sCiAgICAgICAgInBvcnRzIjogWwogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJodHRwcyIsCiAgICAgICAgICAgICJob3N0UG9ydCI6IDQ0MywKICAgICAgICAgICAgImNvbnRhaW5lclBvcnQiOiA0NDMKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogImxvY2FsIiwKICAgICAgICAgICAgImhvc3RQb3J0IjogODA4MCwKICAgICAgICAgICAgImNvbnRhaW5lclBvcnQiOiA4MDgwCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAidm9sdW1lTW91bnRzIjogWwogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJzcnZrdWJlIiwKICAgICAgICAgICAgIm1vdW50UGF0aCI6ICIvc3J2L2t1YmVybmV0ZXMiLAogICAgICAgICAgICAicmVhZE9ubHkiOiB0cnVlCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJldGNzc2wiLAogICAgICAgICAgICAibW91bnRQYXRoIjogIi9ldGMvc3NsIiwKICAgICAgICAgICAgInJlYWRPbmx5IjogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAidmFybG9nIiwKICAgICAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZyIsCiAgICAgICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAibGl2ZW5lc3NQcm9iZSI6IHsKICAgICAgICAgICJodHRwR2V0IjogewogICAgICAgICAgICAic2NoZW1lIjogIkhUVFAiLAogICAgICAgICAgICAiaG9zdCI6ICIxMC4xMDAuMTAwLjEwMCIsCiAgICAgICAgICAgICJwb3J0IjogODA4MCwKICAgICAgICAgICAgInBhdGgiOiAiL2hlYWx0aHoiCiAgICAgICAgICB9LAogICAgICAgICAgImluaXRpYWxEZWxheVNlY29uZHMiOiAxMjAsCiAgICAgICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgICAgIH0KICAgICAgfQogICAgXSwKICAgICJ2b2x1bWVzIjogWwogICAgICB7CiAgICAgICAgIm5hbWUiOiAic3J2a3ViZSIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL3Nydi9rdWJlcm5ldGVzIgogICAgICAgIH0KICAgICAgfSwKICAgICAgewogICAgICAgICJuYW1lIjogImV0Y3NzbCIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL2V0Yy9zc2wiCiAgICAgICAgfQogICAgICB9LAogICAgICB7CiAgICAgICAgIm5hbWUiOiAidmFybG9nIiwKICAgICAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgICAicGF0aCI6ICIvb3B0L21hc3Rlci9sb2ciCiAgICAgICAgfQogICAgICB9CiAgICBdCiAgfQp9\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/scheduler.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlBvZCIsCiAgImFwaVZlcnNpb24iOiAidjEiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtc2NoZWR1bGVyIgogIH0sCiAgInNwZWMiOiB7CiAgICAiaG9zdE5ldHdvcmsiOiB0cnVlLAogICAgImNvbnRhaW5lcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJrdWJlLXNjaGVkdWxlciIsCiAgICAgICAgImltYWdlIjogImdjci5pby9nb29nbGUtY29udGFpbmVycy9oeXBlcmt1YmU6djEuOS4yIiwKICAgICAgICAiY29tbWFuZCI6IFsKICAgICAgICAgICIvaHlwZXJrdWJlIiwKICAgICAgICAgICJzY2hlZHVsZXIiLAogICAgICAgICAgIi0tbWFzdGVyPTEwLjEwMC4xMDAuMTAwOjgwODAiCiAgICAgICAgXSwKICAgICAgICAibGl2ZW5lc3NQcm9iZSI6IHsKICAgICAgICAgICJodHRwR2V0IjogewogICAgICAgICAgICAic2NoZW1lIjogIkhUVFAiLAogICAgICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICAgICAicG9ydCI6IDEwMjUxLAogICAgICAgICAgICAicGF0aCI6ICIvaGVhbHRoeiIKICAgICAgICAgIH0sCiAgICAgICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAgICAgInRpbWVvdXRTZWNvbmRzIjogMTUKICAgICAgICB9CiAgICAgIH0KICAgIF0KICB9Cn0=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/controller.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlBvZCIsCiAgImFwaVZlcnNpb24iOiAidjEiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtY29udHJvbGxlci1tYW5hZ2VyIgogIH0sCiAgInNwZWMiOiB7CiAgICAiaG9zdE5ldHdvcmsiOiB0cnVlLAogICAgImNvbnRhaW5lcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJrdWJlLWNvbnRyb2xsZXItbWFuYWdlciIsCiAgICAgICAgImltYWdlIjogImdjci5pby9nb29nbGUtY29udGFpbmVycy9oeXBlcmt1YmU6djEuOS4yIiwKICAgICAgICAiY29tbWFuZCI6IFsKICAgICAgICAgICIvaHlwZXJrdWJlIiwKICAgICAgICAgICJjb250cm9sbGVyLW1hbmFnZXIiLAogICAgICAgICAgIi0tYWxsb2NhdGUtbm9kZS1jaWRycz10cnVlIiwKICAgICAgICAgICItLWNsdXN0ZXItY2lkcj0xMC4xMjAuMC4wLzE2IiwKICAgICAgICAgICItLW1hc3Rlcj0xMC4xMDAuMTAwLjEwMDo4MDgwIiwKICAgICAgICAgICItLXNlcnZpY2UtYWNjb3VudC1wcml2YXRlLWtleS1maWxlPS9zcnYva3ViZXJuZXRlcy9zZXJ2ZXIua2V5IgogICAgICAgIF0sCiAgICAgICAgInZvbHVtZU1vdW50cyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAic3J2a3ViZSIsCiAgICAgICAgICAgICJtb3VudFBhdGgiOiAiL3Nydi9rdWJlcm5ldGVzIiwKICAgICAgICAgICAgInJlYWRPbmx5IjogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAiZXRjc3NsIiwKICAgICAgICAgICAgIm1vdW50UGF0aCI6ICIvZXRjL3NzbCIsCiAgICAgICAgICAgICJyZWFkT25seSI6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAgICAgImh0dHBHZXQiOiB7CiAgICAgICAgICAgICJzY2hlbWUiOiAiSFRUUCIsCiAgICAgICAgICAgICJob3N0IjogIjEyNy4wLjAuMSIsCiAgICAgICAgICAgICJwb3J0IjogMTAyNTIsCiAgICAgICAgICAgICJwYXRoIjogIi9oZWFsdGh6IgogICAgICAgICAgfSwKICAgICAgICAgICJpbml0aWFsRGVsYXlTZWNvbmRzIjogMTUsCiAgICAgICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgICAgIH0KICAgICAgfQogICAgXSwKICAgICJ2b2x1bWVzIjogWwogICAgICB7CiAgICAgICAgIm5hbWUiOiAic3J2a3ViZSIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL3Nydi9rdWJlcm5ldGVzIgogICAgICAgIH0KICAgICAgfSwKICAgICAgewogICAgICAgICJuYW1lIjogImV0Y3NzbCIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL2V0Yy9zc2wiCiAgICAgICAgfQogICAgICB9CiAgICBdCiAgfQp9\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/server.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXakNDQWtLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETTFNelphCkZ3MHhPVEF5TURReU1ETXlOVEJhTUJZeEZEQVNCZ05WQkFNVEMydDFZbVV0YldGemRHVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtOCszQ0RGZjczbzVRcjhWMnNBUGkvc1BXL3lWT1Q2agpYYThHUFVxQXU0cjZmS1QvMUNaNDZ6WjVkaFFBZzRaMTJrZnRnYllnUHYxNVY2VFVwbVlYZytQTWZ4NDNWQXgzClRYb24wR2FoTTZJcUpFTkNCcVdaOVY0OVhYa3lBWHFtY0l5dzcvbnM4WERoR2hwTjBHbHVqUHB2d0JuVStiY3UKZTNOSTc5Yk9jSklHQ3ZlaVUwbThSaHlEVGI2c2w4T1RwVCt4MC9CMXZvMXpQT3oxZXdoamtzR0pnN3FQV3kweApVak1SdmJsaHZjUWFLZmYzQTZjamcrU2MxSEZvWFFlaU1NSHd0N3NKYzMwbThPbTU2UjBRRnN2OEZmZ1FJVFVsCndUcXFVVk9DV0VhNWVxRDZsY1Rac3pIK2dtdzNIUzlVb3Z6YWZySmtvVlp5YVVoL3p0dVZWd0lEQVFBQm8yc3cKYVRBZkJnTlZIU01FR0RBV2dCVDNmNEt3VVY4RmRITlhlNXNNUzFyTitocXVpREFNQmdOVkhSTUJBZjhFQWpBQQpNQThHQTFVZER3RUIvd1FGQXdNSHVBQXdKd1lEVlIwbEJDQXdIZ1lJS3dZQkJRVUhBd1FHQ0NzR0FRVUZCd01DCkJnZ3JCZ0VGQlFjREFUQU5CZ2txaGtpRzl3MEJBUVVGQUFPQ0FRRUF1eFdCOVFRaUZ1ZHduOTFQWlVmRjdYUU0KRlVzT2RvVWxVL09XRVN1dk9JeHB2a1Q3bHpUSTlPZmdRSjJob2pNK3I5U0xuZVBNVHBIdFloaVN4N0NCZ1lFSQplZnM1akRnZldwLzB6dU9iYnBjUFlmNGlSYy93TG0rZCtGdGtBUUpSRVFhNTk5akJORWRDby9FbSswaGtVQkRhCmx6THUvakZ4QnkyaFNRUU9IbkM5Z2orRDBQVXpTN2ZHQzJ1ellpWjE0U2lPTGxEaG53anhFZ0hid05JRldYTGQKSnhXYWpKTWVKb2Zabk1ZS0x1b3VxVytmVVNFRkpuYWZ4MmFKcnB5Szk2ZGROOFpJaUdXaTBpakFuc1NVVDJhSQpLbXpMQkR6cEtwKzliSlN6dWRBbW9sZEk3U0JuSnpSNTl5RVZwajBPK3hGT01pL1NmeVRIbXRSZjFjanl4dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/server.key\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbTgrM0NERmY3M281UXI4VjJzQVBpL3NQVy95Vk9UNmpYYThHUFVxQXU0cjZmS1QvCjFDWjQ2elo1ZGhRQWc0WjEya2Z0Z2JZZ1B2MTVWNlRVcG1ZWGcrUE1meDQzVkF4M1RYb24wR2FoTTZJcUpFTkMKQnFXWjlWNDlYWGt5QVhxbWNJeXc3L25zOFhEaEdocE4wR2x1alBwdndCblUrYmN1ZTNOSTc5Yk9jSklHQ3ZlaQpVMG04Umh5RFRiNnNsOE9UcFQreDAvQjF2bzF6UE96MWV3aGprc0dKZzdxUFd5MHhVak1SdmJsaHZjUWFLZmYzCkE2Y2pnK1NjMUhGb1hRZWlNTUh3dDdzSmMzMG04T201NlIwUUZzdjhGZmdRSVRVbHdUcXFVVk9DV0VhNWVxRDYKbGNUWnN6SCtnbXczSFM5VW92emFmckprb1ZaeWFVaC96dHVWVndJREFRQUJBb0lCQVFDQ2ZKbDNkZ28yLzNBVwo4dnExZ1NWRUFOVGpINHhGTGEwWkZ5d3Roa2g3UjYveFZTbWZIVDBsRnpEdmIxN2l4MmZKajNWYnJSQWlVSnNmCmlENUN3THN1ekVjRnFtT0JzeEx5d3J1M0wwd1BkdDYrRWNtbzBXVTNkVjRFK3l1aXkzbTZSa2trSUhXTDJoSGEKajI3ZGZINkYrSEpBT2lIL282Wjg0cGFSclo2ajdJZ1F6NjZBZUdhQnhnczN6azFpU1lTeGNBSGt3QkpnNjlqdQpPK3hrTE84S2lZRGRWSkpIZU9TWDd2eVVneSt4T0tMUGJKYlVhWHJKOW1NU2dqamh5OGs4UkhHdVZXcDdVdkZECjNsQnBYUmNlMmdIQTh5R3NCZU91Ly9zeWNHTUI1aXRpTEZ5aFBKSENXbHBKWmNEUHhUNWY5NzhlcDdrRm1OR2kKaEExTzJpOWhBb0dCQU0zVGVlRGZ0OFV2L21Md0MvV253TDc5UTNlMStUZ1k5RVRYaTZpRWo5U0tDK2hBVVQxMgpLVVB1ZlNBNE9JVW85Y1F2MWc0ZnRTZzF1WStLbmxOT0Ntb0VRTE1qOTc2Sk9JTzAvdjNxYnVUVkQ5VHhzcjhNCkpMY3dnc2NnaElyTmdXNmppTnZkZ0F5ejhsTnd5dTJMcUd4VXNnKzZwODAzTjd6RDdQWEZmeUVuQW9HQkFNSEwKRmJVc256c0ZaZlRubjZhV0lEWVF5eDZub01jeWNmTlU1YXAwR1Ayc2M2a3dVWUt1MVlScE05cVE3OGhJOW9YMgpqWmFwMnNrQTVOaEFTaEpEdWFsZDVZY2hLazhteVJCS2Q0TEo2bHdHNWgvRWcyVklXdGZDZmhydnR5aUdjMkdjCkZsMzgrM1daQ2hkVUVXOU9DeTFMWXI5YTQrSkxMcktibitqSWJDaFJBb0dBQVFGSFZ4SEFrL1hvQ0JPaiswOFcKWWRoYXUvcm5mSjZpa3JONnV4ZnFtOThRcjlHZ2srdy94MVVpeDBWL0FTZHlDOE13Q0dHZlFOTUNWUEVZVk0vTQp2VGZJR1JmVDNkcE5yRmIxNThkOVF5REhNd0w3SEhPeXVqSkNjVFozYnpZUnE3aWdzbklpYmUxekFYVkxpRjFtCk5TRTB2VjdyOHRTU01SbkR6bTlvYjRFQ2dZQmphdUVmQ2Q1Q05CbkRFeFNITEpzbndXUEN2VEl4SHNMd2wwd2YKTHVJbk9WSTRxSzRZUWNNTjQ3NlRVU21COFZSdkV6WTk1Yk4wekwyWjV4bFkxMSttOEtHd3VpWHZaekZjNXliNgpkTVdESXBMcUZ6RmxRMEkvVCtyTHZOQ1V2S3p5bFZXd0wvbDhzZDlJYW50clEzbGVhajhsZGVaVWtFZExuNlRnCmtmbFNrUUtCZ0JpSFl0a2M4WTFBcVI0YldEV1J0RS8wRnhEYTNDQWtmRlBmRzZxVmg4MDJnMmJrK0dWNVMzYisKNE5OcnNobk4wejk3ekdtUm9UbmlqQVNnRzVXQ2dLb1ZLeFRuZVNkRDdNWHlKa2RHLzlycnpMd2YvbnhIcHVYcwpjRFpJQjNLRlJVRjZIbEpaeWttSlkxa1kzN0ZmNjFGNnRQT0hjSms5eVlZMy8vSm5XYlY1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/known_tokens.csv\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,OENVQnRPaXl1R29FQjZab3Nkb3FaUFg5VmJRSVJYZ0Esa3ViZWxldCxrdWJlbGV0CkZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0LGt1YmUtcHJveHksa3ViZS1wcm94eQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/basic_auth.csv\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,aEt1ZzA1STZUdGVOMTZYSUF3emNYU2s1ZDFIWmVOb0osYWRtaW4sYWRtaW4K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }"
                },
                "worker": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }"
                }
            },
            "resources": {},
            "depends_on": []
        },
        {
            "path": [
                "root",
                "client"
            ],
            "outputs": {
                "canal_yaml": {
                    "sensitive": false,
                    "type": "string",
                    "value": "# Canal Version v2.6.7\n# https://docs.projectcalico.org/v2.6/releases#v2.6.7\n# This manifest includes the following component versions:\n#   calico/node:v2.6.7\n#   calico/cni:v1.11.2\n#   coreos/flannel:v0.9.1\n\n# This ConfigMap can be used to configure a self-hosted Canal installation.\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  # The interface used by canal for host \u003c-\u003e host communication.\n  # If left blank, then the interface is chosen using the node's\n  # default route.\n  canal_iface: \"\"\n\n  # Whether or not to masquerade traffic to destinations not within\n  # the pod network.\n  masquerade: \"true\"\n\n  # The CNI network configuration to install on each node.\n  cni_network_config: |-\n    {\n        \"name\": \"k8s-pod-network\",\n        \"cniVersion\": \"0.3.0\",\n        \"plugins\": [\n            {\n                \"type\": \"calico\",\n                \"log_level\": \"info\",\n                \"datastore_type\": \"kubernetes\",\n                \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n                \"ipam\": {\n                    \"type\": \"host-local\",\n                    \"subnet\": \"usePodCidr\"\n                },\n                \"policy\": {\n                    \"type\": \"k8s\",\n                    \"k8s_auth_token\": \"__SERVICEACCOUNT_TOKEN__\"\n                },\n                \"kubernetes\": {\n                    \"k8s_api_root\": \"https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__\",\n                    \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n                }\n            },\n            {\n                \"type\": \"portmap\",\n                \"capabilities\": {\"portMappings\": true},\n                \"snat\": true\n            }\n        ]\n    }\n\n  # Flannel network configuration. Mounted into the flannel container.\n  net-conf.json: |\n    {\n      \"Network\": \"10.120.0.0/16\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\n# This manifest installs the calico/node container, as well\n# as the Calico CNI plugins and network config on\n# each master and worker node in a Kubernetes cluster.\nkind: DaemonSet\napiVersion: extensions/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: ''\n    spec:\n      hostNetwork: true\n      serviceAccountName: canal\n      tolerations:\n        # Tolerate this effect so the pods will be schedulable at all times\n        - effect: NoSchedule\n          operator: Exists\n        # Mark the pod as a critical add-on for rescheduling.\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n        - effect: NoExecute\n          operator: Exists\n      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a \"force\n      # deletion\": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.\n      terminationGracePeriodSeconds: 0\n      containers:\n        # Runs calico/node container on each Kubernetes node.  This\n        # container programs network policy and routes on each\n        # host.\n        - name: calico-node\n          image: quay.io/calico/node:v2.6.7\n          env:\n            # Use Kubernetes API as the backing datastore.\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            # Enable felix logging.\n            - name: FELIX_LOGSEVERITYSYS\n              value: \"info\"\n            # Don't enable BGP.\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            # Cluster type to identify the deployment type\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            # Disable file logging so `kubectl logs` works.\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            # Period, in seconds, at which felix re-applies all iptables state\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            # Disable IPV6 support in Felix.\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            # Wait for the datastore.\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            # No IP address needed.\n            - name: IP\n              value: \"\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            # Set Felix endpoint to host default action to ACCEPT.\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: /liveness\n              port: 9099\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: /readiness\n              port: 9099\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: /lib/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: /var/run/calico\n              name: var-run-calico\n              readOnly: false\n        # This container installs the Calico CNI binaries\n        # and CNI network config file on each node.\n        - name: install-cni\n          image: quay.io/calico/cni:v1.11.2\n          command: [\"/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            # The CNI network config to install on each node.\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n          volumeMounts:\n            - mountPath: /host/opt/cni/bin\n              name: cni-bin-dir\n            - mountPath: /host/etc/cni/net.d\n              name: cni-net-dir\n        # This container runs flannel using the kube-subnet-mgr backend\n        # for allocating subnets.\n        - name: kube-flannel\n          image: quay.io/coreos/flannel:v0.9.1\n          command: [ \"/opt/bin/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - name: run\n            mountPath: /run\n          - name: flannel-cfg\n            mountPath: /etc/kube-flannel/\n      volumes:\n        # Used by calico/node.\n        - name: lib-modules\n          hostPath:\n            path: /lib/modules\n        - name: var-run-calico\n          hostPath:\n            path: /var/run/calico\n        # Used to install CNI.\n        - name: cni-bin-dir\n          hostPath:\n            path: /opt/cni/bin\n        - name: cni-net-dir\n          hostPath:\n            path: /etc/cni/net.d\n        # Used by flannel.\n        - name: run\n          hostPath:\n            path: /run\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n\n\n# Create all the CustomResourceDefinitions needed for\n# Calico policy-only mode.\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global Felix Configuration\nkind: CustomResourceDefinition\nmetadata:\n   name: globalfelixconfigs.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalFelixConfig\n    plural: globalfelixconfigs\n    singular: globalfelixconfig\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global BGP Configuration\nkind: CustomResourceDefinition\nmetadata:\n  name: globalbgpconfigs.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalBGPConfig\n    plural: globalbgpconfigs\n    singular: globalbgpconfig\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico IP Pools\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global Network Policies\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n"
                },
                "coredns_yaml": {
                    "sensitive": false,
                    "type": "string",
                    "value": "# Warning: This is a file generated from the base underscore template file: coredns.yaml.base\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io/cluster-service: \"true\"\n      addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes k8s.local 10.110.0.0/16 {\n            pods insecure\n            upstream /etc/resolv.conf\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        proxy . /etc/resolv.conf\n        cache 30\n    }\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: coredns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"CoreDNS\"\nspec:\n  replicas: 2\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: coredns\n  template:\n    metadata:\n      labels:\n        k8s-app: coredns\n    spec:\n      serviceAccountName: coredns\n      tolerations:\n        - key: node-role.kubernetes.io/master\n          effect: NoSchedule\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: k8s-app\n                  operator: In\n                  values:\n                  - coredns\n              topologyKey: kubernetes.io/hostname\n      containers:\n      - name: coredns\n        image: coredns/coredns:1.0.4\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"/etc/coredns/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: /etc/coredns\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: coredns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: coredns\n  clusterIP: 10.110.50.10\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP"
                },
                "kube_dns_yaml": {
                    "sensitive": false,
                    "type": "string",
                    "value": "# Copyright 2016 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Should keep target in cluster/addons/dns-horizontal-autoscaler/dns-horizontal-autoscaler.yaml\n# in sync with this file.\n\n# Warning: This is a file generated from the base underscore template file: kube-dns.yaml.base\n\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"KubeDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: 10.110.50.10\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  # replicas: not specified here:\n  # 1. In order to make Addon Manager do not reconcile this replicas parameter.\n  # 2. Default is 1.\n  # 3. Will be tuned in real time if DNS horizontal auto-scaling is turned on.\n  strategy:\n    rollingUpdate:\n      maxSurge: 10%\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: ''\n    spec:\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                  - key: k8s-app\n                    operator: In\n                    values: [\"kube-dns\"]\n              topologyKey: kubernetes.io/hostname\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      volumes:\n      - name: kube-dns-config\n        configMap:\n          name: kube-dns\n          optional: true\n      containers:\n      - name: kubedns\n        image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.8\n        resources:\n          # TODO: Set memory limits when we've profiled the container for large\n          # clusters, then set request = limit to keep this container in\n          # guaranteed class. Currently, this container falls into the\n          # \"burstable\" category so the kubelet doesn't backoff from restarting it.\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/kubedns\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: /readiness\n            port: 8081\n            scheme: HTTP\n          # we poll on pod startup for the Kubernetes master service and\n          # only setup the /readiness HTTP server once that's available.\n          initialDelaySeconds: 3\n          timeoutSeconds: 5\n        args:\n        - --domain=k8s.local.\n        - --dns-port=10053\n        - --config-dir=/kube-dns-config\n        - --v=2\n        env:\n        - name: PROMETHEUS_PORT\n          value: \"10055\"\n        ports:\n        - containerPort: 10053\n          name: dns-local\n          protocol: UDP\n        - containerPort: 10053\n          name: dns-tcp-local\n          protocol: TCP\n        - containerPort: 10055\n          name: metrics\n          protocol: TCP\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /kube-dns-config\n      - name: dnsmasq\n        image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/dnsmasq\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - -v=2\n        - -logtostderr\n        - -configDir=/etc/k8s/dns/dnsmasq-nanny\n        - -restartDnsmasq=true\n        - --\n        - -k\n        - --cache-size=1000\n        - --no-negcache\n        - --log-facility=-\n        - --server=/k8s.local/127.0.0.1#10053\n        - --server=/in-addr.arpa/127.0.0.1#10053\n        - --server=/ip6.arpa/127.0.0.1#10053\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        # see: https://github.com/kubernetes/kubernetes/issues/29055 for details\n        resources:\n          requests:\n            cpu: 150m\n            memory: 20Mi\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /etc/k8s/dns/dnsmasq-nanny\n      - name: sidecar\n        image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /metrics\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - --v=2\n        - --logtostderr\n        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.k8s.local,5,SRV\n        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.k8s.local,5,SRV\n        ports:\n        - containerPort: 10054\n          name: metrics\n          protocol: TCP\n        resources:\n          requests:\n            memory: 20Mi\n            cpu: 10m\n      dnsPolicy: Default  # Don't use cluster DNS.\n      serviceAccountName: kube-dns"
                },
                "kubeconfig": {
                    "sensitive": false,
                    "type": "string",
                    "value": "apiVersion: v1\nkind: Config\nusers:\n- name: admin\n  user:\n    token: hKug05I6TteN16XIAwzcXSk5d1HZeNoJ\nclusters:\n- name: local\n  cluster:\n    insecure-skip-tls-verify: true\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: admin\n  name: local-cluster-context\ncurrent-context: local-cluster-context\n"
                }
            },
            "resources": {
                "data.template_file.canal_yaml": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "cbac75cbbd1538af71c5b2ce016cbf44e4438a9c04ec0750edc64cdf5d86e016",
                        "attributes": {
                            "id": "cbac75cbbd1538af71c5b2ce016cbf44e4438a9c04ec0750edc64cdf5d86e016",
                            "rendered": "# Canal Version v2.6.7\n# https://docs.projectcalico.org/v2.6/releases#v2.6.7\n# This manifest includes the following component versions:\n#   calico/node:v2.6.7\n#   calico/cni:v1.11.2\n#   coreos/flannel:v0.9.1\n\n# This ConfigMap can be used to configure a self-hosted Canal installation.\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  # The interface used by canal for host \u003c-\u003e host communication.\n  # If left blank, then the interface is chosen using the node's\n  # default route.\n  canal_iface: \"\"\n\n  # Whether or not to masquerade traffic to destinations not within\n  # the pod network.\n  masquerade: \"true\"\n\n  # The CNI network configuration to install on each node.\n  cni_network_config: |-\n    {\n        \"name\": \"k8s-pod-network\",\n        \"cniVersion\": \"0.3.0\",\n        \"plugins\": [\n            {\n                \"type\": \"calico\",\n                \"log_level\": \"info\",\n                \"datastore_type\": \"kubernetes\",\n                \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n                \"ipam\": {\n                    \"type\": \"host-local\",\n                    \"subnet\": \"usePodCidr\"\n                },\n                \"policy\": {\n                    \"type\": \"k8s\",\n                    \"k8s_auth_token\": \"__SERVICEACCOUNT_TOKEN__\"\n                },\n                \"kubernetes\": {\n                    \"k8s_api_root\": \"https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__\",\n                    \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n                }\n            },\n            {\n                \"type\": \"portmap\",\n                \"capabilities\": {\"portMappings\": true},\n                \"snat\": true\n            }\n        ]\n    }\n\n  # Flannel network configuration. Mounted into the flannel container.\n  net-conf.json: |\n    {\n      \"Network\": \"10.120.0.0/16\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\n# This manifest installs the calico/node container, as well\n# as the Calico CNI plugins and network config on\n# each master and worker node in a Kubernetes cluster.\nkind: DaemonSet\napiVersion: extensions/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: ''\n    spec:\n      hostNetwork: true\n      serviceAccountName: canal\n      tolerations:\n        # Tolerate this effect so the pods will be schedulable at all times\n        - effect: NoSchedule\n          operator: Exists\n        # Mark the pod as a critical add-on for rescheduling.\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n        - effect: NoExecute\n          operator: Exists\n      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a \"force\n      # deletion\": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.\n      terminationGracePeriodSeconds: 0\n      containers:\n        # Runs calico/node container on each Kubernetes node.  This\n        # container programs network policy and routes on each\n        # host.\n        - name: calico-node\n          image: quay.io/calico/node:v2.6.7\n          env:\n            # Use Kubernetes API as the backing datastore.\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            # Enable felix logging.\n            - name: FELIX_LOGSEVERITYSYS\n              value: \"info\"\n            # Don't enable BGP.\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            # Cluster type to identify the deployment type\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            # Disable file logging so `kubectl logs` works.\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            # Period, in seconds, at which felix re-applies all iptables state\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            # Disable IPV6 support in Felix.\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            # Wait for the datastore.\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            # No IP address needed.\n            - name: IP\n              value: \"\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            # Set Felix endpoint to host default action to ACCEPT.\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: /liveness\n              port: 9099\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: /readiness\n              port: 9099\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: /lib/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: /var/run/calico\n              name: var-run-calico\n              readOnly: false\n        # This container installs the Calico CNI binaries\n        # and CNI network config file on each node.\n        - name: install-cni\n          image: quay.io/calico/cni:v1.11.2\n          command: [\"/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            # The CNI network config to install on each node.\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n          volumeMounts:\n            - mountPath: /host/opt/cni/bin\n              name: cni-bin-dir\n            - mountPath: /host/etc/cni/net.d\n              name: cni-net-dir\n        # This container runs flannel using the kube-subnet-mgr backend\n        # for allocating subnets.\n        - name: kube-flannel\n          image: quay.io/coreos/flannel:v0.9.1\n          command: [ \"/opt/bin/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - name: run\n            mountPath: /run\n          - name: flannel-cfg\n            mountPath: /etc/kube-flannel/\n      volumes:\n        # Used by calico/node.\n        - name: lib-modules\n          hostPath:\n            path: /lib/modules\n        - name: var-run-calico\n          hostPath:\n            path: /var/run/calico\n        # Used to install CNI.\n        - name: cni-bin-dir\n          hostPath:\n            path: /opt/cni/bin\n        - name: cni-net-dir\n          hostPath:\n            path: /etc/cni/net.d\n        # Used by flannel.\n        - name: run\n          hostPath:\n            path: /run\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n\n\n# Create all the CustomResourceDefinitions needed for\n# Calico policy-only mode.\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global Felix Configuration\nkind: CustomResourceDefinition\nmetadata:\n   name: globalfelixconfigs.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalFelixConfig\n    plural: globalfelixconfigs\n    singular: globalfelixconfig\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global BGP Configuration\nkind: CustomResourceDefinition\nmetadata:\n  name: globalbgpconfigs.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalBGPConfig\n    plural: globalbgpconfigs\n    singular: globalbgpconfig\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico IP Pools\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global Network Policies\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n",
                            "template": "# Canal Version v2.6.7\n# https://docs.projectcalico.org/v2.6/releases#v2.6.7\n# This manifest includes the following component versions:\n#   calico/node:v2.6.7\n#   calico/cni:v1.11.2\n#   coreos/flannel:v0.9.1\n\n# This ConfigMap can be used to configure a self-hosted Canal installation.\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: canal-config\n  namespace: kube-system\ndata:\n  # The interface used by canal for host \u003c-\u003e host communication.\n  # If left blank, then the interface is chosen using the node's\n  # default route.\n  canal_iface: \"\"\n\n  # Whether or not to masquerade traffic to destinations not within\n  # the pod network.\n  masquerade: \"true\"\n\n  # The CNI network configuration to install on each node.\n  cni_network_config: |-\n    {\n        \"name\": \"k8s-pod-network\",\n        \"cniVersion\": \"0.3.0\",\n        \"plugins\": [\n            {\n                \"type\": \"calico\",\n                \"log_level\": \"info\",\n                \"datastore_type\": \"kubernetes\",\n                \"nodename\": \"__KUBERNETES_NODE_NAME__\",\n                \"ipam\": {\n                    \"type\": \"host-local\",\n                    \"subnet\": \"usePodCidr\"\n                },\n                \"policy\": {\n                    \"type\": \"k8s\",\n                    \"k8s_auth_token\": \"__SERVICEACCOUNT_TOKEN__\"\n                },\n                \"kubernetes\": {\n                    \"k8s_api_root\": \"https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__\",\n                    \"kubeconfig\": \"__KUBECONFIG_FILEPATH__\"\n                }\n            },\n            {\n                \"type\": \"portmap\",\n                \"capabilities\": {\"portMappings\": true},\n                \"snat\": true\n            }\n        ]\n    }\n\n  # Flannel network configuration. Mounted into the flannel container.\n  net-conf.json: |\n    {\n      \"Network\": \"${pod_cidr}\",\n      \"Backend\": {\n        \"Type\": \"vxlan\"\n      }\n    }\n\n---\n\n# This manifest installs the calico/node container, as well\n# as the Calico CNI plugins and network config on\n# each master and worker node in a Kubernetes cluster.\nkind: DaemonSet\napiVersion: extensions/v1beta1\nmetadata:\n  name: canal\n  namespace: kube-system\n  labels:\n    k8s-app: canal\nspec:\n  selector:\n    matchLabels:\n      k8s-app: canal\n  template:\n    metadata:\n      labels:\n        k8s-app: canal\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: ''\n    spec:\n      hostNetwork: true\n      serviceAccountName: canal\n      tolerations:\n        # Tolerate this effect so the pods will be schedulable at all times\n        - effect: NoSchedule\n          operator: Exists\n        # Mark the pod as a critical add-on for rescheduling.\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n        - effect: NoExecute\n          operator: Exists\n      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a \"force\n      # deletion\": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.\n      terminationGracePeriodSeconds: 0\n      containers:\n        # Runs calico/node container on each Kubernetes node.  This\n        # container programs network policy and routes on each\n        # host.\n        - name: calico-node\n          image: quay.io/calico/node:v2.6.7\n          env:\n            # Use Kubernetes API as the backing datastore.\n            - name: DATASTORE_TYPE\n              value: \"kubernetes\"\n            # Enable felix logging.\n            - name: FELIX_LOGSEVERITYSYS\n              value: \"info\"\n            # Don't enable BGP.\n            - name: CALICO_NETWORKING_BACKEND\n              value: \"none\"\n            # Cluster type to identify the deployment type\n            - name: CLUSTER_TYPE\n              value: \"k8s,canal\"\n            # Disable file logging so `kubectl logs` works.\n            - name: CALICO_DISABLE_FILE_LOGGING\n              value: \"true\"\n            # Period, in seconds, at which felix re-applies all iptables state\n            - name: FELIX_IPTABLESREFRESHINTERVAL\n              value: \"60\"\n            # Disable IPV6 support in Felix.\n            - name: FELIX_IPV6SUPPORT\n              value: \"false\"\n            # Wait for the datastore.\n            - name: WAIT_FOR_DATASTORE\n              value: \"true\"\n            # No IP address needed.\n            - name: IP\n              value: \"\"\n            - name: NODENAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n            # Set Felix endpoint to host default action to ACCEPT.\n            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION\n              value: \"ACCEPT\"\n            - name: FELIX_HEALTHENABLED\n              value: \"true\"\n          securityContext:\n            privileged: true\n          resources:\n            requests:\n              cpu: 250m\n          livenessProbe:\n            httpGet:\n              path: /liveness\n              port: 9099\n            periodSeconds: 10\n            initialDelaySeconds: 10\n            failureThreshold: 6\n          readinessProbe:\n            httpGet:\n              path: /readiness\n              port: 9099\n            periodSeconds: 10\n          volumeMounts:\n            - mountPath: /lib/modules\n              name: lib-modules\n              readOnly: true\n            - mountPath: /var/run/calico\n              name: var-run-calico\n              readOnly: false\n        # This container installs the Calico CNI binaries\n        # and CNI network config file on each node.\n        - name: install-cni\n          image: quay.io/calico/cni:v1.11.2\n          command: [\"/install-cni.sh\"]\n          env:\n            - name: CNI_CONF_NAME\n              value: \"10-calico.conflist\"\n            # The CNI network config to install on each node.\n            - name: CNI_NETWORK_CONFIG\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: cni_network_config\n            - name: KUBERNETES_NODE_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: spec.nodeName\n          volumeMounts:\n            - mountPath: /host/opt/cni/bin\n              name: cni-bin-dir\n            - mountPath: /host/etc/cni/net.d\n              name: cni-net-dir\n        # This container runs flannel using the kube-subnet-mgr backend\n        # for allocating subnets.\n        - name: kube-flannel\n          image: quay.io/coreos/flannel:v0.9.1\n          command: [ \"/opt/bin/flanneld\", \"--ip-masq\", \"--kube-subnet-mgr\" ]\n          securityContext:\n            privileged: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: FLANNELD_IFACE\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: canal_iface\n            - name: FLANNELD_IP_MASQ\n              valueFrom:\n                configMapKeyRef:\n                  name: canal-config\n                  key: masquerade\n          volumeMounts:\n          - name: run\n            mountPath: /run\n          - name: flannel-cfg\n            mountPath: /etc/kube-flannel/\n      volumes:\n        # Used by calico/node.\n        - name: lib-modules\n          hostPath:\n            path: /lib/modules\n        - name: var-run-calico\n          hostPath:\n            path: /var/run/calico\n        # Used to install CNI.\n        - name: cni-bin-dir\n          hostPath:\n            path: /opt/cni/bin\n        - name: cni-net-dir\n          hostPath:\n            path: /etc/cni/net.d\n        # Used by flannel.\n        - name: run\n          hostPath:\n            path: /run\n        - name: flannel-cfg\n          configMap:\n            name: canal-config\n\n\n# Create all the CustomResourceDefinitions needed for\n# Calico policy-only mode.\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global Felix Configuration\nkind: CustomResourceDefinition\nmetadata:\n   name: globalfelixconfigs.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalFelixConfig\n    plural: globalfelixconfigs\n    singular: globalfelixconfig\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global BGP Configuration\nkind: CustomResourceDefinition\nmetadata:\n  name: globalbgpconfigs.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalBGPConfig\n    plural: globalbgpconfigs\n    singular: globalbgpconfig\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico IP Pools\nkind: CustomResourceDefinition\nmetadata:\n  name: ippools.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: IPPool\n    plural: ippools\n    singular: ippool\n\n---\n\napiVersion: apiextensions.k8s.io/v1beta1\ndescription: Calico Global Network Policies\nkind: CustomResourceDefinition\nmetadata:\n  name: globalnetworkpolicies.crd.projectcalico.org\nspec:\n  scope: Cluster\n  group: crd.projectcalico.org\n  version: v1\n  names:\n    kind: GlobalNetworkPolicy\n    plural: globalnetworkpolicies\n    singular: globalnetworkpolicy\n\n---\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: canal\n  namespace: kube-system\n",
                            "vars.%": "1",
                            "vars.pod_cidr": "10.120.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.coredns_yaml": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "10247b375014ef47600bd0b493ed7fd4f823c9026c94e06744ce13d77d7b8b3c",
                        "attributes": {
                            "id": "10247b375014ef47600bd0b493ed7fd4f823c9026c94e06744ce13d77d7b8b3c",
                            "rendered": "# Warning: This is a file generated from the base underscore template file: coredns.yaml.base\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io/cluster-service: \"true\"\n      addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes k8s.local 10.110.0.0/16 {\n            pods insecure\n            upstream /etc/resolv.conf\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        proxy . /etc/resolv.conf\n        cache 30\n    }\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: coredns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"CoreDNS\"\nspec:\n  replicas: 2\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: coredns\n  template:\n    metadata:\n      labels:\n        k8s-app: coredns\n    spec:\n      serviceAccountName: coredns\n      tolerations:\n        - key: node-role.kubernetes.io/master\n          effect: NoSchedule\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: k8s-app\n                  operator: In\n                  values:\n                  - coredns\n              topologyKey: kubernetes.io/hostname\n      containers:\n      - name: coredns\n        image: coredns/coredns:1.0.4\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"/etc/coredns/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: /etc/coredns\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: coredns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: coredns\n  clusterIP: 10.110.50.10\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP",
                            "template": "# Warning: This is a file generated from the base underscore template file: coredns.yaml.base\n\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      kubernetes.io/cluster-service: \"true\"\n      addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io/mode: Reconcile\n  name: system:coredns\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - endpoints\n  - services\n  - pods\n  - namespaces\n  verbs:\n  - list\n  - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    addonmanager.kubernetes.io/mode: EnsureExists\n  name: system:coredns\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:coredns\nsubjects:\n- kind: ServiceAccount\n  name: coredns\n  namespace: kube-system\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n      addonmanager.kubernetes.io/mode: EnsureExists\ndata:\n  Corefile: |\n    .:53 {\n        errors\n        health\n        kubernetes ${cluster_domain} ${service_cluster_ip_range} {\n            pods insecure\n            upstream /etc/resolv.conf\n            fallthrough in-addr.arpa ip6.arpa\n        }\n        prometheus :9153\n        proxy . /etc/resolv.conf\n        cache 30\n    }\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: coredns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"CoreDNS\"\nspec:\n  replicas: 2\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxUnavailable: 1\n  selector:\n    matchLabels:\n      k8s-app: coredns\n  template:\n    metadata:\n      labels:\n        k8s-app: coredns\n    spec:\n      serviceAccountName: coredns\n      tolerations:\n        - key: node-role.kubernetes.io/master\n          effect: NoSchedule\n        - key: \"CriticalAddonsOnly\"\n          operator: \"Exists\"\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                - key: k8s-app\n                  operator: In\n                  values:\n                  - coredns\n              topologyKey: kubernetes.io/hostname\n      containers:\n      - name: coredns\n        image: coredns/coredns:1.0.4\n        imagePullPolicy: IfNotPresent\n        resources:\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        args: [ \"-conf\", \"/etc/coredns/Corefile\" ]\n        volumeMounts:\n        - name: config-volume\n          mountPath: /etc/coredns\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n      dnsPolicy: Default\n      volumes:\n        - name: config-volume\n          configMap:\n            name: coredns\n            items:\n            - key: Corefile\n              path: Corefile\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: coredns\n  namespace: kube-system\n  labels:\n    k8s-app: coredns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"CoreDNS\"\nspec:\n  selector:\n    k8s-app: coredns\n  clusterIP: ${cluster_dns_ip}\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP",
                            "vars.%": "3",
                            "vars.cluster_dns_ip": "10.110.50.10",
                            "vars.cluster_domain": "k8s.local",
                            "vars.service_cluster_ip_range": "10.110.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_dns_yaml": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "6413131320f6c47b70f730a97aaf743403728ecd91048b47ae6ddef2ae145d29",
                        "attributes": {
                            "id": "6413131320f6c47b70f730a97aaf743403728ecd91048b47ae6ddef2ae145d29",
                            "rendered": "# Copyright 2016 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Should keep target in cluster/addons/dns-horizontal-autoscaler/dns-horizontal-autoscaler.yaml\n# in sync with this file.\n\n# Warning: This is a file generated from the base underscore template file: kube-dns.yaml.base\n\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"KubeDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: 10.110.50.10\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  # replicas: not specified here:\n  # 1. In order to make Addon Manager do not reconcile this replicas parameter.\n  # 2. Default is 1.\n  # 3. Will be tuned in real time if DNS horizontal auto-scaling is turned on.\n  strategy:\n    rollingUpdate:\n      maxSurge: 10%\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: ''\n    spec:\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                  - key: k8s-app\n                    operator: In\n                    values: [\"kube-dns\"]\n              topologyKey: kubernetes.io/hostname\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      volumes:\n      - name: kube-dns-config\n        configMap:\n          name: kube-dns\n          optional: true\n      containers:\n      - name: kubedns\n        image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.8\n        resources:\n          # TODO: Set memory limits when we've profiled the container for large\n          # clusters, then set request = limit to keep this container in\n          # guaranteed class. Currently, this container falls into the\n          # \"burstable\" category so the kubelet doesn't backoff from restarting it.\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/kubedns\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: /readiness\n            port: 8081\n            scheme: HTTP\n          # we poll on pod startup for the Kubernetes master service and\n          # only setup the /readiness HTTP server once that's available.\n          initialDelaySeconds: 3\n          timeoutSeconds: 5\n        args:\n        - --domain=k8s.local.\n        - --dns-port=10053\n        - --config-dir=/kube-dns-config\n        - --v=2\n        env:\n        - name: PROMETHEUS_PORT\n          value: \"10055\"\n        ports:\n        - containerPort: 10053\n          name: dns-local\n          protocol: UDP\n        - containerPort: 10053\n          name: dns-tcp-local\n          protocol: TCP\n        - containerPort: 10055\n          name: metrics\n          protocol: TCP\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /kube-dns-config\n      - name: dnsmasq\n        image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/dnsmasq\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - -v=2\n        - -logtostderr\n        - -configDir=/etc/k8s/dns/dnsmasq-nanny\n        - -restartDnsmasq=true\n        - --\n        - -k\n        - --cache-size=1000\n        - --no-negcache\n        - --log-facility=-\n        - --server=/k8s.local/127.0.0.1#10053\n        - --server=/in-addr.arpa/127.0.0.1#10053\n        - --server=/ip6.arpa/127.0.0.1#10053\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        # see: https://github.com/kubernetes/kubernetes/issues/29055 for details\n        resources:\n          requests:\n            cpu: 150m\n            memory: 20Mi\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /etc/k8s/dns/dnsmasq-nanny\n      - name: sidecar\n        image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /metrics\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - --v=2\n        - --logtostderr\n        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.k8s.local,5,SRV\n        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.k8s.local,5,SRV\n        ports:\n        - containerPort: 10054\n          name: metrics\n          protocol: TCP\n        resources:\n          requests:\n            memory: 20Mi\n            cpu: 10m\n      dnsPolicy: Default  # Don't use cluster DNS.\n      serviceAccountName: kube-dns",
                            "template": "# Copyright 2016 The Kubernetes Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Should keep target in cluster/addons/dns-horizontal-autoscaler/dns-horizontal-autoscaler.yaml\n# in sync with this file.\n\n# Warning: This is a file generated from the base underscore template file: kube-dns.yaml.base\n\napiVersion: v1\nkind: Service\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n    kubernetes.io/name: \"KubeDNS\"\nspec:\n  selector:\n    k8s-app: kube-dns\n  clusterIP: ${cluster_dns_ip}\n  ports:\n  - name: dns\n    port: 53\n    protocol: UDP\n  - name: dns-tcp\n    port: 53\n    protocol: TCP\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\n---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    addonmanager.kubernetes.io/mode: EnsureExists\n---\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: kube-dns\n  namespace: kube-system\n  labels:\n    k8s-app: kube-dns\n    kubernetes.io/cluster-service: \"true\"\n    addonmanager.kubernetes.io/mode: Reconcile\nspec:\n  # replicas: not specified here:\n  # 1. In order to make Addon Manager do not reconcile this replicas parameter.\n  # 2. Default is 1.\n  # 3. Will be tuned in real time if DNS horizontal auto-scaling is turned on.\n  strategy:\n    rollingUpdate:\n      maxSurge: 10%\n      maxUnavailable: 0\n  selector:\n    matchLabels:\n      k8s-app: kube-dns\n  template:\n    metadata:\n      labels:\n        k8s-app: kube-dns\n      annotations:\n        scheduler.alpha.kubernetes.io/critical-pod: ''\n    spec:\n      affinity:\n        podAntiAffinity:\n          preferredDuringSchedulingIgnoredDuringExecution:\n          - weight: 100\n            podAffinityTerm:\n              labelSelector:\n                matchExpressions:\n                  - key: k8s-app\n                    operator: In\n                    values: [\"kube-dns\"]\n              topologyKey: kubernetes.io/hostname\n      tolerations:\n      - key: \"CriticalAddonsOnly\"\n        operator: \"Exists\"\n      volumes:\n      - name: kube-dns-config\n        configMap:\n          name: kube-dns\n          optional: true\n      containers:\n      - name: kubedns\n        image: gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.8\n        resources:\n          # TODO: Set memory limits when we've profiled the container for large\n          # clusters, then set request = limit to keep this container in\n          # guaranteed class. Currently, this container falls into the\n          # \"burstable\" category so the kubelet doesn't backoff from restarting it.\n          limits:\n            memory: 170Mi\n          requests:\n            cpu: 100m\n            memory: 70Mi\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/kubedns\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        readinessProbe:\n          httpGet:\n            path: /readiness\n            port: 8081\n            scheme: HTTP\n          # we poll on pod startup for the Kubernetes master service and\n          # only setup the /readiness HTTP server once that's available.\n          initialDelaySeconds: 3\n          timeoutSeconds: 5\n        args:\n        - --domain=${cluster_domain}.\n        - --dns-port=10053\n        - --config-dir=/kube-dns-config\n        - --v=2\n        env:\n        - name: PROMETHEUS_PORT\n          value: \"10055\"\n        ports:\n        - containerPort: 10053\n          name: dns-local\n          protocol: UDP\n        - containerPort: 10053\n          name: dns-tcp-local\n          protocol: TCP\n        - containerPort: 10055\n          name: metrics\n          protocol: TCP\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /kube-dns-config\n      - name: dnsmasq\n        image: gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /healthcheck/dnsmasq\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - -v=2\n        - -logtostderr\n        - -configDir=/etc/k8s/dns/dnsmasq-nanny\n        - -restartDnsmasq=true\n        - --\n        - -k\n        - --cache-size=1000\n        - --no-negcache\n        - --log-facility=-\n        - --server=/${cluster_domain}/127.0.0.1#10053\n        - --server=/in-addr.arpa/127.0.0.1#10053\n        - --server=/ip6.arpa/127.0.0.1#10053\n        ports:\n        - containerPort: 53\n          name: dns\n          protocol: UDP\n        - containerPort: 53\n          name: dns-tcp\n          protocol: TCP\n        # see: https://github.com/kubernetes/kubernetes/issues/29055 for details\n        resources:\n          requests:\n            cpu: 150m\n            memory: 20Mi\n        volumeMounts:\n        - name: kube-dns-config\n          mountPath: /etc/k8s/dns/dnsmasq-nanny\n      - name: sidecar\n        image: gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.8\n        livenessProbe:\n          httpGet:\n            path: /metrics\n            port: 10054\n            scheme: HTTP\n          initialDelaySeconds: 60\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 5\n        args:\n        - --v=2\n        - --logtostderr\n        - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.${cluster_domain},5,SRV\n        - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.${cluster_domain},5,SRV\n        ports:\n        - containerPort: 10054\n          name: metrics\n          protocol: TCP\n        resources:\n          requests:\n            memory: 20Mi\n            cpu: 10m\n      dnsPolicy: Default  # Don't use cluster DNS.\n      serviceAccountName: kube-dns",
                            "vars.%": "2",
                            "vars.cluster_dns_ip": "10.110.50.10",
                            "vars.cluster_domain": "k8s.local"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "c4e34458db0a7f0d93f84e2597eb32ed4e1155a186e7a25db688b011df62d19c",
                        "attributes": {
                            "id": "c4e34458db0a7f0d93f84e2597eb32ed4e1155a186e7a25db688b011df62d19c",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: admin\n  user:\n    token: hKug05I6TteN16XIAwzcXSk5d1HZeNoJ\nclusters:\n- name: local\n  cluster:\n    insecure-skip-tls-verify: true\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: admin\n  name: local-cluster-context\ncurrent-context: local-cluster-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: admin\n  user:\n    token: ${admin_token}\nclusters:\n- name: local\n  cluster:\n    insecure-skip-tls-verify: true\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: admin\n  name: local-cluster-context\ncurrent-context: local-cluster-context\n",
                            "vars.%": "2",
                            "vars.admin_token": "hKug05I6TteN16XIAwzcXSk5d1HZeNoJ",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "etcd1"
            ],
            "outputs": {
                "ignition_config": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/etcd.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewoiYXBpVmVyc2lvbiI6ICJ2MSIsCiJraW5kIjogIlBvZCIsCiJtZXRhZGF0YSI6IHsKICAibmFtZSI6ImV0Y2Qtbm9kZS0xIiwKICAibmFtZXNwYWNlIjogImt1YmUtc3lzdGVtIiwKICAiYW5ub3RhdGlvbnMiOiB7CiAgICAic2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kIjogIiIKICB9Cn0sCiJzcGVjIjp7CiJob3N0TmV0d29yayI6IHRydWUsCiJjb250YWluZXJzIjpbCiAgICB7CiAgICAibmFtZSI6ICJldGNkLWNvbnRhaW5lciIsCiAgICAiaW1hZ2UiOiAiZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2V0Y2Q6My4yLjE0IiwKICAgICJyZXNvdXJjZXMiOiB7CiAgICAgICJyZXF1ZXN0cyI6IHsKICAgICAgICAiY3B1IjogMQogICAgICB9CiAgICB9LAogICAgImNvbW1hbmQiOiBbCiAgICAgICAgICAgICAgIi9iaW4vc2giLAogICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgImlmIFsgLWUgL3Vzci9sb2NhbC9iaW4vbWlncmF0ZS1pZi1uZWVkZWQuc2ggXTsgdGhlbiAvdXNyL2xvY2FsL2Jpbi9taWdyYXRlLWlmLW5lZWRlZC5zaCAxPj4vdmFyL2xvZy9ldGNkLmxvZyAyPiYxOyBmaTsgZXhlYyAvdXNyL2xvY2FsL2Jpbi9ldGNkIC0tbmFtZSBldGNkLW5vZGUtMSAtLWxpc3Rlbi1wZWVyLXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDA6MjM4MCAtLWluaXRpYWwtYWR2ZXJ0aXNlLXBlZXItdXJscyBodHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwIC0tYWR2ZXJ0aXNlLWNsaWVudC11cmxzIGh0dHA6Ly8xMC4xMDAuNTAuMTAwOjIzNzkgLS1saXN0ZW4tY2xpZW50LXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDA6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkgLS1pbml0aWFsLWNsdXN0ZXItdG9rZW4gZXRjZC1jbHVzdGVyLTEgLS1kYXRhLWRpciAvdmFyL2V0Y2QvZGF0YSAtLWluaXRpYWwtY2x1c3RlciBldGNkLW5vZGUtMT1odHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwLGV0Y2Qtbm9kZS0yPWh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzODAsZXRjZC1ub2RlLTM9aHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtY2x1c3Rlci1zdGF0ZSBuZXcgMT4+L3Zhci9sb2cvZXRjZC5sb2cgMj4mMSIKICAgICAgICAgICAgXSwKICAgICJlbnYiOiBbCiAgICAgIHsgIm5hbWUiOiAiVEFSR0VUX1NUT1JBR0UiLAogICAgICAgICJ2YWx1ZSI6ICJldGNkMyIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJUQVJHRVRfVkVSU0lPTiIsCiAgICAgICAgInZhbHVlIjogIjMuMi4xNCIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJEQVRBX0RJUkVDVE9SWSIsCiAgICAgICAgInZhbHVlIjogIi92YXIvZXRjZC9kYXRhIgogICAgICB9CiAgICAgICAgXSwKICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAiaHR0cEdldCI6IHsKICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICJwb3J0IjogMjM3OSwKICAgICAgICAicGF0aCI6ICIvaGVhbHRoIgogICAgICB9LAogICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgfSwKICAgICJwb3J0cyI6IFsKICAgICAgeyAibmFtZSI6ICJzZXJ2ZXJwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzODAsCiAgICAgICAgImhvc3RQb3J0IjogMjM4MCAKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJjbGllbnRwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzNzksCiAgICAgICAgImhvc3RQb3J0IjogMjM3OQogICAgICB9CiAgICAgICAgXSwKICAgICJ2b2x1bWVNb3VudHMiOiBbCiAgICAgIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2V0Y2QiLAogICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsgIm5hbWUiOiAidmFybG9nZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJldGMiLAogICAgICAgICJtb3VudFBhdGgiOiAiL29wdC9ldGNkL2V0YyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfQogICAgXQogICAgfQpdLAoidm9sdW1lcyI6WwogIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgInBhdGgiOiAiL21udC9tYXN0ZXItcGQvdmFyL2V0Y2QifQogIH0sCiAgeyAibmFtZSI6ICJ2YXJsb2dldGNkIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInR5cGUiOiAiRmlsZU9yQ3JlYXRlIn0KICB9LAogIHsgIm5hbWUiOiAiZXRjIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvb3B0L2V0Y2QvZXRjIn0KICB9Cl0KfX0K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }"
                }
            },
            "resources": {
                "data.ignition_config.etcd": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.etcd_manifest",
                        "module.common"
                    ],
                    "primary": {
                        "id": "7d74c3a57b9e9ffbd28d72e3bb6b7b88c1e0fe4f7cb91570d6a69a0360b2d17f",
                        "attributes": {
                            "files.#": "10",
                            "files.0": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                            "files.1": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                            "files.2": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                            "files.3": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                            "files.4": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                            "files.5": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                            "files.6": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                            "files.7": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                            "files.8": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                            "files.9": "c935316a2750026823d9828ab9283eb9fa3f62238e5c4a0b8c85e72437a99e53",
                            "id": "7d74c3a57b9e9ffbd28d72e3bb6b7b88c1e0fe4f7cb91570d6a69a0360b2d17f",
                            "rendered": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/etcd.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewoiYXBpVmVyc2lvbiI6ICJ2MSIsCiJraW5kIjogIlBvZCIsCiJtZXRhZGF0YSI6IHsKICAibmFtZSI6ImV0Y2Qtbm9kZS0xIiwKICAibmFtZXNwYWNlIjogImt1YmUtc3lzdGVtIiwKICAiYW5ub3RhdGlvbnMiOiB7CiAgICAic2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kIjogIiIKICB9Cn0sCiJzcGVjIjp7CiJob3N0TmV0d29yayI6IHRydWUsCiJjb250YWluZXJzIjpbCiAgICB7CiAgICAibmFtZSI6ICJldGNkLWNvbnRhaW5lciIsCiAgICAiaW1hZ2UiOiAiZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2V0Y2Q6My4yLjE0IiwKICAgICJyZXNvdXJjZXMiOiB7CiAgICAgICJyZXF1ZXN0cyI6IHsKICAgICAgICAiY3B1IjogMQogICAgICB9CiAgICB9LAogICAgImNvbW1hbmQiOiBbCiAgICAgICAgICAgICAgIi9iaW4vc2giLAogICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgImlmIFsgLWUgL3Vzci9sb2NhbC9iaW4vbWlncmF0ZS1pZi1uZWVkZWQuc2ggXTsgdGhlbiAvdXNyL2xvY2FsL2Jpbi9taWdyYXRlLWlmLW5lZWRlZC5zaCAxPj4vdmFyL2xvZy9ldGNkLmxvZyAyPiYxOyBmaTsgZXhlYyAvdXNyL2xvY2FsL2Jpbi9ldGNkIC0tbmFtZSBldGNkLW5vZGUtMSAtLWxpc3Rlbi1wZWVyLXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDA6MjM4MCAtLWluaXRpYWwtYWR2ZXJ0aXNlLXBlZXItdXJscyBodHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwIC0tYWR2ZXJ0aXNlLWNsaWVudC11cmxzIGh0dHA6Ly8xMC4xMDAuNTAuMTAwOjIzNzkgLS1saXN0ZW4tY2xpZW50LXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDA6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkgLS1pbml0aWFsLWNsdXN0ZXItdG9rZW4gZXRjZC1jbHVzdGVyLTEgLS1kYXRhLWRpciAvdmFyL2V0Y2QvZGF0YSAtLWluaXRpYWwtY2x1c3RlciBldGNkLW5vZGUtMT1odHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwLGV0Y2Qtbm9kZS0yPWh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzODAsZXRjZC1ub2RlLTM9aHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtY2x1c3Rlci1zdGF0ZSBuZXcgMT4+L3Zhci9sb2cvZXRjZC5sb2cgMj4mMSIKICAgICAgICAgICAgXSwKICAgICJlbnYiOiBbCiAgICAgIHsgIm5hbWUiOiAiVEFSR0VUX1NUT1JBR0UiLAogICAgICAgICJ2YWx1ZSI6ICJldGNkMyIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJUQVJHRVRfVkVSU0lPTiIsCiAgICAgICAgInZhbHVlIjogIjMuMi4xNCIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJEQVRBX0RJUkVDVE9SWSIsCiAgICAgICAgInZhbHVlIjogIi92YXIvZXRjZC9kYXRhIgogICAgICB9CiAgICAgICAgXSwKICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAiaHR0cEdldCI6IHsKICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICJwb3J0IjogMjM3OSwKICAgICAgICAicGF0aCI6ICIvaGVhbHRoIgogICAgICB9LAogICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgfSwKICAgICJwb3J0cyI6IFsKICAgICAgeyAibmFtZSI6ICJzZXJ2ZXJwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzODAsCiAgICAgICAgImhvc3RQb3J0IjogMjM4MCAKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJjbGllbnRwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzNzksCiAgICAgICAgImhvc3RQb3J0IjogMjM3OQogICAgICB9CiAgICAgICAgXSwKICAgICJ2b2x1bWVNb3VudHMiOiBbCiAgICAgIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2V0Y2QiLAogICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsgIm5hbWUiOiAidmFybG9nZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJldGMiLAogICAgICAgICJtb3VudFBhdGgiOiAiL29wdC9ldGNkL2V0YyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfQogICAgXQogICAgfQpdLAoidm9sdW1lcyI6WwogIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgInBhdGgiOiAiL21udC9tYXN0ZXItcGQvdmFyL2V0Y2QifQogIH0sCiAgeyAibmFtZSI6ICJ2YXJsb2dldGNkIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInR5cGUiOiAiRmlsZU9yQ3JlYXRlIn0KICB9LAogIHsgIm5hbWUiOiAiZXRjIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvb3B0L2V0Y2QvZXRjIn0KICB9Cl0KfX0K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }",
                            "systemd.#": "4",
                            "systemd.0": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                            "systemd.1": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                            "systemd.2": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                            "systemd.3": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.etcd_manifest": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.etcd_manifest"
                    ],
                    "primary": {
                        "id": "c935316a2750026823d9828ab9283eb9fa3f62238e5c4a0b8c85e72437a99e53",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "{\n\"apiVersion\": \"v1\",\n\"kind\": \"Pod\",\n\"metadata\": {\n  \"name\":\"etcd-node-1\",\n  \"namespace\": \"kube-system\",\n  \"annotations\": {\n    \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n  }\n},\n\"spec\":{\n\"hostNetwork\": true,\n\"containers\":[\n    {\n    \"name\": \"etcd-container\",\n    \"image\": \"gcr.io/google_containers/etcd:3.2.14\",\n    \"resources\": {\n      \"requests\": {\n        \"cpu\": 1\n      }\n    },\n    \"command\": [\n              \"/bin/sh\",\n              \"-c\",\n              \"if [ -e /usr/local/bin/migrate-if-needed.sh ]; then /usr/local/bin/migrate-if-needed.sh 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261; fi; exec /usr/local/bin/etcd --name etcd-node-1 --listen-peer-urls http://10.100.50.100:2380 --initial-advertise-peer-urls http://10.100.50.100:2380 --advertise-client-urls http://10.100.50.100:2379 --listen-client-urls http://10.100.50.100:2379,http://127.0.0.1:2379 --initial-cluster-token etcd-cluster-1 --data-dir /var/etcd/data --initial-cluster etcd-node-1=http://10.100.50.100:2380,etcd-node-2=http://10.100.50.101:2380,etcd-node-3=http://10.100.50.102:2380 --initial-cluster-state new 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261\"\n            ],\n    \"env\": [\n      { \"name\": \"TARGET_STORAGE\",\n        \"value\": \"etcd3\"\n      },\n      { \"name\": \"TARGET_VERSION\",\n        \"value\": \"3.2.14\"\n      },\n      { \"name\": \"DATA_DIRECTORY\",\n        \"value\": \"/var/etcd/data\"\n      }\n        ],\n    \"livenessProbe\": {\n      \"httpGet\": {\n        \"host\": \"127.0.0.1\",\n        \"port\": 2379,\n        \"path\": \"/health\"\n      },\n      \"initialDelaySeconds\": 15,\n      \"timeoutSeconds\": 15\n    },\n    \"ports\": [\n      { \"name\": \"serverport\",\n        \"containerPort\": 2380,\n        \"hostPort\": 2380 \n      },\n      { \"name\": \"clientport\",\n        \"containerPort\": 2379,\n        \"hostPort\": 2379\n      }\n        ],\n    \"volumeMounts\": [\n      { \"name\": \"varetcd\",\n        \"mountPath\": \"/var/etcd\",\n        \"readOnly\": false\n      },\n      { \"name\": \"varlogetcd\",\n        \"mountPath\": \"/var/log/etcd.log\",\n        \"readOnly\": false\n      },\n      { \"name\": \"etc\",\n        \"mountPath\": \"/opt/etcd/etc\",\n        \"readOnly\": false\n      }\n    ]\n    }\n],\n\"volumes\":[\n  { \"name\": \"varetcd\",\n    \"hostPath\": {\n        \"path\": \"/mnt/master-pd/var/etcd\"}\n  },\n  { \"name\": \"varlogetcd\",\n    \"hostPath\": {\n        \"path\": \"/var/log/etcd.log\",\n        \"type\": \"FileOrCreate\"}\n  },\n  { \"name\": \"etc\",\n    \"hostPath\": {\n        \"path\": \"/opt/etcd/etc\"}\n  }\n]\n}}\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "c935316a2750026823d9828ab9283eb9fa3f62238e5c4a0b8c85e72437a99e53",
                            "path": "/etc/kubernetes/manifests/etcd.manifest"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.template_file.etcd_manifest": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "22b4705eec6d0090e3fa222681c25319a0b0e033a310f4a7f2a47f1a774c1687",
                        "attributes": {
                            "id": "22b4705eec6d0090e3fa222681c25319a0b0e033a310f4a7f2a47f1a774c1687",
                            "rendered": "{\n\"apiVersion\": \"v1\",\n\"kind\": \"Pod\",\n\"metadata\": {\n  \"name\":\"etcd-node-1\",\n  \"namespace\": \"kube-system\",\n  \"annotations\": {\n    \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n  }\n},\n\"spec\":{\n\"hostNetwork\": true,\n\"containers\":[\n    {\n    \"name\": \"etcd-container\",\n    \"image\": \"gcr.io/google_containers/etcd:3.2.14\",\n    \"resources\": {\n      \"requests\": {\n        \"cpu\": 1\n      }\n    },\n    \"command\": [\n              \"/bin/sh\",\n              \"-c\",\n              \"if [ -e /usr/local/bin/migrate-if-needed.sh ]; then /usr/local/bin/migrate-if-needed.sh 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261; fi; exec /usr/local/bin/etcd --name etcd-node-1 --listen-peer-urls http://10.100.50.100:2380 --initial-advertise-peer-urls http://10.100.50.100:2380 --advertise-client-urls http://10.100.50.100:2379 --listen-client-urls http://10.100.50.100:2379,http://127.0.0.1:2379 --initial-cluster-token etcd-cluster-1 --data-dir /var/etcd/data --initial-cluster etcd-node-1=http://10.100.50.100:2380,etcd-node-2=http://10.100.50.101:2380,etcd-node-3=http://10.100.50.102:2380 --initial-cluster-state new 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261\"\n            ],\n    \"env\": [\n      { \"name\": \"TARGET_STORAGE\",\n        \"value\": \"etcd3\"\n      },\n      { \"name\": \"TARGET_VERSION\",\n        \"value\": \"3.2.14\"\n      },\n      { \"name\": \"DATA_DIRECTORY\",\n        \"value\": \"/var/etcd/data\"\n      }\n        ],\n    \"livenessProbe\": {\n      \"httpGet\": {\n        \"host\": \"127.0.0.1\",\n        \"port\": 2379,\n        \"path\": \"/health\"\n      },\n      \"initialDelaySeconds\": 15,\n      \"timeoutSeconds\": 15\n    },\n    \"ports\": [\n      { \"name\": \"serverport\",\n        \"containerPort\": 2380,\n        \"hostPort\": 2380 \n      },\n      { \"name\": \"clientport\",\n        \"containerPort\": 2379,\n        \"hostPort\": 2379\n      }\n        ],\n    \"volumeMounts\": [\n      { \"name\": \"varetcd\",\n        \"mountPath\": \"/var/etcd\",\n        \"readOnly\": false\n      },\n      { \"name\": \"varlogetcd\",\n        \"mountPath\": \"/var/log/etcd.log\",\n        \"readOnly\": false\n      },\n      { \"name\": \"etc\",\n        \"mountPath\": \"/opt/etcd/etc\",\n        \"readOnly\": false\n      }\n    ]\n    }\n],\n\"volumes\":[\n  { \"name\": \"varetcd\",\n    \"hostPath\": {\n        \"path\": \"/mnt/master-pd/var/etcd\"}\n  },\n  { \"name\": \"varlogetcd\",\n    \"hostPath\": {\n        \"path\": \"/var/log/etcd.log\",\n        \"type\": \"FileOrCreate\"}\n  },\n  { \"name\": \"etc\",\n    \"hostPath\": {\n        \"path\": \"/opt/etcd/etc\"}\n  }\n]\n}}\n",
                            "template": "{\n\"apiVersion\": \"v1\",\n\"kind\": \"Pod\",\n\"metadata\": {\n  \"name\":\"${node_name}\",\n  \"namespace\": \"kube-system\",\n  \"annotations\": {\n    \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n  }\n},\n\"spec\":{\n\"hostNetwork\": true,\n\"containers\":[\n    {\n    \"name\": \"etcd-container\",\n    \"image\": \"gcr.io/google_containers/etcd:3.2.14\",\n    \"resources\": {\n      \"requests\": {\n        \"cpu\": 1\n      }\n    },\n    \"command\": [\n              \"/bin/sh\",\n              \"-c\",\n              \"if [ -e /usr/local/bin/migrate-if-needed.sh ]; then /usr/local/bin/migrate-if-needed.sh 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261; fi; exec /usr/local/bin/etcd --name ${node_name} --listen-peer-urls http://${node_ip}:2380 --initial-advertise-peer-urls http://${node_ip}:2380 --advertise-client-urls http://${node_ip}:2379 --listen-client-urls http://${node_ip}:2379,http://127.0.0.1:2379 --initial-cluster-token etcd-cluster-1 --data-dir /var/etcd/data --initial-cluster ${cluster_members} --initial-cluster-state new 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261\"\n            ],\n    \"env\": [\n      { \"name\": \"TARGET_STORAGE\",\n        \"value\": \"etcd3\"\n      },\n      { \"name\": \"TARGET_VERSION\",\n        \"value\": \"3.2.14\"\n      },\n      { \"name\": \"DATA_DIRECTORY\",\n        \"value\": \"/var/etcd/data\"\n      }\n        ],\n    \"livenessProbe\": {\n      \"httpGet\": {\n        \"host\": \"127.0.0.1\",\n        \"port\": 2379,\n        \"path\": \"/health\"\n      },\n      \"initialDelaySeconds\": 15,\n      \"timeoutSeconds\": 15\n    },\n    \"ports\": [\n      { \"name\": \"serverport\",\n        \"containerPort\": 2380,\n        \"hostPort\": 2380 \n      },\n      { \"name\": \"clientport\",\n        \"containerPort\": 2379,\n        \"hostPort\": 2379\n      }\n        ],\n    \"volumeMounts\": [\n      { \"name\": \"varetcd\",\n        \"mountPath\": \"/var/etcd\",\n        \"readOnly\": false\n      },\n      { \"name\": \"varlogetcd\",\n        \"mountPath\": \"/var/log/etcd.log\",\n        \"readOnly\": false\n      },\n      { \"name\": \"etc\",\n        \"mountPath\": \"/opt/etcd/etc\",\n        \"readOnly\": false\n      }\n    ]\n    }\n],\n\"volumes\":[\n  { \"name\": \"varetcd\",\n    \"hostPath\": {\n        \"path\": \"/mnt/master-pd/var/etcd\"}\n  },\n  { \"name\": \"varlogetcd\",\n    \"hostPath\": {\n        \"path\": \"/var/log/etcd.log\",\n        \"type\": \"FileOrCreate\"}\n  },\n  { \"name\": \"etc\",\n    \"hostPath\": {\n        \"path\": \"/opt/etcd/etc\"}\n  }\n]\n}}\n",
                            "vars.%": "3",
                            "vars.cluster_members": "etcd-node-1=http://10.100.50.100:2380,etcd-node-2=http://10.100.50.101:2380,etcd-node-3=http://10.100.50.102:2380",
                            "vars.node_ip": "10.100.50.100",
                            "vars.node_name": "etcd-node-1"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "etcd2"
            ],
            "outputs": {
                "ignition_config": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/etcd.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewoiYXBpVmVyc2lvbiI6ICJ2MSIsCiJraW5kIjogIlBvZCIsCiJtZXRhZGF0YSI6IHsKICAibmFtZSI6ImV0Y2Qtbm9kZS0yIiwKICAibmFtZXNwYWNlIjogImt1YmUtc3lzdGVtIiwKICAiYW5ub3RhdGlvbnMiOiB7CiAgICAic2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kIjogIiIKICB9Cn0sCiJzcGVjIjp7CiJob3N0TmV0d29yayI6IHRydWUsCiJjb250YWluZXJzIjpbCiAgICB7CiAgICAibmFtZSI6ICJldGNkLWNvbnRhaW5lciIsCiAgICAiaW1hZ2UiOiAiZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2V0Y2Q6My4yLjE0IiwKICAgICJyZXNvdXJjZXMiOiB7CiAgICAgICJyZXF1ZXN0cyI6IHsKICAgICAgICAiY3B1IjogMQogICAgICB9CiAgICB9LAogICAgImNvbW1hbmQiOiBbCiAgICAgICAgICAgICAgIi9iaW4vc2giLAogICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgImlmIFsgLWUgL3Vzci9sb2NhbC9iaW4vbWlncmF0ZS1pZi1uZWVkZWQuc2ggXTsgdGhlbiAvdXNyL2xvY2FsL2Jpbi9taWdyYXRlLWlmLW5lZWRlZC5zaCAxPj4vdmFyL2xvZy9ldGNkLmxvZyAyPiYxOyBmaTsgZXhlYyAvdXNyL2xvY2FsL2Jpbi9ldGNkIC0tbmFtZSBldGNkLW5vZGUtMiAtLWxpc3Rlbi1wZWVyLXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDE6MjM4MCAtLWluaXRpYWwtYWR2ZXJ0aXNlLXBlZXItdXJscyBodHRwOi8vMTAuMTAwLjUwLjEwMToyMzgwIC0tYWR2ZXJ0aXNlLWNsaWVudC11cmxzIGh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzNzkgLS1saXN0ZW4tY2xpZW50LXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDE6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkgLS1pbml0aWFsLWNsdXN0ZXItdG9rZW4gZXRjZC1jbHVzdGVyLTEgLS1kYXRhLWRpciAvdmFyL2V0Y2QvZGF0YSAtLWluaXRpYWwtY2x1c3RlciBldGNkLW5vZGUtMT1odHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwLGV0Y2Qtbm9kZS0yPWh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzODAsZXRjZC1ub2RlLTM9aHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtY2x1c3Rlci1zdGF0ZSBuZXcgMT4+L3Zhci9sb2cvZXRjZC5sb2cgMj4mMSIKICAgICAgICAgICAgXSwKICAgICJlbnYiOiBbCiAgICAgIHsgIm5hbWUiOiAiVEFSR0VUX1NUT1JBR0UiLAogICAgICAgICJ2YWx1ZSI6ICJldGNkMyIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJUQVJHRVRfVkVSU0lPTiIsCiAgICAgICAgInZhbHVlIjogIjMuMi4xNCIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJEQVRBX0RJUkVDVE9SWSIsCiAgICAgICAgInZhbHVlIjogIi92YXIvZXRjZC9kYXRhIgogICAgICB9CiAgICAgICAgXSwKICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAiaHR0cEdldCI6IHsKICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICJwb3J0IjogMjM3OSwKICAgICAgICAicGF0aCI6ICIvaGVhbHRoIgogICAgICB9LAogICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgfSwKICAgICJwb3J0cyI6IFsKICAgICAgeyAibmFtZSI6ICJzZXJ2ZXJwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzODAsCiAgICAgICAgImhvc3RQb3J0IjogMjM4MCAKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJjbGllbnRwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzNzksCiAgICAgICAgImhvc3RQb3J0IjogMjM3OQogICAgICB9CiAgICAgICAgXSwKICAgICJ2b2x1bWVNb3VudHMiOiBbCiAgICAgIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2V0Y2QiLAogICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsgIm5hbWUiOiAidmFybG9nZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJldGMiLAogICAgICAgICJtb3VudFBhdGgiOiAiL29wdC9ldGNkL2V0YyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfQogICAgXQogICAgfQpdLAoidm9sdW1lcyI6WwogIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgInBhdGgiOiAiL21udC9tYXN0ZXItcGQvdmFyL2V0Y2QifQogIH0sCiAgeyAibmFtZSI6ICJ2YXJsb2dldGNkIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInR5cGUiOiAiRmlsZU9yQ3JlYXRlIn0KICB9LAogIHsgIm5hbWUiOiAiZXRjIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvb3B0L2V0Y2QvZXRjIn0KICB9Cl0KfX0K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }"
                }
            },
            "resources": {
                "data.ignition_config.etcd": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.etcd_manifest",
                        "module.common"
                    ],
                    "primary": {
                        "id": "41f8332cefea330f218bb7cdd8896f4554376a3a74252f093c4cd3a5e60f4299",
                        "attributes": {
                            "files.#": "10",
                            "files.0": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                            "files.1": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                            "files.2": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                            "files.3": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                            "files.4": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                            "files.5": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                            "files.6": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                            "files.7": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                            "files.8": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                            "files.9": "5f97fd26712322deb967f434cb06d5c860a122993bac518aca6b41af54dae1d3",
                            "id": "41f8332cefea330f218bb7cdd8896f4554376a3a74252f093c4cd3a5e60f4299",
                            "rendered": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/etcd.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewoiYXBpVmVyc2lvbiI6ICJ2MSIsCiJraW5kIjogIlBvZCIsCiJtZXRhZGF0YSI6IHsKICAibmFtZSI6ImV0Y2Qtbm9kZS0yIiwKICAibmFtZXNwYWNlIjogImt1YmUtc3lzdGVtIiwKICAiYW5ub3RhdGlvbnMiOiB7CiAgICAic2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kIjogIiIKICB9Cn0sCiJzcGVjIjp7CiJob3N0TmV0d29yayI6IHRydWUsCiJjb250YWluZXJzIjpbCiAgICB7CiAgICAibmFtZSI6ICJldGNkLWNvbnRhaW5lciIsCiAgICAiaW1hZ2UiOiAiZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2V0Y2Q6My4yLjE0IiwKICAgICJyZXNvdXJjZXMiOiB7CiAgICAgICJyZXF1ZXN0cyI6IHsKICAgICAgICAiY3B1IjogMQogICAgICB9CiAgICB9LAogICAgImNvbW1hbmQiOiBbCiAgICAgICAgICAgICAgIi9iaW4vc2giLAogICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgImlmIFsgLWUgL3Vzci9sb2NhbC9iaW4vbWlncmF0ZS1pZi1uZWVkZWQuc2ggXTsgdGhlbiAvdXNyL2xvY2FsL2Jpbi9taWdyYXRlLWlmLW5lZWRlZC5zaCAxPj4vdmFyL2xvZy9ldGNkLmxvZyAyPiYxOyBmaTsgZXhlYyAvdXNyL2xvY2FsL2Jpbi9ldGNkIC0tbmFtZSBldGNkLW5vZGUtMiAtLWxpc3Rlbi1wZWVyLXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDE6MjM4MCAtLWluaXRpYWwtYWR2ZXJ0aXNlLXBlZXItdXJscyBodHRwOi8vMTAuMTAwLjUwLjEwMToyMzgwIC0tYWR2ZXJ0aXNlLWNsaWVudC11cmxzIGh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzNzkgLS1saXN0ZW4tY2xpZW50LXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDE6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkgLS1pbml0aWFsLWNsdXN0ZXItdG9rZW4gZXRjZC1jbHVzdGVyLTEgLS1kYXRhLWRpciAvdmFyL2V0Y2QvZGF0YSAtLWluaXRpYWwtY2x1c3RlciBldGNkLW5vZGUtMT1odHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwLGV0Y2Qtbm9kZS0yPWh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzODAsZXRjZC1ub2RlLTM9aHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtY2x1c3Rlci1zdGF0ZSBuZXcgMT4+L3Zhci9sb2cvZXRjZC5sb2cgMj4mMSIKICAgICAgICAgICAgXSwKICAgICJlbnYiOiBbCiAgICAgIHsgIm5hbWUiOiAiVEFSR0VUX1NUT1JBR0UiLAogICAgICAgICJ2YWx1ZSI6ICJldGNkMyIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJUQVJHRVRfVkVSU0lPTiIsCiAgICAgICAgInZhbHVlIjogIjMuMi4xNCIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJEQVRBX0RJUkVDVE9SWSIsCiAgICAgICAgInZhbHVlIjogIi92YXIvZXRjZC9kYXRhIgogICAgICB9CiAgICAgICAgXSwKICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAiaHR0cEdldCI6IHsKICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICJwb3J0IjogMjM3OSwKICAgICAgICAicGF0aCI6ICIvaGVhbHRoIgogICAgICB9LAogICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgfSwKICAgICJwb3J0cyI6IFsKICAgICAgeyAibmFtZSI6ICJzZXJ2ZXJwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzODAsCiAgICAgICAgImhvc3RQb3J0IjogMjM4MCAKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJjbGllbnRwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzNzksCiAgICAgICAgImhvc3RQb3J0IjogMjM3OQogICAgICB9CiAgICAgICAgXSwKICAgICJ2b2x1bWVNb3VudHMiOiBbCiAgICAgIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2V0Y2QiLAogICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsgIm5hbWUiOiAidmFybG9nZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJldGMiLAogICAgICAgICJtb3VudFBhdGgiOiAiL29wdC9ldGNkL2V0YyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfQogICAgXQogICAgfQpdLAoidm9sdW1lcyI6WwogIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgInBhdGgiOiAiL21udC9tYXN0ZXItcGQvdmFyL2V0Y2QifQogIH0sCiAgeyAibmFtZSI6ICJ2YXJsb2dldGNkIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInR5cGUiOiAiRmlsZU9yQ3JlYXRlIn0KICB9LAogIHsgIm5hbWUiOiAiZXRjIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvb3B0L2V0Y2QvZXRjIn0KICB9Cl0KfX0K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }",
                            "systemd.#": "4",
                            "systemd.0": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                            "systemd.1": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                            "systemd.2": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                            "systemd.3": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.etcd_manifest": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.etcd_manifest"
                    ],
                    "primary": {
                        "id": "5f97fd26712322deb967f434cb06d5c860a122993bac518aca6b41af54dae1d3",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "{\n\"apiVersion\": \"v1\",\n\"kind\": \"Pod\",\n\"metadata\": {\n  \"name\":\"etcd-node-2\",\n  \"namespace\": \"kube-system\",\n  \"annotations\": {\n    \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n  }\n},\n\"spec\":{\n\"hostNetwork\": true,\n\"containers\":[\n    {\n    \"name\": \"etcd-container\",\n    \"image\": \"gcr.io/google_containers/etcd:3.2.14\",\n    \"resources\": {\n      \"requests\": {\n        \"cpu\": 1\n      }\n    },\n    \"command\": [\n              \"/bin/sh\",\n              \"-c\",\n              \"if [ -e /usr/local/bin/migrate-if-needed.sh ]; then /usr/local/bin/migrate-if-needed.sh 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261; fi; exec /usr/local/bin/etcd --name etcd-node-2 --listen-peer-urls http://10.100.50.101:2380 --initial-advertise-peer-urls http://10.100.50.101:2380 --advertise-client-urls http://10.100.50.101:2379 --listen-client-urls http://10.100.50.101:2379,http://127.0.0.1:2379 --initial-cluster-token etcd-cluster-1 --data-dir /var/etcd/data --initial-cluster etcd-node-1=http://10.100.50.100:2380,etcd-node-2=http://10.100.50.101:2380,etcd-node-3=http://10.100.50.102:2380 --initial-cluster-state new 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261\"\n            ],\n    \"env\": [\n      { \"name\": \"TARGET_STORAGE\",\n        \"value\": \"etcd3\"\n      },\n      { \"name\": \"TARGET_VERSION\",\n        \"value\": \"3.2.14\"\n      },\n      { \"name\": \"DATA_DIRECTORY\",\n        \"value\": \"/var/etcd/data\"\n      }\n        ],\n    \"livenessProbe\": {\n      \"httpGet\": {\n        \"host\": \"127.0.0.1\",\n        \"port\": 2379,\n        \"path\": \"/health\"\n      },\n      \"initialDelaySeconds\": 15,\n      \"timeoutSeconds\": 15\n    },\n    \"ports\": [\n      { \"name\": \"serverport\",\n        \"containerPort\": 2380,\n        \"hostPort\": 2380 \n      },\n      { \"name\": \"clientport\",\n        \"containerPort\": 2379,\n        \"hostPort\": 2379\n      }\n        ],\n    \"volumeMounts\": [\n      { \"name\": \"varetcd\",\n        \"mountPath\": \"/var/etcd\",\n        \"readOnly\": false\n      },\n      { \"name\": \"varlogetcd\",\n        \"mountPath\": \"/var/log/etcd.log\",\n        \"readOnly\": false\n      },\n      { \"name\": \"etc\",\n        \"mountPath\": \"/opt/etcd/etc\",\n        \"readOnly\": false\n      }\n    ]\n    }\n],\n\"volumes\":[\n  { \"name\": \"varetcd\",\n    \"hostPath\": {\n        \"path\": \"/mnt/master-pd/var/etcd\"}\n  },\n  { \"name\": \"varlogetcd\",\n    \"hostPath\": {\n        \"path\": \"/var/log/etcd.log\",\n        \"type\": \"FileOrCreate\"}\n  },\n  { \"name\": \"etc\",\n    \"hostPath\": {\n        \"path\": \"/opt/etcd/etc\"}\n  }\n]\n}}\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "5f97fd26712322deb967f434cb06d5c860a122993bac518aca6b41af54dae1d3",
                            "path": "/etc/kubernetes/manifests/etcd.manifest"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.template_file.etcd_manifest": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "5e00b1a8f10e903031c83043f688f844f259963aa3a60493675fbe0ee99a0520",
                        "attributes": {
                            "id": "5e00b1a8f10e903031c83043f688f844f259963aa3a60493675fbe0ee99a0520",
                            "rendered": "{\n\"apiVersion\": \"v1\",\n\"kind\": \"Pod\",\n\"metadata\": {\n  \"name\":\"etcd-node-2\",\n  \"namespace\": \"kube-system\",\n  \"annotations\": {\n    \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n  }\n},\n\"spec\":{\n\"hostNetwork\": true,\n\"containers\":[\n    {\n    \"name\": \"etcd-container\",\n    \"image\": \"gcr.io/google_containers/etcd:3.2.14\",\n    \"resources\": {\n      \"requests\": {\n        \"cpu\": 1\n      }\n    },\n    \"command\": [\n              \"/bin/sh\",\n              \"-c\",\n              \"if [ -e /usr/local/bin/migrate-if-needed.sh ]; then /usr/local/bin/migrate-if-needed.sh 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261; fi; exec /usr/local/bin/etcd --name etcd-node-2 --listen-peer-urls http://10.100.50.101:2380 --initial-advertise-peer-urls http://10.100.50.101:2380 --advertise-client-urls http://10.100.50.101:2379 --listen-client-urls http://10.100.50.101:2379,http://127.0.0.1:2379 --initial-cluster-token etcd-cluster-1 --data-dir /var/etcd/data --initial-cluster etcd-node-1=http://10.100.50.100:2380,etcd-node-2=http://10.100.50.101:2380,etcd-node-3=http://10.100.50.102:2380 --initial-cluster-state new 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261\"\n            ],\n    \"env\": [\n      { \"name\": \"TARGET_STORAGE\",\n        \"value\": \"etcd3\"\n      },\n      { \"name\": \"TARGET_VERSION\",\n        \"value\": \"3.2.14\"\n      },\n      { \"name\": \"DATA_DIRECTORY\",\n        \"value\": \"/var/etcd/data\"\n      }\n        ],\n    \"livenessProbe\": {\n      \"httpGet\": {\n        \"host\": \"127.0.0.1\",\n        \"port\": 2379,\n        \"path\": \"/health\"\n      },\n      \"initialDelaySeconds\": 15,\n      \"timeoutSeconds\": 15\n    },\n    \"ports\": [\n      { \"name\": \"serverport\",\n        \"containerPort\": 2380,\n        \"hostPort\": 2380 \n      },\n      { \"name\": \"clientport\",\n        \"containerPort\": 2379,\n        \"hostPort\": 2379\n      }\n        ],\n    \"volumeMounts\": [\n      { \"name\": \"varetcd\",\n        \"mountPath\": \"/var/etcd\",\n        \"readOnly\": false\n      },\n      { \"name\": \"varlogetcd\",\n        \"mountPath\": \"/var/log/etcd.log\",\n        \"readOnly\": false\n      },\n      { \"name\": \"etc\",\n        \"mountPath\": \"/opt/etcd/etc\",\n        \"readOnly\": false\n      }\n    ]\n    }\n],\n\"volumes\":[\n  { \"name\": \"varetcd\",\n    \"hostPath\": {\n        \"path\": \"/mnt/master-pd/var/etcd\"}\n  },\n  { \"name\": \"varlogetcd\",\n    \"hostPath\": {\n        \"path\": \"/var/log/etcd.log\",\n        \"type\": \"FileOrCreate\"}\n  },\n  { \"name\": \"etc\",\n    \"hostPath\": {\n        \"path\": \"/opt/etcd/etc\"}\n  }\n]\n}}\n",
                            "template": "{\n\"apiVersion\": \"v1\",\n\"kind\": \"Pod\",\n\"metadata\": {\n  \"name\":\"${node_name}\",\n  \"namespace\": \"kube-system\",\n  \"annotations\": {\n    \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n  }\n},\n\"spec\":{\n\"hostNetwork\": true,\n\"containers\":[\n    {\n    \"name\": \"etcd-container\",\n    \"image\": \"gcr.io/google_containers/etcd:3.2.14\",\n    \"resources\": {\n      \"requests\": {\n        \"cpu\": 1\n      }\n    },\n    \"command\": [\n              \"/bin/sh\",\n              \"-c\",\n              \"if [ -e /usr/local/bin/migrate-if-needed.sh ]; then /usr/local/bin/migrate-if-needed.sh 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261; fi; exec /usr/local/bin/etcd --name ${node_name} --listen-peer-urls http://${node_ip}:2380 --initial-advertise-peer-urls http://${node_ip}:2380 --advertise-client-urls http://${node_ip}:2379 --listen-client-urls http://${node_ip}:2379,http://127.0.0.1:2379 --initial-cluster-token etcd-cluster-1 --data-dir /var/etcd/data --initial-cluster ${cluster_members} --initial-cluster-state new 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261\"\n            ],\n    \"env\": [\n      { \"name\": \"TARGET_STORAGE\",\n        \"value\": \"etcd3\"\n      },\n      { \"name\": \"TARGET_VERSION\",\n        \"value\": \"3.2.14\"\n      },\n      { \"name\": \"DATA_DIRECTORY\",\n        \"value\": \"/var/etcd/data\"\n      }\n        ],\n    \"livenessProbe\": {\n      \"httpGet\": {\n        \"host\": \"127.0.0.1\",\n        \"port\": 2379,\n        \"path\": \"/health\"\n      },\n      \"initialDelaySeconds\": 15,\n      \"timeoutSeconds\": 15\n    },\n    \"ports\": [\n      { \"name\": \"serverport\",\n        \"containerPort\": 2380,\n        \"hostPort\": 2380 \n      },\n      { \"name\": \"clientport\",\n        \"containerPort\": 2379,\n        \"hostPort\": 2379\n      }\n        ],\n    \"volumeMounts\": [\n      { \"name\": \"varetcd\",\n        \"mountPath\": \"/var/etcd\",\n        \"readOnly\": false\n      },\n      { \"name\": \"varlogetcd\",\n        \"mountPath\": \"/var/log/etcd.log\",\n        \"readOnly\": false\n      },\n      { \"name\": \"etc\",\n        \"mountPath\": \"/opt/etcd/etc\",\n        \"readOnly\": false\n      }\n    ]\n    }\n],\n\"volumes\":[\n  { \"name\": \"varetcd\",\n    \"hostPath\": {\n        \"path\": \"/mnt/master-pd/var/etcd\"}\n  },\n  { \"name\": \"varlogetcd\",\n    \"hostPath\": {\n        \"path\": \"/var/log/etcd.log\",\n        \"type\": \"FileOrCreate\"}\n  },\n  { \"name\": \"etc\",\n    \"hostPath\": {\n        \"path\": \"/opt/etcd/etc\"}\n  }\n]\n}}\n",
                            "vars.%": "3",
                            "vars.cluster_members": "etcd-node-1=http://10.100.50.100:2380,etcd-node-2=http://10.100.50.101:2380,etcd-node-3=http://10.100.50.102:2380",
                            "vars.node_ip": "10.100.50.101",
                            "vars.node_name": "etcd-node-2"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "etcd3"
            ],
            "outputs": {
                "ignition_config": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/etcd.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewoiYXBpVmVyc2lvbiI6ICJ2MSIsCiJraW5kIjogIlBvZCIsCiJtZXRhZGF0YSI6IHsKICAibmFtZSI6ImV0Y2Qtbm9kZS0zIiwKICAibmFtZXNwYWNlIjogImt1YmUtc3lzdGVtIiwKICAiYW5ub3RhdGlvbnMiOiB7CiAgICAic2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kIjogIiIKICB9Cn0sCiJzcGVjIjp7CiJob3N0TmV0d29yayI6IHRydWUsCiJjb250YWluZXJzIjpbCiAgICB7CiAgICAibmFtZSI6ICJldGNkLWNvbnRhaW5lciIsCiAgICAiaW1hZ2UiOiAiZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2V0Y2Q6My4yLjE0IiwKICAgICJyZXNvdXJjZXMiOiB7CiAgICAgICJyZXF1ZXN0cyI6IHsKICAgICAgICAiY3B1IjogMQogICAgICB9CiAgICB9LAogICAgImNvbW1hbmQiOiBbCiAgICAgICAgICAgICAgIi9iaW4vc2giLAogICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgImlmIFsgLWUgL3Vzci9sb2NhbC9iaW4vbWlncmF0ZS1pZi1uZWVkZWQuc2ggXTsgdGhlbiAvdXNyL2xvY2FsL2Jpbi9taWdyYXRlLWlmLW5lZWRlZC5zaCAxPj4vdmFyL2xvZy9ldGNkLmxvZyAyPiYxOyBmaTsgZXhlYyAvdXNyL2xvY2FsL2Jpbi9ldGNkIC0tbmFtZSBldGNkLW5vZGUtMyAtLWxpc3Rlbi1wZWVyLXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtYWR2ZXJ0aXNlLXBlZXItdXJscyBodHRwOi8vMTAuMTAwLjUwLjEwMjoyMzgwIC0tYWR2ZXJ0aXNlLWNsaWVudC11cmxzIGh0dHA6Ly8xMC4xMDAuNTAuMTAyOjIzNzkgLS1saXN0ZW4tY2xpZW50LXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDI6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkgLS1pbml0aWFsLWNsdXN0ZXItdG9rZW4gZXRjZC1jbHVzdGVyLTEgLS1kYXRhLWRpciAvdmFyL2V0Y2QvZGF0YSAtLWluaXRpYWwtY2x1c3RlciBldGNkLW5vZGUtMT1odHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwLGV0Y2Qtbm9kZS0yPWh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzODAsZXRjZC1ub2RlLTM9aHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtY2x1c3Rlci1zdGF0ZSBuZXcgMT4+L3Zhci9sb2cvZXRjZC5sb2cgMj4mMSIKICAgICAgICAgICAgXSwKICAgICJlbnYiOiBbCiAgICAgIHsgIm5hbWUiOiAiVEFSR0VUX1NUT1JBR0UiLAogICAgICAgICJ2YWx1ZSI6ICJldGNkMyIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJUQVJHRVRfVkVSU0lPTiIsCiAgICAgICAgInZhbHVlIjogIjMuMi4xNCIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJEQVRBX0RJUkVDVE9SWSIsCiAgICAgICAgInZhbHVlIjogIi92YXIvZXRjZC9kYXRhIgogICAgICB9CiAgICAgICAgXSwKICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAiaHR0cEdldCI6IHsKICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICJwb3J0IjogMjM3OSwKICAgICAgICAicGF0aCI6ICIvaGVhbHRoIgogICAgICB9LAogICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgfSwKICAgICJwb3J0cyI6IFsKICAgICAgeyAibmFtZSI6ICJzZXJ2ZXJwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzODAsCiAgICAgICAgImhvc3RQb3J0IjogMjM4MCAKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJjbGllbnRwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzNzksCiAgICAgICAgImhvc3RQb3J0IjogMjM3OQogICAgICB9CiAgICAgICAgXSwKICAgICJ2b2x1bWVNb3VudHMiOiBbCiAgICAgIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2V0Y2QiLAogICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsgIm5hbWUiOiAidmFybG9nZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJldGMiLAogICAgICAgICJtb3VudFBhdGgiOiAiL29wdC9ldGNkL2V0YyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfQogICAgXQogICAgfQpdLAoidm9sdW1lcyI6WwogIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgInBhdGgiOiAiL21udC9tYXN0ZXItcGQvdmFyL2V0Y2QifQogIH0sCiAgeyAibmFtZSI6ICJ2YXJsb2dldGNkIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInR5cGUiOiAiRmlsZU9yQ3JlYXRlIn0KICB9LAogIHsgIm5hbWUiOiAiZXRjIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvb3B0L2V0Y2QvZXRjIn0KICB9Cl0KfX0K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }"
                }
            },
            "resources": {
                "data.ignition_config.etcd": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.etcd_manifest",
                        "module.common"
                    ],
                    "primary": {
                        "id": "2ba0bbe6b6d37f972df8f5661b9dd6b74187f1af85f3d1f72e36a0f891358c72",
                        "attributes": {
                            "files.#": "10",
                            "files.0": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                            "files.1": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                            "files.2": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                            "files.3": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                            "files.4": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                            "files.5": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                            "files.6": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                            "files.7": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                            "files.8": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                            "files.9": "cb07005e8ecf1e689758c643dc8e7061bd3187c0494cdec8d35d0c2cdd3403ab",
                            "id": "2ba0bbe6b6d37f972df8f5661b9dd6b74187f1af85f3d1f72e36a0f891358c72",
                            "rendered": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/etcd.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewoiYXBpVmVyc2lvbiI6ICJ2MSIsCiJraW5kIjogIlBvZCIsCiJtZXRhZGF0YSI6IHsKICAibmFtZSI6ImV0Y2Qtbm9kZS0zIiwKICAibmFtZXNwYWNlIjogImt1YmUtc3lzdGVtIiwKICAiYW5ub3RhdGlvbnMiOiB7CiAgICAic2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kIjogIiIKICB9Cn0sCiJzcGVjIjp7CiJob3N0TmV0d29yayI6IHRydWUsCiJjb250YWluZXJzIjpbCiAgICB7CiAgICAibmFtZSI6ICJldGNkLWNvbnRhaW5lciIsCiAgICAiaW1hZ2UiOiAiZ2NyLmlvL2dvb2dsZV9jb250YWluZXJzL2V0Y2Q6My4yLjE0IiwKICAgICJyZXNvdXJjZXMiOiB7CiAgICAgICJyZXF1ZXN0cyI6IHsKICAgICAgICAiY3B1IjogMQogICAgICB9CiAgICB9LAogICAgImNvbW1hbmQiOiBbCiAgICAgICAgICAgICAgIi9iaW4vc2giLAogICAgICAgICAgICAgICItYyIsCiAgICAgICAgICAgICAgImlmIFsgLWUgL3Vzci9sb2NhbC9iaW4vbWlncmF0ZS1pZi1uZWVkZWQuc2ggXTsgdGhlbiAvdXNyL2xvY2FsL2Jpbi9taWdyYXRlLWlmLW5lZWRlZC5zaCAxPj4vdmFyL2xvZy9ldGNkLmxvZyAyPiYxOyBmaTsgZXhlYyAvdXNyL2xvY2FsL2Jpbi9ldGNkIC0tbmFtZSBldGNkLW5vZGUtMyAtLWxpc3Rlbi1wZWVyLXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtYWR2ZXJ0aXNlLXBlZXItdXJscyBodHRwOi8vMTAuMTAwLjUwLjEwMjoyMzgwIC0tYWR2ZXJ0aXNlLWNsaWVudC11cmxzIGh0dHA6Ly8xMC4xMDAuNTAuMTAyOjIzNzkgLS1saXN0ZW4tY2xpZW50LXVybHMgaHR0cDovLzEwLjEwMC41MC4xMDI6MjM3OSxodHRwOi8vMTI3LjAuMC4xOjIzNzkgLS1pbml0aWFsLWNsdXN0ZXItdG9rZW4gZXRjZC1jbHVzdGVyLTEgLS1kYXRhLWRpciAvdmFyL2V0Y2QvZGF0YSAtLWluaXRpYWwtY2x1c3RlciBldGNkLW5vZGUtMT1odHRwOi8vMTAuMTAwLjUwLjEwMDoyMzgwLGV0Y2Qtbm9kZS0yPWh0dHA6Ly8xMC4xMDAuNTAuMTAxOjIzODAsZXRjZC1ub2RlLTM9aHR0cDovLzEwLjEwMC41MC4xMDI6MjM4MCAtLWluaXRpYWwtY2x1c3Rlci1zdGF0ZSBuZXcgMT4+L3Zhci9sb2cvZXRjZC5sb2cgMj4mMSIKICAgICAgICAgICAgXSwKICAgICJlbnYiOiBbCiAgICAgIHsgIm5hbWUiOiAiVEFSR0VUX1NUT1JBR0UiLAogICAgICAgICJ2YWx1ZSI6ICJldGNkMyIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJUQVJHRVRfVkVSU0lPTiIsCiAgICAgICAgInZhbHVlIjogIjMuMi4xNCIKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJEQVRBX0RJUkVDVE9SWSIsCiAgICAgICAgInZhbHVlIjogIi92YXIvZXRjZC9kYXRhIgogICAgICB9CiAgICAgICAgXSwKICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAiaHR0cEdldCI6IHsKICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICJwb3J0IjogMjM3OSwKICAgICAgICAicGF0aCI6ICIvaGVhbHRoIgogICAgICB9LAogICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgfSwKICAgICJwb3J0cyI6IFsKICAgICAgeyAibmFtZSI6ICJzZXJ2ZXJwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzODAsCiAgICAgICAgImhvc3RQb3J0IjogMjM4MCAKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJjbGllbnRwb3J0IiwKICAgICAgICAiY29udGFpbmVyUG9ydCI6IDIzNzksCiAgICAgICAgImhvc3RQb3J0IjogMjM3OQogICAgICB9CiAgICAgICAgXSwKICAgICJ2b2x1bWVNb3VudHMiOiBbCiAgICAgIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2V0Y2QiLAogICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHsgIm5hbWUiOiAidmFybG9nZXRjZCIsCiAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfSwKICAgICAgeyAibmFtZSI6ICJldGMiLAogICAgICAgICJtb3VudFBhdGgiOiAiL29wdC9ldGNkL2V0YyIsCiAgICAgICAgInJlYWRPbmx5IjogZmFsc2UKICAgICAgfQogICAgXQogICAgfQpdLAoidm9sdW1lcyI6WwogIHsgIm5hbWUiOiAidmFyZXRjZCIsCiAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgInBhdGgiOiAiL21udC9tYXN0ZXItcGQvdmFyL2V0Y2QifQogIH0sCiAgeyAibmFtZSI6ICJ2YXJsb2dldGNkIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvdmFyL2xvZy9ldGNkLmxvZyIsCiAgICAgICAgInR5cGUiOiAiRmlsZU9yQ3JlYXRlIn0KICB9LAogIHsgIm5hbWUiOiAiZXRjIiwKICAgICJob3N0UGF0aCI6IHsKICAgICAgICAicGF0aCI6ICIvb3B0L2V0Y2QvZXRjIn0KICB9Cl0KfX0K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }",
                            "systemd.#": "4",
                            "systemd.0": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                            "systemd.1": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                            "systemd.2": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                            "systemd.3": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.etcd_manifest": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.etcd_manifest"
                    ],
                    "primary": {
                        "id": "cb07005e8ecf1e689758c643dc8e7061bd3187c0494cdec8d35d0c2cdd3403ab",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "{\n\"apiVersion\": \"v1\",\n\"kind\": \"Pod\",\n\"metadata\": {\n  \"name\":\"etcd-node-3\",\n  \"namespace\": \"kube-system\",\n  \"annotations\": {\n    \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n  }\n},\n\"spec\":{\n\"hostNetwork\": true,\n\"containers\":[\n    {\n    \"name\": \"etcd-container\",\n    \"image\": \"gcr.io/google_containers/etcd:3.2.14\",\n    \"resources\": {\n      \"requests\": {\n        \"cpu\": 1\n      }\n    },\n    \"command\": [\n              \"/bin/sh\",\n              \"-c\",\n              \"if [ -e /usr/local/bin/migrate-if-needed.sh ]; then /usr/local/bin/migrate-if-needed.sh 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261; fi; exec /usr/local/bin/etcd --name etcd-node-3 --listen-peer-urls http://10.100.50.102:2380 --initial-advertise-peer-urls http://10.100.50.102:2380 --advertise-client-urls http://10.100.50.102:2379 --listen-client-urls http://10.100.50.102:2379,http://127.0.0.1:2379 --initial-cluster-token etcd-cluster-1 --data-dir /var/etcd/data --initial-cluster etcd-node-1=http://10.100.50.100:2380,etcd-node-2=http://10.100.50.101:2380,etcd-node-3=http://10.100.50.102:2380 --initial-cluster-state new 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261\"\n            ],\n    \"env\": [\n      { \"name\": \"TARGET_STORAGE\",\n        \"value\": \"etcd3\"\n      },\n      { \"name\": \"TARGET_VERSION\",\n        \"value\": \"3.2.14\"\n      },\n      { \"name\": \"DATA_DIRECTORY\",\n        \"value\": \"/var/etcd/data\"\n      }\n        ],\n    \"livenessProbe\": {\n      \"httpGet\": {\n        \"host\": \"127.0.0.1\",\n        \"port\": 2379,\n        \"path\": \"/health\"\n      },\n      \"initialDelaySeconds\": 15,\n      \"timeoutSeconds\": 15\n    },\n    \"ports\": [\n      { \"name\": \"serverport\",\n        \"containerPort\": 2380,\n        \"hostPort\": 2380 \n      },\n      { \"name\": \"clientport\",\n        \"containerPort\": 2379,\n        \"hostPort\": 2379\n      }\n        ],\n    \"volumeMounts\": [\n      { \"name\": \"varetcd\",\n        \"mountPath\": \"/var/etcd\",\n        \"readOnly\": false\n      },\n      { \"name\": \"varlogetcd\",\n        \"mountPath\": \"/var/log/etcd.log\",\n        \"readOnly\": false\n      },\n      { \"name\": \"etc\",\n        \"mountPath\": \"/opt/etcd/etc\",\n        \"readOnly\": false\n      }\n    ]\n    }\n],\n\"volumes\":[\n  { \"name\": \"varetcd\",\n    \"hostPath\": {\n        \"path\": \"/mnt/master-pd/var/etcd\"}\n  },\n  { \"name\": \"varlogetcd\",\n    \"hostPath\": {\n        \"path\": \"/var/log/etcd.log\",\n        \"type\": \"FileOrCreate\"}\n  },\n  { \"name\": \"etc\",\n    \"hostPath\": {\n        \"path\": \"/opt/etcd/etc\"}\n  }\n]\n}}\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "cb07005e8ecf1e689758c643dc8e7061bd3187c0494cdec8d35d0c2cdd3403ab",
                            "path": "/etc/kubernetes/manifests/etcd.manifest"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.template_file.etcd_manifest": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "da4649fdc404b333bf841ebcfa552c5ef93803876c2ce59e25fdbf49320c24ba",
                        "attributes": {
                            "id": "da4649fdc404b333bf841ebcfa552c5ef93803876c2ce59e25fdbf49320c24ba",
                            "rendered": "{\n\"apiVersion\": \"v1\",\n\"kind\": \"Pod\",\n\"metadata\": {\n  \"name\":\"etcd-node-3\",\n  \"namespace\": \"kube-system\",\n  \"annotations\": {\n    \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n  }\n},\n\"spec\":{\n\"hostNetwork\": true,\n\"containers\":[\n    {\n    \"name\": \"etcd-container\",\n    \"image\": \"gcr.io/google_containers/etcd:3.2.14\",\n    \"resources\": {\n      \"requests\": {\n        \"cpu\": 1\n      }\n    },\n    \"command\": [\n              \"/bin/sh\",\n              \"-c\",\n              \"if [ -e /usr/local/bin/migrate-if-needed.sh ]; then /usr/local/bin/migrate-if-needed.sh 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261; fi; exec /usr/local/bin/etcd --name etcd-node-3 --listen-peer-urls http://10.100.50.102:2380 --initial-advertise-peer-urls http://10.100.50.102:2380 --advertise-client-urls http://10.100.50.102:2379 --listen-client-urls http://10.100.50.102:2379,http://127.0.0.1:2379 --initial-cluster-token etcd-cluster-1 --data-dir /var/etcd/data --initial-cluster etcd-node-1=http://10.100.50.100:2380,etcd-node-2=http://10.100.50.101:2380,etcd-node-3=http://10.100.50.102:2380 --initial-cluster-state new 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261\"\n            ],\n    \"env\": [\n      { \"name\": \"TARGET_STORAGE\",\n        \"value\": \"etcd3\"\n      },\n      { \"name\": \"TARGET_VERSION\",\n        \"value\": \"3.2.14\"\n      },\n      { \"name\": \"DATA_DIRECTORY\",\n        \"value\": \"/var/etcd/data\"\n      }\n        ],\n    \"livenessProbe\": {\n      \"httpGet\": {\n        \"host\": \"127.0.0.1\",\n        \"port\": 2379,\n        \"path\": \"/health\"\n      },\n      \"initialDelaySeconds\": 15,\n      \"timeoutSeconds\": 15\n    },\n    \"ports\": [\n      { \"name\": \"serverport\",\n        \"containerPort\": 2380,\n        \"hostPort\": 2380 \n      },\n      { \"name\": \"clientport\",\n        \"containerPort\": 2379,\n        \"hostPort\": 2379\n      }\n        ],\n    \"volumeMounts\": [\n      { \"name\": \"varetcd\",\n        \"mountPath\": \"/var/etcd\",\n        \"readOnly\": false\n      },\n      { \"name\": \"varlogetcd\",\n        \"mountPath\": \"/var/log/etcd.log\",\n        \"readOnly\": false\n      },\n      { \"name\": \"etc\",\n        \"mountPath\": \"/opt/etcd/etc\",\n        \"readOnly\": false\n      }\n    ]\n    }\n],\n\"volumes\":[\n  { \"name\": \"varetcd\",\n    \"hostPath\": {\n        \"path\": \"/mnt/master-pd/var/etcd\"}\n  },\n  { \"name\": \"varlogetcd\",\n    \"hostPath\": {\n        \"path\": \"/var/log/etcd.log\",\n        \"type\": \"FileOrCreate\"}\n  },\n  { \"name\": \"etc\",\n    \"hostPath\": {\n        \"path\": \"/opt/etcd/etc\"}\n  }\n]\n}}\n",
                            "template": "{\n\"apiVersion\": \"v1\",\n\"kind\": \"Pod\",\n\"metadata\": {\n  \"name\":\"${node_name}\",\n  \"namespace\": \"kube-system\",\n  \"annotations\": {\n    \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n  }\n},\n\"spec\":{\n\"hostNetwork\": true,\n\"containers\":[\n    {\n    \"name\": \"etcd-container\",\n    \"image\": \"gcr.io/google_containers/etcd:3.2.14\",\n    \"resources\": {\n      \"requests\": {\n        \"cpu\": 1\n      }\n    },\n    \"command\": [\n              \"/bin/sh\",\n              \"-c\",\n              \"if [ -e /usr/local/bin/migrate-if-needed.sh ]; then /usr/local/bin/migrate-if-needed.sh 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261; fi; exec /usr/local/bin/etcd --name ${node_name} --listen-peer-urls http://${node_ip}:2380 --initial-advertise-peer-urls http://${node_ip}:2380 --advertise-client-urls http://${node_ip}:2379 --listen-client-urls http://${node_ip}:2379,http://127.0.0.1:2379 --initial-cluster-token etcd-cluster-1 --data-dir /var/etcd/data --initial-cluster ${cluster_members} --initial-cluster-state new 1\u003e\u003e/var/log/etcd.log 2\u003e\u00261\"\n            ],\n    \"env\": [\n      { \"name\": \"TARGET_STORAGE\",\n        \"value\": \"etcd3\"\n      },\n      { \"name\": \"TARGET_VERSION\",\n        \"value\": \"3.2.14\"\n      },\n      { \"name\": \"DATA_DIRECTORY\",\n        \"value\": \"/var/etcd/data\"\n      }\n        ],\n    \"livenessProbe\": {\n      \"httpGet\": {\n        \"host\": \"127.0.0.1\",\n        \"port\": 2379,\n        \"path\": \"/health\"\n      },\n      \"initialDelaySeconds\": 15,\n      \"timeoutSeconds\": 15\n    },\n    \"ports\": [\n      { \"name\": \"serverport\",\n        \"containerPort\": 2380,\n        \"hostPort\": 2380 \n      },\n      { \"name\": \"clientport\",\n        \"containerPort\": 2379,\n        \"hostPort\": 2379\n      }\n        ],\n    \"volumeMounts\": [\n      { \"name\": \"varetcd\",\n        \"mountPath\": \"/var/etcd\",\n        \"readOnly\": false\n      },\n      { \"name\": \"varlogetcd\",\n        \"mountPath\": \"/var/log/etcd.log\",\n        \"readOnly\": false\n      },\n      { \"name\": \"etc\",\n        \"mountPath\": \"/opt/etcd/etc\",\n        \"readOnly\": false\n      }\n    ]\n    }\n],\n\"volumes\":[\n  { \"name\": \"varetcd\",\n    \"hostPath\": {\n        \"path\": \"/mnt/master-pd/var/etcd\"}\n  },\n  { \"name\": \"varlogetcd\",\n    \"hostPath\": {\n        \"path\": \"/var/log/etcd.log\",\n        \"type\": \"FileOrCreate\"}\n  },\n  { \"name\": \"etc\",\n    \"hostPath\": {\n        \"path\": \"/opt/etcd/etc\"}\n  }\n]\n}}\n",
                            "vars.%": "3",
                            "vars.cluster_members": "etcd-node-1=http://10.100.50.100:2380,etcd-node-2=http://10.100.50.101:2380,etcd-node-3=http://10.100.50.102:2380",
                            "vars.node_ip": "10.100.50.102",
                            "vars.node_name": "etcd-node-3"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "master"
            ],
            "outputs": {
                "ignition_config": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/apiserver.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlBvZCIsCiAgImFwaVZlcnNpb24iOiAidjEiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtYXBpc2VydmVyIgogIH0sCiAgInNwZWMiOiB7CiAgICAiaG9zdE5ldHdvcmsiOiB0cnVlLAogICAgImNvbnRhaW5lcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJrdWJlLWFwaXNlcnZlciIsCiAgICAgICAgImltYWdlIjogImdjci5pby9nb29nbGUtY29udGFpbmVycy9oeXBlcmt1YmU6djEuOS4yIiwKICAgICAgICAiY29tbWFuZCI6IFsKICAgICAgICAgICIvaHlwZXJrdWJlIiwKICAgICAgICAgICJhcGlzZXJ2ZXIiLAogICAgICAgICAgIi0tYWRtaXNzaW9uLWNvbnRyb2w9TmFtZXNwYWNlTGlmZWN5Y2xlLExpbWl0UmFuZ2VyLFNlcnZpY2VBY2NvdW50LFBlcnNpc3RlbnRWb2x1bWVMYWJlbCxEZWZhdWx0U3RvcmFnZUNsYXNzLERlZmF1bHRUb2xlcmF0aW9uU2Vjb25kcyxNdXRhdGluZ0FkbWlzc2lvbldlYmhvb2ssVmFsaWRhdGluZ0FkbWlzc2lvbldlYmhvb2ssUmVzb3VyY2VRdW90YSIsCiAgICAgICAgICAiLS1hZHZlcnRpc2UtYWRkcmVzcz0xMC4xMDAuMTAwLjEwMCIsCiAgICAgICAgICAiLS1hbGxvdy1wcml2aWxlZ2VkPXRydWUiLAogICAgICAgICAgIi0tYmFzaWMtYXV0aC1maWxlPS9zcnYva3ViZXJuZXRlcy9iYXNpY19hdXRoLmNzdiIsCiAgICAgICAgICAiLS1iaW5kLWFkZHJlc3M9MTI3LjAuMC4xIiwKICAgICAgICAgICItLWNsaWVudC1jYS1maWxlPS9zcnYva3ViZXJuZXRlcy9jYS5jcnQiLAogICAgICAgICAgIi0tZXRjZC1zZXJ2ZXJzPWh0dHA6Ly8xMC4xMDAuNTAuMTAwOjIzNzksaHR0cDovLzEwLjEwMC41MC4xMDE6MjM3OSxodHRwOi8vMTAuMTAwLjUwLjEwMjoyMzc5IiwKICAgICAgICAgICItLWluc2VjdXJlLWJpbmQtYWRkcmVzcz0xMC4xMDAuMTAwLjEwMCIsCiAgICAgICAgICAiLS1zZXJ2aWNlLWFjY291bnQta2V5LWZpbGU9L3Nydi9rdWJlcm5ldGVzL3NlcnZlci5jcnQiLAogICAgICAgICAgIi0tc2VydmljZS1jbHVzdGVyLWlwLXJhbmdlPTEwLjExMC4wLjAvMTYiLAogICAgICAgICAgIi0tdG9rZW4tYXV0aC1maWxlPS9zcnYva3ViZXJuZXRlcy9rbm93bl90b2tlbnMuY3N2IgogICAgICAgIF0sCiAgICAgICAgInBvcnRzIjogWwogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJodHRwcyIsCiAgICAgICAgICAgICJob3N0UG9ydCI6IDQ0MywKICAgICAgICAgICAgImNvbnRhaW5lclBvcnQiOiA0NDMKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogImxvY2FsIiwKICAgICAgICAgICAgImhvc3RQb3J0IjogODA4MCwKICAgICAgICAgICAgImNvbnRhaW5lclBvcnQiOiA4MDgwCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAidm9sdW1lTW91bnRzIjogWwogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJzcnZrdWJlIiwKICAgICAgICAgICAgIm1vdW50UGF0aCI6ICIvc3J2L2t1YmVybmV0ZXMiLAogICAgICAgICAgICAicmVhZE9ubHkiOiB0cnVlCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJldGNzc2wiLAogICAgICAgICAgICAibW91bnRQYXRoIjogIi9ldGMvc3NsIiwKICAgICAgICAgICAgInJlYWRPbmx5IjogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAidmFybG9nIiwKICAgICAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZyIsCiAgICAgICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAibGl2ZW5lc3NQcm9iZSI6IHsKICAgICAgICAgICJodHRwR2V0IjogewogICAgICAgICAgICAic2NoZW1lIjogIkhUVFAiLAogICAgICAgICAgICAiaG9zdCI6ICIxMC4xMDAuMTAwLjEwMCIsCiAgICAgICAgICAgICJwb3J0IjogODA4MCwKICAgICAgICAgICAgInBhdGgiOiAiL2hlYWx0aHoiCiAgICAgICAgICB9LAogICAgICAgICAgImluaXRpYWxEZWxheVNlY29uZHMiOiAxMjAsCiAgICAgICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgICAgIH0KICAgICAgfQogICAgXSwKICAgICJ2b2x1bWVzIjogWwogICAgICB7CiAgICAgICAgIm5hbWUiOiAic3J2a3ViZSIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL3Nydi9rdWJlcm5ldGVzIgogICAgICAgIH0KICAgICAgfSwKICAgICAgewogICAgICAgICJuYW1lIjogImV0Y3NzbCIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL2V0Yy9zc2wiCiAgICAgICAgfQogICAgICB9LAogICAgICB7CiAgICAgICAgIm5hbWUiOiAidmFybG9nIiwKICAgICAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgICAicGF0aCI6ICIvb3B0L21hc3Rlci9sb2ciCiAgICAgICAgfQogICAgICB9CiAgICBdCiAgfQp9\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/scheduler.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlBvZCIsCiAgImFwaVZlcnNpb24iOiAidjEiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtc2NoZWR1bGVyIgogIH0sCiAgInNwZWMiOiB7CiAgICAiaG9zdE5ldHdvcmsiOiB0cnVlLAogICAgImNvbnRhaW5lcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJrdWJlLXNjaGVkdWxlciIsCiAgICAgICAgImltYWdlIjogImdjci5pby9nb29nbGUtY29udGFpbmVycy9oeXBlcmt1YmU6djEuOS4yIiwKICAgICAgICAiY29tbWFuZCI6IFsKICAgICAgICAgICIvaHlwZXJrdWJlIiwKICAgICAgICAgICJzY2hlZHVsZXIiLAogICAgICAgICAgIi0tbWFzdGVyPTEwLjEwMC4xMDAuMTAwOjgwODAiCiAgICAgICAgXSwKICAgICAgICAibGl2ZW5lc3NQcm9iZSI6IHsKICAgICAgICAgICJodHRwR2V0IjogewogICAgICAgICAgICAic2NoZW1lIjogIkhUVFAiLAogICAgICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICAgICAicG9ydCI6IDEwMjUxLAogICAgICAgICAgICAicGF0aCI6ICIvaGVhbHRoeiIKICAgICAgICAgIH0sCiAgICAgICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAgICAgInRpbWVvdXRTZWNvbmRzIjogMTUKICAgICAgICB9CiAgICAgIH0KICAgIF0KICB9Cn0=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/controller.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlBvZCIsCiAgImFwaVZlcnNpb24iOiAidjEiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtY29udHJvbGxlci1tYW5hZ2VyIgogIH0sCiAgInNwZWMiOiB7CiAgICAiaG9zdE5ldHdvcmsiOiB0cnVlLAogICAgImNvbnRhaW5lcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJrdWJlLWNvbnRyb2xsZXItbWFuYWdlciIsCiAgICAgICAgImltYWdlIjogImdjci5pby9nb29nbGUtY29udGFpbmVycy9oeXBlcmt1YmU6djEuOS4yIiwKICAgICAgICAiY29tbWFuZCI6IFsKICAgICAgICAgICIvaHlwZXJrdWJlIiwKICAgICAgICAgICJjb250cm9sbGVyLW1hbmFnZXIiLAogICAgICAgICAgIi0tYWxsb2NhdGUtbm9kZS1jaWRycz10cnVlIiwKICAgICAgICAgICItLWNsdXN0ZXItY2lkcj0xMC4xMjAuMC4wLzE2IiwKICAgICAgICAgICItLW1hc3Rlcj0xMC4xMDAuMTAwLjEwMDo4MDgwIiwKICAgICAgICAgICItLXNlcnZpY2UtYWNjb3VudC1wcml2YXRlLWtleS1maWxlPS9zcnYva3ViZXJuZXRlcy9zZXJ2ZXIua2V5IgogICAgICAgIF0sCiAgICAgICAgInZvbHVtZU1vdW50cyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAic3J2a3ViZSIsCiAgICAgICAgICAgICJtb3VudFBhdGgiOiAiL3Nydi9rdWJlcm5ldGVzIiwKICAgICAgICAgICAgInJlYWRPbmx5IjogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAiZXRjc3NsIiwKICAgICAgICAgICAgIm1vdW50UGF0aCI6ICIvZXRjL3NzbCIsCiAgICAgICAgICAgICJyZWFkT25seSI6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAgICAgImh0dHBHZXQiOiB7CiAgICAgICAgICAgICJzY2hlbWUiOiAiSFRUUCIsCiAgICAgICAgICAgICJob3N0IjogIjEyNy4wLjAuMSIsCiAgICAgICAgICAgICJwb3J0IjogMTAyNTIsCiAgICAgICAgICAgICJwYXRoIjogIi9oZWFsdGh6IgogICAgICAgICAgfSwKICAgICAgICAgICJpbml0aWFsRGVsYXlTZWNvbmRzIjogMTUsCiAgICAgICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgICAgIH0KICAgICAgfQogICAgXSwKICAgICJ2b2x1bWVzIjogWwogICAgICB7CiAgICAgICAgIm5hbWUiOiAic3J2a3ViZSIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL3Nydi9rdWJlcm5ldGVzIgogICAgICAgIH0KICAgICAgfSwKICAgICAgewogICAgICAgICJuYW1lIjogImV0Y3NzbCIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL2V0Yy9zc2wiCiAgICAgICAgfQogICAgICB9CiAgICBdCiAgfQp9\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/server.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXakNDQWtLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETTFNelphCkZ3MHhPVEF5TURReU1ETXlOVEJhTUJZeEZEQVNCZ05WQkFNVEMydDFZbVV0YldGemRHVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtOCszQ0RGZjczbzVRcjhWMnNBUGkvc1BXL3lWT1Q2agpYYThHUFVxQXU0cjZmS1QvMUNaNDZ6WjVkaFFBZzRaMTJrZnRnYllnUHYxNVY2VFVwbVlYZytQTWZ4NDNWQXgzClRYb24wR2FoTTZJcUpFTkNCcVdaOVY0OVhYa3lBWHFtY0l5dzcvbnM4WERoR2hwTjBHbHVqUHB2d0JuVStiY3UKZTNOSTc5Yk9jSklHQ3ZlaVUwbThSaHlEVGI2c2w4T1RwVCt4MC9CMXZvMXpQT3oxZXdoamtzR0pnN3FQV3kweApVak1SdmJsaHZjUWFLZmYzQTZjamcrU2MxSEZvWFFlaU1NSHd0N3NKYzMwbThPbTU2UjBRRnN2OEZmZ1FJVFVsCndUcXFVVk9DV0VhNWVxRDZsY1Rac3pIK2dtdzNIUzlVb3Z6YWZySmtvVlp5YVVoL3p0dVZWd0lEQVFBQm8yc3cKYVRBZkJnTlZIU01FR0RBV2dCVDNmNEt3VVY4RmRITlhlNXNNUzFyTitocXVpREFNQmdOVkhSTUJBZjhFQWpBQQpNQThHQTFVZER3RUIvd1FGQXdNSHVBQXdKd1lEVlIwbEJDQXdIZ1lJS3dZQkJRVUhBd1FHQ0NzR0FRVUZCd01DCkJnZ3JCZ0VGQlFjREFUQU5CZ2txaGtpRzl3MEJBUVVGQUFPQ0FRRUF1eFdCOVFRaUZ1ZHduOTFQWlVmRjdYUU0KRlVzT2RvVWxVL09XRVN1dk9JeHB2a1Q3bHpUSTlPZmdRSjJob2pNK3I5U0xuZVBNVHBIdFloaVN4N0NCZ1lFSQplZnM1akRnZldwLzB6dU9iYnBjUFlmNGlSYy93TG0rZCtGdGtBUUpSRVFhNTk5akJORWRDby9FbSswaGtVQkRhCmx6THUvakZ4QnkyaFNRUU9IbkM5Z2orRDBQVXpTN2ZHQzJ1ellpWjE0U2lPTGxEaG53anhFZ0hid05JRldYTGQKSnhXYWpKTWVKb2Zabk1ZS0x1b3VxVytmVVNFRkpuYWZ4MmFKcnB5Szk2ZGROOFpJaUdXaTBpakFuc1NVVDJhSQpLbXpMQkR6cEtwKzliSlN6dWRBbW9sZEk3U0JuSnpSNTl5RVZwajBPK3hGT01pL1NmeVRIbXRSZjFjanl4dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/server.key\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbTgrM0NERmY3M281UXI4VjJzQVBpL3NQVy95Vk9UNmpYYThHUFVxQXU0cjZmS1QvCjFDWjQ2elo1ZGhRQWc0WjEya2Z0Z2JZZ1B2MTVWNlRVcG1ZWGcrUE1meDQzVkF4M1RYb24wR2FoTTZJcUpFTkMKQnFXWjlWNDlYWGt5QVhxbWNJeXc3L25zOFhEaEdocE4wR2x1alBwdndCblUrYmN1ZTNOSTc5Yk9jSklHQ3ZlaQpVMG04Umh5RFRiNnNsOE9UcFQreDAvQjF2bzF6UE96MWV3aGprc0dKZzdxUFd5MHhVak1SdmJsaHZjUWFLZmYzCkE2Y2pnK1NjMUhGb1hRZWlNTUh3dDdzSmMzMG04T201NlIwUUZzdjhGZmdRSVRVbHdUcXFVVk9DV0VhNWVxRDYKbGNUWnN6SCtnbXczSFM5VW92emFmckprb1ZaeWFVaC96dHVWVndJREFRQUJBb0lCQVFDQ2ZKbDNkZ28yLzNBVwo4dnExZ1NWRUFOVGpINHhGTGEwWkZ5d3Roa2g3UjYveFZTbWZIVDBsRnpEdmIxN2l4MmZKajNWYnJSQWlVSnNmCmlENUN3THN1ekVjRnFtT0JzeEx5d3J1M0wwd1BkdDYrRWNtbzBXVTNkVjRFK3l1aXkzbTZSa2trSUhXTDJoSGEKajI3ZGZINkYrSEpBT2lIL282Wjg0cGFSclo2ajdJZ1F6NjZBZUdhQnhnczN6azFpU1lTeGNBSGt3QkpnNjlqdQpPK3hrTE84S2lZRGRWSkpIZU9TWDd2eVVneSt4T0tMUGJKYlVhWHJKOW1NU2dqamh5OGs4UkhHdVZXcDdVdkZECjNsQnBYUmNlMmdIQTh5R3NCZU91Ly9zeWNHTUI1aXRpTEZ5aFBKSENXbHBKWmNEUHhUNWY5NzhlcDdrRm1OR2kKaEExTzJpOWhBb0dCQU0zVGVlRGZ0OFV2L21Md0MvV253TDc5UTNlMStUZ1k5RVRYaTZpRWo5U0tDK2hBVVQxMgpLVVB1ZlNBNE9JVW85Y1F2MWc0ZnRTZzF1WStLbmxOT0Ntb0VRTE1qOTc2Sk9JTzAvdjNxYnVUVkQ5VHhzcjhNCkpMY3dnc2NnaElyTmdXNmppTnZkZ0F5ejhsTnd5dTJMcUd4VXNnKzZwODAzTjd6RDdQWEZmeUVuQW9HQkFNSEwKRmJVc256c0ZaZlRubjZhV0lEWVF5eDZub01jeWNmTlU1YXAwR1Ayc2M2a3dVWUt1MVlScE05cVE3OGhJOW9YMgpqWmFwMnNrQTVOaEFTaEpEdWFsZDVZY2hLazhteVJCS2Q0TEo2bHdHNWgvRWcyVklXdGZDZmhydnR5aUdjMkdjCkZsMzgrM1daQ2hkVUVXOU9DeTFMWXI5YTQrSkxMcktibitqSWJDaFJBb0dBQVFGSFZ4SEFrL1hvQ0JPaiswOFcKWWRoYXUvcm5mSjZpa3JONnV4ZnFtOThRcjlHZ2srdy94MVVpeDBWL0FTZHlDOE13Q0dHZlFOTUNWUEVZVk0vTQp2VGZJR1JmVDNkcE5yRmIxNThkOVF5REhNd0w3SEhPeXVqSkNjVFozYnpZUnE3aWdzbklpYmUxekFYVkxpRjFtCk5TRTB2VjdyOHRTU01SbkR6bTlvYjRFQ2dZQmphdUVmQ2Q1Q05CbkRFeFNITEpzbndXUEN2VEl4SHNMd2wwd2YKTHVJbk9WSTRxSzRZUWNNTjQ3NlRVU21COFZSdkV6WTk1Yk4wekwyWjV4bFkxMSttOEtHd3VpWHZaekZjNXliNgpkTVdESXBMcUZ6RmxRMEkvVCtyTHZOQ1V2S3p5bFZXd0wvbDhzZDlJYW50clEzbGVhajhsZGVaVWtFZExuNlRnCmtmbFNrUUtCZ0JpSFl0a2M4WTFBcVI0YldEV1J0RS8wRnhEYTNDQWtmRlBmRzZxVmg4MDJnMmJrK0dWNVMzYisKNE5OcnNobk4wejk3ekdtUm9UbmlqQVNnRzVXQ2dLb1ZLeFRuZVNkRDdNWHlKa2RHLzlycnpMd2YvbnhIcHVYcwpjRFpJQjNLRlJVRjZIbEpaeWttSlkxa1kzN0ZmNjFGNnRQT0hjSms5eVlZMy8vSm5XYlY1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/known_tokens.csv\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,OENVQnRPaXl1R29FQjZab3Nkb3FaUFg5VmJRSVJYZ0Esa3ViZWxldCxrdWJlbGV0CkZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0LGt1YmUtcHJveHksa3ViZS1wcm94eQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/basic_auth.csv\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,aEt1ZzA1STZUdGVOMTZYSUF3emNYU2s1ZDFIWmVOb0osYWRtaW4sYWRtaW4K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }"
                }
            },
            "resources": {
                "data.ignition_config.master": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.apiserver_manifest",
                        "data.ignition_file.basic_auth",
                        "data.ignition_file.controller_manifest",
                        "data.ignition_file.known_tokens",
                        "data.ignition_file.scheduler_manifest",
                        "data.ignition_file.server_crt",
                        "data.ignition_file.server_key",
                        "module.common"
                    ],
                    "primary": {
                        "id": "e16070e592abe8795fc0a78a37405b1f9267e17624a7461969c22b684929b5ef",
                        "attributes": {
                            "files.#": "16",
                            "files.0": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                            "files.1": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                            "files.10": "da13be0318feb35b46f4f95ec7ec74dac889f2048ccddc83e717903a88f310c9",
                            "files.11": "072dea4275259c4668f512198e596c450f493371bcb1f88e7a61fa154503afa9",
                            "files.12": "440f86174603d6732056ca3f14a90fcf24a6c33feed886a40b1b5d7a3a5eed01",
                            "files.13": "c57033fca209c6ea57c80a41adace08fa0452293ea58670e6dc1040a4db946c0",
                            "files.14": "1c37b7cc6f86a5e50af04812fd7a481b4f111b210a7ee8cf0b6d10a35bdd1cc3",
                            "files.15": "98bb07d71d973b9afcdafbb45b722e5a96dbd3bc9bb8abad3b449780ca7fe643",
                            "files.2": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                            "files.3": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                            "files.4": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                            "files.5": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                            "files.6": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                            "files.7": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                            "files.8": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                            "files.9": "f0ea8e0c0ca6894d6b25e4330d523da3508abb351e28b5acdd4932852fd446a8",
                            "id": "e16070e592abe8795fc0a78a37405b1f9267e17624a7461969c22b684929b5ef",
                            "rendered": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/apiserver.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlBvZCIsCiAgImFwaVZlcnNpb24iOiAidjEiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtYXBpc2VydmVyIgogIH0sCiAgInNwZWMiOiB7CiAgICAiaG9zdE5ldHdvcmsiOiB0cnVlLAogICAgImNvbnRhaW5lcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJrdWJlLWFwaXNlcnZlciIsCiAgICAgICAgImltYWdlIjogImdjci5pby9nb29nbGUtY29udGFpbmVycy9oeXBlcmt1YmU6djEuOS4yIiwKICAgICAgICAiY29tbWFuZCI6IFsKICAgICAgICAgICIvaHlwZXJrdWJlIiwKICAgICAgICAgICJhcGlzZXJ2ZXIiLAogICAgICAgICAgIi0tYWRtaXNzaW9uLWNvbnRyb2w9TmFtZXNwYWNlTGlmZWN5Y2xlLExpbWl0UmFuZ2VyLFNlcnZpY2VBY2NvdW50LFBlcnNpc3RlbnRWb2x1bWVMYWJlbCxEZWZhdWx0U3RvcmFnZUNsYXNzLERlZmF1bHRUb2xlcmF0aW9uU2Vjb25kcyxNdXRhdGluZ0FkbWlzc2lvbldlYmhvb2ssVmFsaWRhdGluZ0FkbWlzc2lvbldlYmhvb2ssUmVzb3VyY2VRdW90YSIsCiAgICAgICAgICAiLS1hZHZlcnRpc2UtYWRkcmVzcz0xMC4xMDAuMTAwLjEwMCIsCiAgICAgICAgICAiLS1hbGxvdy1wcml2aWxlZ2VkPXRydWUiLAogICAgICAgICAgIi0tYmFzaWMtYXV0aC1maWxlPS9zcnYva3ViZXJuZXRlcy9iYXNpY19hdXRoLmNzdiIsCiAgICAgICAgICAiLS1iaW5kLWFkZHJlc3M9MTI3LjAuMC4xIiwKICAgICAgICAgICItLWNsaWVudC1jYS1maWxlPS9zcnYva3ViZXJuZXRlcy9jYS5jcnQiLAogICAgICAgICAgIi0tZXRjZC1zZXJ2ZXJzPWh0dHA6Ly8xMC4xMDAuNTAuMTAwOjIzNzksaHR0cDovLzEwLjEwMC41MC4xMDE6MjM3OSxodHRwOi8vMTAuMTAwLjUwLjEwMjoyMzc5IiwKICAgICAgICAgICItLWluc2VjdXJlLWJpbmQtYWRkcmVzcz0xMC4xMDAuMTAwLjEwMCIsCiAgICAgICAgICAiLS1zZXJ2aWNlLWFjY291bnQta2V5LWZpbGU9L3Nydi9rdWJlcm5ldGVzL3NlcnZlci5jcnQiLAogICAgICAgICAgIi0tc2VydmljZS1jbHVzdGVyLWlwLXJhbmdlPTEwLjExMC4wLjAvMTYiLAogICAgICAgICAgIi0tdG9rZW4tYXV0aC1maWxlPS9zcnYva3ViZXJuZXRlcy9rbm93bl90b2tlbnMuY3N2IgogICAgICAgIF0sCiAgICAgICAgInBvcnRzIjogWwogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJodHRwcyIsCiAgICAgICAgICAgICJob3N0UG9ydCI6IDQ0MywKICAgICAgICAgICAgImNvbnRhaW5lclBvcnQiOiA0NDMKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgICJuYW1lIjogImxvY2FsIiwKICAgICAgICAgICAgImhvc3RQb3J0IjogODA4MCwKICAgICAgICAgICAgImNvbnRhaW5lclBvcnQiOiA4MDgwCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAidm9sdW1lTW91bnRzIjogWwogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJzcnZrdWJlIiwKICAgICAgICAgICAgIm1vdW50UGF0aCI6ICIvc3J2L2t1YmVybmV0ZXMiLAogICAgICAgICAgICAicmVhZE9ubHkiOiB0cnVlCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICAibmFtZSI6ICJldGNzc2wiLAogICAgICAgICAgICAibW91bnRQYXRoIjogIi9ldGMvc3NsIiwKICAgICAgICAgICAgInJlYWRPbmx5IjogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAidmFybG9nIiwKICAgICAgICAgICAgIm1vdW50UGF0aCI6ICIvdmFyL2xvZyIsCiAgICAgICAgICAgICJyZWFkT25seSI6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAibGl2ZW5lc3NQcm9iZSI6IHsKICAgICAgICAgICJodHRwR2V0IjogewogICAgICAgICAgICAic2NoZW1lIjogIkhUVFAiLAogICAgICAgICAgICAiaG9zdCI6ICIxMC4xMDAuMTAwLjEwMCIsCiAgICAgICAgICAgICJwb3J0IjogODA4MCwKICAgICAgICAgICAgInBhdGgiOiAiL2hlYWx0aHoiCiAgICAgICAgICB9LAogICAgICAgICAgImluaXRpYWxEZWxheVNlY29uZHMiOiAxMjAsCiAgICAgICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgICAgIH0KICAgICAgfQogICAgXSwKICAgICJ2b2x1bWVzIjogWwogICAgICB7CiAgICAgICAgIm5hbWUiOiAic3J2a3ViZSIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL3Nydi9rdWJlcm5ldGVzIgogICAgICAgIH0KICAgICAgfSwKICAgICAgewogICAgICAgICJuYW1lIjogImV0Y3NzbCIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL2V0Yy9zc2wiCiAgICAgICAgfQogICAgICB9LAogICAgICB7CiAgICAgICAgIm5hbWUiOiAidmFybG9nIiwKICAgICAgICAiaG9zdFBhdGgiOiB7CiAgICAgICAgICAicGF0aCI6ICIvb3B0L21hc3Rlci9sb2ciCiAgICAgICAgfQogICAgICB9CiAgICBdCiAgfQp9\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/scheduler.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlBvZCIsCiAgImFwaVZlcnNpb24iOiAidjEiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtc2NoZWR1bGVyIgogIH0sCiAgInNwZWMiOiB7CiAgICAiaG9zdE5ldHdvcmsiOiB0cnVlLAogICAgImNvbnRhaW5lcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJrdWJlLXNjaGVkdWxlciIsCiAgICAgICAgImltYWdlIjogImdjci5pby9nb29nbGUtY29udGFpbmVycy9oeXBlcmt1YmU6djEuOS4yIiwKICAgICAgICAiY29tbWFuZCI6IFsKICAgICAgICAgICIvaHlwZXJrdWJlIiwKICAgICAgICAgICJzY2hlZHVsZXIiLAogICAgICAgICAgIi0tbWFzdGVyPTEwLjEwMC4xMDAuMTAwOjgwODAiCiAgICAgICAgXSwKICAgICAgICAibGl2ZW5lc3NQcm9iZSI6IHsKICAgICAgICAgICJodHRwR2V0IjogewogICAgICAgICAgICAic2NoZW1lIjogIkhUVFAiLAogICAgICAgICAgICAiaG9zdCI6ICIxMjcuMC4wLjEiLAogICAgICAgICAgICAicG9ydCI6IDEwMjUxLAogICAgICAgICAgICAicGF0aCI6ICIvaGVhbHRoeiIKICAgICAgICAgIH0sCiAgICAgICAgICAiaW5pdGlhbERlbGF5U2Vjb25kcyI6IDE1LAogICAgICAgICAgInRpbWVvdXRTZWNvbmRzIjogMTUKICAgICAgICB9CiAgICAgIH0KICAgIF0KICB9Cn0=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/etc/kubernetes/manifests/controller.manifest\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlBvZCIsCiAgImFwaVZlcnNpb24iOiAidjEiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtY29udHJvbGxlci1tYW5hZ2VyIgogIH0sCiAgInNwZWMiOiB7CiAgICAiaG9zdE5ldHdvcmsiOiB0cnVlLAogICAgImNvbnRhaW5lcnMiOiBbCiAgICAgIHsKICAgICAgICAibmFtZSI6ICJrdWJlLWNvbnRyb2xsZXItbWFuYWdlciIsCiAgICAgICAgImltYWdlIjogImdjci5pby9nb29nbGUtY29udGFpbmVycy9oeXBlcmt1YmU6djEuOS4yIiwKICAgICAgICAiY29tbWFuZCI6IFsKICAgICAgICAgICIvaHlwZXJrdWJlIiwKICAgICAgICAgICJjb250cm9sbGVyLW1hbmFnZXIiLAogICAgICAgICAgIi0tYWxsb2NhdGUtbm9kZS1jaWRycz10cnVlIiwKICAgICAgICAgICItLWNsdXN0ZXItY2lkcj0xMC4xMjAuMC4wLzE2IiwKICAgICAgICAgICItLW1hc3Rlcj0xMC4xMDAuMTAwLjEwMDo4MDgwIiwKICAgICAgICAgICItLXNlcnZpY2UtYWNjb3VudC1wcml2YXRlLWtleS1maWxlPS9zcnYva3ViZXJuZXRlcy9zZXJ2ZXIua2V5IgogICAgICAgIF0sCiAgICAgICAgInZvbHVtZU1vdW50cyI6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAic3J2a3ViZSIsCiAgICAgICAgICAgICJtb3VudFBhdGgiOiAiL3Nydi9rdWJlcm5ldGVzIiwKICAgICAgICAgICAgInJlYWRPbmx5IjogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgIm5hbWUiOiAiZXRjc3NsIiwKICAgICAgICAgICAgIm1vdW50UGF0aCI6ICIvZXRjL3NzbCIsCiAgICAgICAgICAgICJyZWFkT25seSI6IHRydWUKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJsaXZlbmVzc1Byb2JlIjogewogICAgICAgICAgImh0dHBHZXQiOiB7CiAgICAgICAgICAgICJzY2hlbWUiOiAiSFRUUCIsCiAgICAgICAgICAgICJob3N0IjogIjEyNy4wLjAuMSIsCiAgICAgICAgICAgICJwb3J0IjogMTAyNTIsCiAgICAgICAgICAgICJwYXRoIjogIi9oZWFsdGh6IgogICAgICAgICAgfSwKICAgICAgICAgICJpbml0aWFsRGVsYXlTZWNvbmRzIjogMTUsCiAgICAgICAgICAidGltZW91dFNlY29uZHMiOiAxNQogICAgICAgIH0KICAgICAgfQogICAgXSwKICAgICJ2b2x1bWVzIjogWwogICAgICB7CiAgICAgICAgIm5hbWUiOiAic3J2a3ViZSIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL3Nydi9rdWJlcm5ldGVzIgogICAgICAgIH0KICAgICAgfSwKICAgICAgewogICAgICAgICJuYW1lIjogImV0Y3NzbCIsCiAgICAgICAgImhvc3RQYXRoIjogewogICAgICAgICAgInBhdGgiOiAiL2V0Yy9zc2wiCiAgICAgICAgfQogICAgICB9CiAgICBdCiAgfQp9\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/server.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXakNDQWtLZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETTFNelphCkZ3MHhPVEF5TURReU1ETXlOVEJhTUJZeEZEQVNCZ05WQkFNVEMydDFZbVV0YldGemRHVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtOCszQ0RGZjczbzVRcjhWMnNBUGkvc1BXL3lWT1Q2agpYYThHUFVxQXU0cjZmS1QvMUNaNDZ6WjVkaFFBZzRaMTJrZnRnYllnUHYxNVY2VFVwbVlYZytQTWZ4NDNWQXgzClRYb24wR2FoTTZJcUpFTkNCcVdaOVY0OVhYa3lBWHFtY0l5dzcvbnM4WERoR2hwTjBHbHVqUHB2d0JuVStiY3UKZTNOSTc5Yk9jSklHQ3ZlaVUwbThSaHlEVGI2c2w4T1RwVCt4MC9CMXZvMXpQT3oxZXdoamtzR0pnN3FQV3kweApVak1SdmJsaHZjUWFLZmYzQTZjamcrU2MxSEZvWFFlaU1NSHd0N3NKYzMwbThPbTU2UjBRRnN2OEZmZ1FJVFVsCndUcXFVVk9DV0VhNWVxRDZsY1Rac3pIK2dtdzNIUzlVb3Z6YWZySmtvVlp5YVVoL3p0dVZWd0lEQVFBQm8yc3cKYVRBZkJnTlZIU01FR0RBV2dCVDNmNEt3VVY4RmRITlhlNXNNUzFyTitocXVpREFNQmdOVkhSTUJBZjhFQWpBQQpNQThHQTFVZER3RUIvd1FGQXdNSHVBQXdKd1lEVlIwbEJDQXdIZ1lJS3dZQkJRVUhBd1FHQ0NzR0FRVUZCd01DCkJnZ3JCZ0VGQlFjREFUQU5CZ2txaGtpRzl3MEJBUVVGQUFPQ0FRRUF1eFdCOVFRaUZ1ZHduOTFQWlVmRjdYUU0KRlVzT2RvVWxVL09XRVN1dk9JeHB2a1Q3bHpUSTlPZmdRSjJob2pNK3I5U0xuZVBNVHBIdFloaVN4N0NCZ1lFSQplZnM1akRnZldwLzB6dU9iYnBjUFlmNGlSYy93TG0rZCtGdGtBUUpSRVFhNTk5akJORWRDby9FbSswaGtVQkRhCmx6THUvakZ4QnkyaFNRUU9IbkM5Z2orRDBQVXpTN2ZHQzJ1ellpWjE0U2lPTGxEaG53anhFZ0hid05JRldYTGQKSnhXYWpKTWVKb2Zabk1ZS0x1b3VxVytmVVNFRkpuYWZ4MmFKcnB5Szk2ZGROOFpJaUdXaTBpakFuc1NVVDJhSQpLbXpMQkR6cEtwKzliSlN6dWRBbW9sZEk3U0JuSnpSNTl5RVZwajBPK3hGT01pL1NmeVRIbXRSZjFjanl4dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/server.key\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbTgrM0NERmY3M281UXI4VjJzQVBpL3NQVy95Vk9UNmpYYThHUFVxQXU0cjZmS1QvCjFDWjQ2elo1ZGhRQWc0WjEya2Z0Z2JZZ1B2MTVWNlRVcG1ZWGcrUE1meDQzVkF4M1RYb24wR2FoTTZJcUpFTkMKQnFXWjlWNDlYWGt5QVhxbWNJeXc3L25zOFhEaEdocE4wR2x1alBwdndCblUrYmN1ZTNOSTc5Yk9jSklHQ3ZlaQpVMG04Umh5RFRiNnNsOE9UcFQreDAvQjF2bzF6UE96MWV3aGprc0dKZzdxUFd5MHhVak1SdmJsaHZjUWFLZmYzCkE2Y2pnK1NjMUhGb1hRZWlNTUh3dDdzSmMzMG04T201NlIwUUZzdjhGZmdRSVRVbHdUcXFVVk9DV0VhNWVxRDYKbGNUWnN6SCtnbXczSFM5VW92emFmckprb1ZaeWFVaC96dHVWVndJREFRQUJBb0lCQVFDQ2ZKbDNkZ28yLzNBVwo4dnExZ1NWRUFOVGpINHhGTGEwWkZ5d3Roa2g3UjYveFZTbWZIVDBsRnpEdmIxN2l4MmZKajNWYnJSQWlVSnNmCmlENUN3THN1ekVjRnFtT0JzeEx5d3J1M0wwd1BkdDYrRWNtbzBXVTNkVjRFK3l1aXkzbTZSa2trSUhXTDJoSGEKajI3ZGZINkYrSEpBT2lIL282Wjg0cGFSclo2ajdJZ1F6NjZBZUdhQnhnczN6azFpU1lTeGNBSGt3QkpnNjlqdQpPK3hrTE84S2lZRGRWSkpIZU9TWDd2eVVneSt4T0tMUGJKYlVhWHJKOW1NU2dqamh5OGs4UkhHdVZXcDdVdkZECjNsQnBYUmNlMmdIQTh5R3NCZU91Ly9zeWNHTUI1aXRpTEZ5aFBKSENXbHBKWmNEUHhUNWY5NzhlcDdrRm1OR2kKaEExTzJpOWhBb0dCQU0zVGVlRGZ0OFV2L21Md0MvV253TDc5UTNlMStUZ1k5RVRYaTZpRWo5U0tDK2hBVVQxMgpLVVB1ZlNBNE9JVW85Y1F2MWc0ZnRTZzF1WStLbmxOT0Ntb0VRTE1qOTc2Sk9JTzAvdjNxYnVUVkQ5VHhzcjhNCkpMY3dnc2NnaElyTmdXNmppTnZkZ0F5ejhsTnd5dTJMcUd4VXNnKzZwODAzTjd6RDdQWEZmeUVuQW9HQkFNSEwKRmJVc256c0ZaZlRubjZhV0lEWVF5eDZub01jeWNmTlU1YXAwR1Ayc2M2a3dVWUt1MVlScE05cVE3OGhJOW9YMgpqWmFwMnNrQTVOaEFTaEpEdWFsZDVZY2hLazhteVJCS2Q0TEo2bHdHNWgvRWcyVklXdGZDZmhydnR5aUdjMkdjCkZsMzgrM1daQ2hkVUVXOU9DeTFMWXI5YTQrSkxMcktibitqSWJDaFJBb0dBQVFGSFZ4SEFrL1hvQ0JPaiswOFcKWWRoYXUvcm5mSjZpa3JONnV4ZnFtOThRcjlHZ2srdy94MVVpeDBWL0FTZHlDOE13Q0dHZlFOTUNWUEVZVk0vTQp2VGZJR1JmVDNkcE5yRmIxNThkOVF5REhNd0w3SEhPeXVqSkNjVFozYnpZUnE3aWdzbklpYmUxekFYVkxpRjFtCk5TRTB2VjdyOHRTU01SbkR6bTlvYjRFQ2dZQmphdUVmQ2Q1Q05CbkRFeFNITEpzbndXUEN2VEl4SHNMd2wwd2YKTHVJbk9WSTRxSzRZUWNNTjQ3NlRVU21COFZSdkV6WTk1Yk4wekwyWjV4bFkxMSttOEtHd3VpWHZaekZjNXliNgpkTVdESXBMcUZ6RmxRMEkvVCtyTHZOQ1V2S3p5bFZXd0wvbDhzZDlJYW50clEzbGVhajhsZGVaVWtFZExuNlRnCmtmbFNrUUtCZ0JpSFl0a2M4WTFBcVI0YldEV1J0RS8wRnhEYTNDQWtmRlBmRzZxVmg4MDJnMmJrK0dWNVMzYisKNE5OcnNobk4wejk3ekdtUm9UbmlqQVNnRzVXQ2dLb1ZLeFRuZVNkRDdNWHlKa2RHLzlycnpMd2YvbnhIcHVYcwpjRFpJQjNLRlJVRjZIbEpaeWttSlkxa1kzN0ZmNjFGNnRQT0hjSms5eVlZMy8vSm5XYlY1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/known_tokens.csv\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,OENVQnRPaXl1R29FQjZab3Nkb3FaUFg5VmJRSVJYZ0Esa3ViZWxldCxrdWJlbGV0CkZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0LGt1YmUtcHJveHksa3ViZS1wcm94eQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/basic_auth.csv\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,aEt1ZzA1STZUdGVOMTZYSUF3emNYU2s1ZDFIWmVOb0osYWRtaW4sYWRtaW4K\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }",
                            "systemd.#": "4",
                            "systemd.0": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                            "systemd.1": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                            "systemd.2": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                            "systemd.3": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.apiserver_manifest": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.apiserver_manifest"
                    ],
                    "primary": {
                        "id": "f0ea8e0c0ca6894d6b25e4330d523da3508abb351e28b5acdd4932852fd446a8",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "{\n  \"kind\": \"Pod\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"kube-apiserver\"\n  },\n  \"spec\": {\n    \"hostNetwork\": true,\n    \"containers\": [\n      {\n        \"name\": \"kube-apiserver\",\n        \"image\": \"gcr.io/google-containers/hyperkube:v1.9.2\",\n        \"command\": [\n          \"/hyperkube\",\n          \"apiserver\",\n          \"--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota\",\n          \"--advertise-address=10.100.100.100\",\n          \"--allow-privileged=true\",\n          \"--basic-auth-file=/srv/kubernetes/basic_auth.csv\",\n          \"--bind-address=127.0.0.1\",\n          \"--client-ca-file=/srv/kubernetes/ca.crt\",\n          \"--etcd-servers=http://10.100.50.100:2379,http://10.100.50.101:2379,http://10.100.50.102:2379\",\n          \"--insecure-bind-address=10.100.100.100\",\n          \"--service-account-key-file=/srv/kubernetes/server.crt\",\n          \"--service-cluster-ip-range=10.110.0.0/16\",\n          \"--token-auth-file=/srv/kubernetes/known_tokens.csv\"\n        ],\n        \"ports\": [\n          {\n            \"name\": \"https\",\n            \"hostPort\": 443,\n            \"containerPort\": 443\n          },\n          {\n            \"name\": \"local\",\n            \"hostPort\": 8080,\n            \"containerPort\": 8080\n          }\n        ],\n        \"volumeMounts\": [\n          {\n            \"name\": \"srvkube\",\n            \"mountPath\": \"/srv/kubernetes\",\n            \"readOnly\": true\n          },\n          {\n            \"name\": \"etcssl\",\n            \"mountPath\": \"/etc/ssl\",\n            \"readOnly\": true\n          },\n          {\n            \"name\": \"varlog\",\n            \"mountPath\": \"/var/log\",\n            \"readOnly\": false\n          }\n        ],\n        \"livenessProbe\": {\n          \"httpGet\": {\n            \"scheme\": \"HTTP\",\n            \"host\": \"10.100.100.100\",\n            \"port\": 8080,\n            \"path\": \"/healthz\"\n          },\n          \"initialDelaySeconds\": 120,\n          \"timeoutSeconds\": 15\n        }\n      }\n    ],\n    \"volumes\": [\n      {\n        \"name\": \"srvkube\",\n        \"hostPath\": {\n          \"path\": \"/srv/kubernetes\"\n        }\n      },\n      {\n        \"name\": \"etcssl\",\n        \"hostPath\": {\n          \"path\": \"/etc/ssl\"\n        }\n      },\n      {\n        \"name\": \"varlog\",\n        \"hostPath\": {\n          \"path\": \"/opt/master/log\"\n        }\n      }\n    ]\n  }\n}",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "f0ea8e0c0ca6894d6b25e4330d523da3508abb351e28b5acdd4932852fd446a8",
                            "path": "/etc/kubernetes/manifests/apiserver.manifest"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.basic_auth": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.basic_auth"
                    ],
                    "primary": {
                        "id": "98bb07d71d973b9afcdafbb45b722e5a96dbd3bc9bb8abad3b449780ca7fe643",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "hKug05I6TteN16XIAwzcXSk5d1HZeNoJ,admin,admin\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "98bb07d71d973b9afcdafbb45b722e5a96dbd3bc9bb8abad3b449780ca7fe643",
                            "path": "/srv/kubernetes/basic_auth.csv"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.controller_manifest": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.controller_manifest"
                    ],
                    "primary": {
                        "id": "072dea4275259c4668f512198e596c450f493371bcb1f88e7a61fa154503afa9",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "{\n  \"kind\": \"Pod\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"kube-controller-manager\"\n  },\n  \"spec\": {\n    \"hostNetwork\": true,\n    \"containers\": [\n      {\n        \"name\": \"kube-controller-manager\",\n        \"image\": \"gcr.io/google-containers/hyperkube:v1.9.2\",\n        \"command\": [\n          \"/hyperkube\",\n          \"controller-manager\",\n          \"--allocate-node-cidrs=true\",\n          \"--cluster-cidr=10.120.0.0/16\",\n          \"--master=10.100.100.100:8080\",\n          \"--service-account-private-key-file=/srv/kubernetes/server.key\"\n        ],\n        \"volumeMounts\": [\n          {\n            \"name\": \"srvkube\",\n            \"mountPath\": \"/srv/kubernetes\",\n            \"readOnly\": true\n          },\n          {\n            \"name\": \"etcssl\",\n            \"mountPath\": \"/etc/ssl\",\n            \"readOnly\": true\n          }\n        ],\n        \"livenessProbe\": {\n          \"httpGet\": {\n            \"scheme\": \"HTTP\",\n            \"host\": \"127.0.0.1\",\n            \"port\": 10252,\n            \"path\": \"/healthz\"\n          },\n          \"initialDelaySeconds\": 15,\n          \"timeoutSeconds\": 15\n        }\n      }\n    ],\n    \"volumes\": [\n      {\n        \"name\": \"srvkube\",\n        \"hostPath\": {\n          \"path\": \"/srv/kubernetes\"\n        }\n      },\n      {\n        \"name\": \"etcssl\",\n        \"hostPath\": {\n          \"path\": \"/etc/ssl\"\n        }\n      }\n    ]\n  }\n}",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "072dea4275259c4668f512198e596c450f493371bcb1f88e7a61fa154503afa9",
                            "path": "/etc/kubernetes/manifests/controller.manifest"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.known_tokens": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.known_tokens"
                    ],
                    "primary": {
                        "id": "1c37b7cc6f86a5e50af04812fd7a481b4f111b210a7ee8cf0b6d10a35bdd1cc3",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA,kubelet,kubelet\nFOmB10wdEBdJvLtL8C72P8UKVEGuTsat,kube-proxy,kube-proxy\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "1c37b7cc6f86a5e50af04812fd7a481b4f111b210a7ee8cf0b6d10a35bdd1cc3",
                            "path": "/srv/kubernetes/known_tokens.csv"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.scheduler_manifest": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.scheduler_manifest"
                    ],
                    "primary": {
                        "id": "da13be0318feb35b46f4f95ec7ec74dac889f2048ccddc83e717903a88f310c9",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "{\n  \"kind\": \"Pod\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"kube-scheduler\"\n  },\n  \"spec\": {\n    \"hostNetwork\": true,\n    \"containers\": [\n      {\n        \"name\": \"kube-scheduler\",\n        \"image\": \"gcr.io/google-containers/hyperkube:v1.9.2\",\n        \"command\": [\n          \"/hyperkube\",\n          \"scheduler\",\n          \"--master=10.100.100.100:8080\"\n        ],\n        \"livenessProbe\": {\n          \"httpGet\": {\n            \"scheme\": \"HTTP\",\n            \"host\": \"127.0.0.1\",\n            \"port\": 10251,\n            \"path\": \"/healthz\"\n          },\n          \"initialDelaySeconds\": 15,\n          \"timeoutSeconds\": 15\n        }\n      }\n    ]\n  }\n}",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "da13be0318feb35b46f4f95ec7ec74dac889f2048ccddc83e717903a88f310c9",
                            "path": "/etc/kubernetes/manifests/scheduler.manifest"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.server_crt": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "440f86174603d6732056ca3f14a90fcf24a6c33feed886a40b1b5d7a3a5eed01",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "-----BEGIN CERTIFICATE-----\nMIIDWjCCAkKgAwIBAgIBAjANBgkqhkiG9w0BAQUFADBeMQswCQYDVQQGEwJHQjEP\nMA0GA1UECBMGTG9uZG9uMQ8wDQYDVQQHEwZMb25kb24xDDAKBgNVBAoTA0RSQjEM\nMAoGA1UECxMDRFJCMREwDwYDVQQDEwhkcmIta3ViZTAeFw0xODAyMDQyMDM1MzZa\nFw0xOTAyMDQyMDMyNTBaMBYxFDASBgNVBAMTC2t1YmUtbWFzdGVyMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAm8+3CDFf73o5Qr8V2sAPi/sPW/yVOT6j\nXa8GPUqAu4r6fKT/1CZ46zZ5dhQAg4Z12kftgbYgPv15V6TUpmYXg+PMfx43VAx3\nTXon0GahM6IqJENCBqWZ9V49XXkyAXqmcIyw7/ns8XDhGhpN0GlujPpvwBnU+bcu\ne3NI79bOcJIGCveiU0m8RhyDTb6sl8OTpT+x0/B1vo1zPOz1ewhjksGJg7qPWy0x\nUjMRvblhvcQaKff3A6cjg+Sc1HFoXQeiMMHwt7sJc30m8Om56R0QFsv8FfgQITUl\nwTqqUVOCWEa5eqD6lcTZszH+gmw3HS9UovzafrJkoVZyaUh/ztuVVwIDAQABo2sw\naTAfBgNVHSMEGDAWgBT3f4KwUV8FdHNXe5sMS1rN+hquiDAMBgNVHRMBAf8EAjAA\nMA8GA1UdDwEB/wQFAwMHuAAwJwYDVR0lBCAwHgYIKwYBBQUHAwQGCCsGAQUFBwMC\nBggrBgEFBQcDATANBgkqhkiG9w0BAQUFAAOCAQEAuxWB9QQiFudwn91PZUfF7XQM\nFUsOdoUlU/OWESuvOIxpvkT7lzTI9OfgQJ2hojM+r9SLnePMTpHtYhiSx7CBgYEI\nefs5jDgfWp/0zuObbpcPYf4iRc/wLm+d+FtkAQJREQa599jBNEdCo/Em+0hkUBDa\nlzLu/jFxBy2hSQQOHnC9gj+D0PUzS7fGC2uzYiZ14SiOLlDhnwjxEgHbwNIFWXLd\nJxWajJMeJofZnMYKLuouqW+fUSEFJnafx2aJrpyK96ddN8ZIiGWi0ijAnsSUT2aI\nKmzLBDzpKp+9bJSzudAmoldI7SBnJzR59yEVpj0O+xFOMi/SfyTHmtRf1cjyxw==\n-----END CERTIFICATE-----\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "440f86174603d6732056ca3f14a90fcf24a6c33feed886a40b1b5d7a3a5eed01",
                            "path": "/srv/kubernetes/server.crt"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.server_key": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "c57033fca209c6ea57c80a41adace08fa0452293ea58670e6dc1040a4db946c0",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEAm8+3CDFf73o5Qr8V2sAPi/sPW/yVOT6jXa8GPUqAu4r6fKT/\n1CZ46zZ5dhQAg4Z12kftgbYgPv15V6TUpmYXg+PMfx43VAx3TXon0GahM6IqJENC\nBqWZ9V49XXkyAXqmcIyw7/ns8XDhGhpN0GlujPpvwBnU+bcue3NI79bOcJIGCvei\nU0m8RhyDTb6sl8OTpT+x0/B1vo1zPOz1ewhjksGJg7qPWy0xUjMRvblhvcQaKff3\nA6cjg+Sc1HFoXQeiMMHwt7sJc30m8Om56R0QFsv8FfgQITUlwTqqUVOCWEa5eqD6\nlcTZszH+gmw3HS9UovzafrJkoVZyaUh/ztuVVwIDAQABAoIBAQCCfJl3dgo2/3AW\n8vq1gSVEANTjH4xFLa0ZFywthkh7R6/xVSmfHT0lFzDvb17ix2fJj3VbrRAiUJsf\niD5CwLsuzEcFqmOBsxLywru3L0wPdt6+Ecmo0WU3dV4E+yuiy3m6RkkkIHWL2hHa\nj27dfH6F+HJAOiH/o6Z84paRrZ6j7IgQz66AeGaBxgs3zk1iSYSxcAHkwBJg69ju\nO+xkLO8KiYDdVJJHeOSX7vyUgy+xOKLPbJbUaXrJ9mMSgjjhy8k8RHGuVWp7UvFD\n3lBpXRce2gHA8yGsBeOu//sycGMB5itiLFyhPJHCWlpJZcDPxT5f978ep7kFmNGi\nhA1O2i9hAoGBAM3TeeDft8Uv/mLwC/WnwL79Q3e1+TgY9ETXi6iEj9SKC+hAUT12\nKUPufSA4OIUo9cQv1g4ftSg1uY+KnlNOCmoEQLMj976JOIO0/v3qbuTVD9Txsr8M\nJLcwgscghIrNgW6jiNvdgAyz8lNwyu2LqGxUsg+6p803N7zD7PXFfyEnAoGBAMHL\nFbUsnzsFZfTnn6aWIDYQyx6noMcycfNU5ap0GP2sc6kwUYKu1YRpM9qQ78hI9oX2\njZap2skA5NhAShJDuald5YchKk8myRBKd4LJ6lwG5h/Eg2VIWtfCfhrvtyiGc2Gc\nFl38+3WZChdUEW9OCy1LYr9a4+JLLrKbn+jIbChRAoGAAQFHVxHAk/XoCBOj+08W\nYdhau/rnfJ6ikrN6uxfqm98Qr9Ggk+w/x1Uix0V/ASdyC8MwCGGfQNMCVPEYVM/M\nvTfIGRfT3dpNrFb158d9QyDHMwL7HHOyujJCcTZ3bzYRq7igsnIibe1zAXVLiF1m\nNSE0vV7r8tSSMRnDzm9ob4ECgYBjauEfCd5CNBnDExSHLJsnwWPCvTIxHsLwl0wf\nLuInOVI4qK4YQcMN476TUSmB8VRvEzY95bN0zL2Z5xlY11+m8KGwuiXvZzFc5yb6\ndMWDIpLqFzFlQ0I/T+rLvNCUvKzylVWwL/l8sd9IantrQ3leaj8ldeZUkEdLn6Tg\nkflSkQKBgBiHYtkc8Y1AqR4bWDWRtE/0FxDa3CAkfFPfG6qVh802g2bk+GV5S3b+\n4NNrshnN0z97zGmRoTnijASgG5WCgKoVKxTneSdD7MXyJkdG/9rrzLwf/nxHpuXs\ncDZIB3KFRUF6HlJZykmJY1kY37Ff61F6tPOHcJk9yYY3//JnWbV5\n-----END RSA PRIVATE KEY-----\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "c57033fca209c6ea57c80a41adace08fa0452293ea58670e6dc1040a4db946c0",
                            "path": "/srv/kubernetes/server.key"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.template_file.apiserver_manifest": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "185eef87b11dddeb48c39df053b831a5d93ce6808e871910df8a54142d141248",
                        "attributes": {
                            "id": "185eef87b11dddeb48c39df053b831a5d93ce6808e871910df8a54142d141248",
                            "rendered": "{\n  \"kind\": \"Pod\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"kube-apiserver\"\n  },\n  \"spec\": {\n    \"hostNetwork\": true,\n    \"containers\": [\n      {\n        \"name\": \"kube-apiserver\",\n        \"image\": \"gcr.io/google-containers/hyperkube:v1.9.2\",\n        \"command\": [\n          \"/hyperkube\",\n          \"apiserver\",\n          \"--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota\",\n          \"--advertise-address=10.100.100.100\",\n          \"--allow-privileged=true\",\n          \"--basic-auth-file=/srv/kubernetes/basic_auth.csv\",\n          \"--bind-address=127.0.0.1\",\n          \"--client-ca-file=/srv/kubernetes/ca.crt\",\n          \"--etcd-servers=http://10.100.50.100:2379,http://10.100.50.101:2379,http://10.100.50.102:2379\",\n          \"--insecure-bind-address=10.100.100.100\",\n          \"--service-account-key-file=/srv/kubernetes/server.crt\",\n          \"--service-cluster-ip-range=10.110.0.0/16\",\n          \"--token-auth-file=/srv/kubernetes/known_tokens.csv\"\n        ],\n        \"ports\": [\n          {\n            \"name\": \"https\",\n            \"hostPort\": 443,\n            \"containerPort\": 443\n          },\n          {\n            \"name\": \"local\",\n            \"hostPort\": 8080,\n            \"containerPort\": 8080\n          }\n        ],\n        \"volumeMounts\": [\n          {\n            \"name\": \"srvkube\",\n            \"mountPath\": \"/srv/kubernetes\",\n            \"readOnly\": true\n          },\n          {\n            \"name\": \"etcssl\",\n            \"mountPath\": \"/etc/ssl\",\n            \"readOnly\": true\n          },\n          {\n            \"name\": \"varlog\",\n            \"mountPath\": \"/var/log\",\n            \"readOnly\": false\n          }\n        ],\n        \"livenessProbe\": {\n          \"httpGet\": {\n            \"scheme\": \"HTTP\",\n            \"host\": \"10.100.100.100\",\n            \"port\": 8080,\n            \"path\": \"/healthz\"\n          },\n          \"initialDelaySeconds\": 120,\n          \"timeoutSeconds\": 15\n        }\n      }\n    ],\n    \"volumes\": [\n      {\n        \"name\": \"srvkube\",\n        \"hostPath\": {\n          \"path\": \"/srv/kubernetes\"\n        }\n      },\n      {\n        \"name\": \"etcssl\",\n        \"hostPath\": {\n          \"path\": \"/etc/ssl\"\n        }\n      },\n      {\n        \"name\": \"varlog\",\n        \"hostPath\": {\n          \"path\": \"/opt/master/log\"\n        }\n      }\n    ]\n  }\n}",
                            "template": "{\n  \"kind\": \"Pod\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"kube-apiserver\"\n  },\n  \"spec\": {\n    \"hostNetwork\": true,\n    \"containers\": [\n      {\n        \"name\": \"kube-apiserver\",\n        \"image\": \"gcr.io/google-containers/hyperkube:v1.9.2\",\n        \"command\": [\n          \"/hyperkube\",\n          \"apiserver\",\n          \"--admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota\",\n          \"--advertise-address=${master_ip}\",\n          \"--allow-privileged=true\",\n          \"--basic-auth-file=/srv/kubernetes/basic_auth.csv\",\n          \"--bind-address=127.0.0.1\",\n          \"--client-ca-file=/srv/kubernetes/ca.crt\",\n          \"--etcd-servers=${etcd_servers}\",\n          \"--insecure-bind-address=${master_ip}\",\n          \"--service-account-key-file=/srv/kubernetes/server.crt\",\n          \"--service-cluster-ip-range=${service_cluster_ip_range}\",\n          \"--token-auth-file=/srv/kubernetes/known_tokens.csv\"\n        ],\n        \"ports\": [\n          {\n            \"name\": \"https\",\n            \"hostPort\": 443,\n            \"containerPort\": 443\n          },\n          {\n            \"name\": \"local\",\n            \"hostPort\": 8080,\n            \"containerPort\": 8080\n          }\n        ],\n        \"volumeMounts\": [\n          {\n            \"name\": \"srvkube\",\n            \"mountPath\": \"/srv/kubernetes\",\n            \"readOnly\": true\n          },\n          {\n            \"name\": \"etcssl\",\n            \"mountPath\": \"/etc/ssl\",\n            \"readOnly\": true\n          },\n          {\n            \"name\": \"varlog\",\n            \"mountPath\": \"/var/log\",\n            \"readOnly\": false\n          }\n        ],\n        \"livenessProbe\": {\n          \"httpGet\": {\n            \"scheme\": \"HTTP\",\n            \"host\": \"${master_ip}\",\n            \"port\": 8080,\n            \"path\": \"/healthz\"\n          },\n          \"initialDelaySeconds\": 120,\n          \"timeoutSeconds\": 15\n        }\n      }\n    ],\n    \"volumes\": [\n      {\n        \"name\": \"srvkube\",\n        \"hostPath\": {\n          \"path\": \"/srv/kubernetes\"\n        }\n      },\n      {\n        \"name\": \"etcssl\",\n        \"hostPath\": {\n          \"path\": \"/etc/ssl\"\n        }\n      },\n      {\n        \"name\": \"varlog\",\n        \"hostPath\": {\n          \"path\": \"/opt/master/log\"\n        }\n      }\n    ]\n  }\n}",
                            "vars.%": "3",
                            "vars.etcd_servers": "http://10.100.50.100:2379,http://10.100.50.101:2379,http://10.100.50.102:2379",
                            "vars.master_ip": "10.100.100.100",
                            "vars.service_cluster_ip_range": "10.110.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.basic_auth": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "ccc4b2dcdcb11da546252dc9d22d52b4e817527a131e541d17f33624be6d50b8",
                        "attributes": {
                            "id": "ccc4b2dcdcb11da546252dc9d22d52b4e817527a131e541d17f33624be6d50b8",
                            "rendered": "hKug05I6TteN16XIAwzcXSk5d1HZeNoJ,admin,admin\n",
                            "template": "${admin_token},admin,admin\n",
                            "vars.%": "1",
                            "vars.admin_token": "hKug05I6TteN16XIAwzcXSk5d1HZeNoJ"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.controller_manifest": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "83f71d8f8688eb62de2990e4c5fabd083c8452c5766e1ca7381eb2618dee126b",
                        "attributes": {
                            "id": "83f71d8f8688eb62de2990e4c5fabd083c8452c5766e1ca7381eb2618dee126b",
                            "rendered": "{\n  \"kind\": \"Pod\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"kube-controller-manager\"\n  },\n  \"spec\": {\n    \"hostNetwork\": true,\n    \"containers\": [\n      {\n        \"name\": \"kube-controller-manager\",\n        \"image\": \"gcr.io/google-containers/hyperkube:v1.9.2\",\n        \"command\": [\n          \"/hyperkube\",\n          \"controller-manager\",\n          \"--allocate-node-cidrs=true\",\n          \"--cluster-cidr=10.120.0.0/16\",\n          \"--master=10.100.100.100:8080\",\n          \"--service-account-private-key-file=/srv/kubernetes/server.key\"\n        ],\n        \"volumeMounts\": [\n          {\n            \"name\": \"srvkube\",\n            \"mountPath\": \"/srv/kubernetes\",\n            \"readOnly\": true\n          },\n          {\n            \"name\": \"etcssl\",\n            \"mountPath\": \"/etc/ssl\",\n            \"readOnly\": true\n          }\n        ],\n        \"livenessProbe\": {\n          \"httpGet\": {\n            \"scheme\": \"HTTP\",\n            \"host\": \"127.0.0.1\",\n            \"port\": 10252,\n            \"path\": \"/healthz\"\n          },\n          \"initialDelaySeconds\": 15,\n          \"timeoutSeconds\": 15\n        }\n      }\n    ],\n    \"volumes\": [\n      {\n        \"name\": \"srvkube\",\n        \"hostPath\": {\n          \"path\": \"/srv/kubernetes\"\n        }\n      },\n      {\n        \"name\": \"etcssl\",\n        \"hostPath\": {\n          \"path\": \"/etc/ssl\"\n        }\n      }\n    ]\n  }\n}",
                            "template": "{\n  \"kind\": \"Pod\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"kube-controller-manager\"\n  },\n  \"spec\": {\n    \"hostNetwork\": true,\n    \"containers\": [\n      {\n        \"name\": \"kube-controller-manager\",\n        \"image\": \"gcr.io/google-containers/hyperkube:v1.9.2\",\n        \"command\": [\n          \"/hyperkube\",\n          \"controller-manager\",\n          \"--allocate-node-cidrs=true\",\n          \"--cluster-cidr=${pod_cidr}\",\n          \"--master=${master_ip}:8080\",\n          \"--service-account-private-key-file=/srv/kubernetes/server.key\"\n        ],\n        \"volumeMounts\": [\n          {\n            \"name\": \"srvkube\",\n            \"mountPath\": \"/srv/kubernetes\",\n            \"readOnly\": true\n          },\n          {\n            \"name\": \"etcssl\",\n            \"mountPath\": \"/etc/ssl\",\n            \"readOnly\": true\n          }\n        ],\n        \"livenessProbe\": {\n          \"httpGet\": {\n            \"scheme\": \"HTTP\",\n            \"host\": \"127.0.0.1\",\n            \"port\": 10252,\n            \"path\": \"/healthz\"\n          },\n          \"initialDelaySeconds\": 15,\n          \"timeoutSeconds\": 15\n        }\n      }\n    ],\n    \"volumes\": [\n      {\n        \"name\": \"srvkube\",\n        \"hostPath\": {\n          \"path\": \"/srv/kubernetes\"\n        }\n      },\n      {\n        \"name\": \"etcssl\",\n        \"hostPath\": {\n          \"path\": \"/etc/ssl\"\n        }\n      }\n    ]\n  }\n}",
                            "vars.%": "2",
                            "vars.master_ip": "10.100.100.100",
                            "vars.pod_cidr": "10.120.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.known_tokens": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "142fedbaca5a69b468445a4daf5730fa76815009d50e512aec3c91d0442d2cc0",
                        "attributes": {
                            "id": "142fedbaca5a69b468445a4daf5730fa76815009d50e512aec3c91d0442d2cc0",
                            "rendered": "8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA,kubelet,kubelet\nFOmB10wdEBdJvLtL8C72P8UKVEGuTsat,kube-proxy,kube-proxy\n",
                            "template": "${kubelet_token},kubelet,kubelet\n${kube_proxy_token},kube-proxy,kube-proxy\n",
                            "vars.%": "2",
                            "vars.kube_proxy_token": "FOmB10wdEBdJvLtL8C72P8UKVEGuTsat",
                            "vars.kubelet_token": "8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.scheduler_manifest": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "5d6e339b6f687f1686e1799f61a75ff7efdfc5aac77e22e22f42c6153fe0d2b6",
                        "attributes": {
                            "id": "5d6e339b6f687f1686e1799f61a75ff7efdfc5aac77e22e22f42c6153fe0d2b6",
                            "rendered": "{\n  \"kind\": \"Pod\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"kube-scheduler\"\n  },\n  \"spec\": {\n    \"hostNetwork\": true,\n    \"containers\": [\n      {\n        \"name\": \"kube-scheduler\",\n        \"image\": \"gcr.io/google-containers/hyperkube:v1.9.2\",\n        \"command\": [\n          \"/hyperkube\",\n          \"scheduler\",\n          \"--master=10.100.100.100:8080\"\n        ],\n        \"livenessProbe\": {\n          \"httpGet\": {\n            \"scheme\": \"HTTP\",\n            \"host\": \"127.0.0.1\",\n            \"port\": 10251,\n            \"path\": \"/healthz\"\n          },\n          \"initialDelaySeconds\": 15,\n          \"timeoutSeconds\": 15\n        }\n      }\n    ]\n  }\n}",
                            "template": "{\n  \"kind\": \"Pod\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"kube-scheduler\"\n  },\n  \"spec\": {\n    \"hostNetwork\": true,\n    \"containers\": [\n      {\n        \"name\": \"kube-scheduler\",\n        \"image\": \"gcr.io/google-containers/hyperkube:v1.9.2\",\n        \"command\": [\n          \"/hyperkube\",\n          \"scheduler\",\n          \"--master=${master_ip}:8080\"\n        ],\n        \"livenessProbe\": {\n          \"httpGet\": {\n            \"scheme\": \"HTTP\",\n            \"host\": \"127.0.0.1\",\n            \"port\": 10251,\n            \"path\": \"/healthz\"\n          },\n          \"initialDelaySeconds\": 15,\n          \"timeoutSeconds\": 15\n        }\n      }\n    ]\n  }\n}",
                            "vars.%": "1",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "worker"
            ],
            "outputs": {
                "ignition_config": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }"
                }
            },
            "resources": {
                "data.ignition_config.worker": {
                    "type": "ignition_config",
                    "depends_on": [
                        "module.common"
                    ],
                    "primary": {
                        "id": "771c5aa7d7ec5c3aeca8562081460920d7945946b107e8bb7e634b4463439e70",
                        "attributes": {
                            "files.#": "9",
                            "files.0": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                            "files.1": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                            "files.2": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                            "files.3": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                            "files.4": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                            "files.5": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                            "files.6": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                            "files.7": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                            "files.8": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                            "id": "771c5aa7d7ec5c3aeca8562081460920d7945946b107e8bb7e634b4463439e70",
                            "rendered": "{\n    \"ignition\": {\n      \"config\": {},\n      \"timeouts\": {},\n      \"version\": \"2.1.0\"\n    },\n    \"networkd\": {},\n    \"passwd\": {},\n    \"storage\": {\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kubelet/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgdG9rZW46IDhDVUJ0T2l5dUdvRUI2Wm9zZG9xWlBYOVZiUUlSWGdBCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/kubeconfig\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnCnVzZXJzOgotIG5hbWU6IGt1YmUtcHJveHkKICB1c2VyOgogICAgdG9rZW46IEZPbUIxMHdkRUJkSnZMdEw4QzcyUDhVS1ZFR3VUc2F0CmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL3Nydi9rdWJlcm5ldGVzL2NhLmNydAogICAgc2VydmVyOiBodHRwOi8vMTAuMTAwLjEwMC4xMDA6ODA4MApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmUtcHJveHkKICBuYW1lOiBzZXJ2aWNlLWFjY291bnQtY29udGV4dApjdXJyZW50LWNvbnRleHQ6IHNlcnZpY2UtYWNjb3VudC1jb250ZXh0Cg==\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/kubernetes-server-linux-amd64.tar.gz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/srv/kubernetes/ca.crt\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRVUZBREJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQk1HVEc5dVpHOXVNUTh3RFFZRFZRUUhFd1pNYjI1a2IyNHhEREFLQmdOVkJBb1RBMFJTUWpFTQpNQW9HQTFVRUN4TURSRkpDTVJFd0R3WURWUVFERXdoa2NtSXRhM1ZpWlRBZUZ3MHhPREF5TURReU1ETXlOVEJhCkZ3MHhPVEF5TURReU1ETXlOVEJhTUY0eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlFd1pNYjI1a2IyNHgKRHpBTkJnTlZCQWNUQmt4dmJtUnZiakVNTUFvR0ExVUVDaE1EUkZKQ01Rd3dDZ1lEVlFRTEV3TkVVa0l4RVRBUApCZ05WQkFNVENHUnlZaTFyZFdKbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBCnYvQkw4YXVwQ01HbnFTeXJkTnJNMk1FK1RYeDNiOVluakpOcTQ3c0xlZ01QNURrUDA4emFPYmFpS2hHZTZzU04KdHE1K01oaEQwdEl1SDFYWkpCaGIzRFllaGJlMEN2R09ZMFlaUjB2bjA1SzA4NitINlV0RVR6RUtCcGpkbCtFZgpYN014VHUzQzRqQXljc003bjVqWVR0dUJtVDY1eXFKdmorcEc3bWp2bXFqSXAxdjlZcThxYlk1YWNwSzBZc1QyCjhLbjArZzZZL25DUjBXSkNuNFZiblpuUno3c1VKdjZxa0plT3pZMXBucGYvMStKdkFyUnpDUnlRSGRyQUVjU0oKb0tGWkxWdlNNSU4rc1ZBVTJ5M25nTjJmTS93KzZCdldiR2t4RlZJRUdmQWxuMW1WWHhNelRlTlBLOThCMGhiVgpYWlBMczlIVmU1TS9hT3l2MXBtVjl3SURBUUFCbzJRd1lqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BOEdBMVVkCkR3RUIvd1FGQXdNSEJnQXdIUVlEVlIwT0JCWUVGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUI4R0ExVWQKSXdRWU1CYUFGUGQvZ3JCUlh3VjBjMWQ3bXd4TFdzMzZHcTZJTUEwR0NTcUdTSWIzRFFFQkJRVUFBNElCQVFDRgpYOEJ1ZExRL1l6MG9sZjE3UlFla1RBZllubXNQWUZRbDVobEtPQXNwWmtKRmZFR2xOUWJWZFExbzlhYXB3Vld4CkxHTXB4eWhkMnpiK2Q0RDBJTWZNcitORnQzWmN0eXpHd1VMd0dKMXcrNy9TY2xVRkdZdVdvWFJGMEF0TFh4aXQKMlFhRUJTaUxmYzhwUHprS3MyT0FLaW5XQ0ZaTmdPeEswQXlIUzlwcFRINmZDNHpkQjFDWm8wVDhualVhcERHSwo0VHo5RnA4WFhaMHlNWmcrRkFKYTlXUjVpTnoraW5zZ3BLanlMQWVkcEdpQ1dpVmpNRjVjVlF5UjY3aE5sOHBpCjB5RnhnUVpvMXJiWnBjNnFua0FWWVQzWjdkaG9kaEd2WGhkRnlPNU44SklocVlMOU1nZVlRdWR6ODRXMUQ5aTcKa2pqd3VUN2UvZDY5TGFPcnVmRjIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/cni/bin/calico-ipam\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/cni-v0.3.0.tgz\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/opt/bootstrap/node_ip.sh\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApub2RlX2lwPSIiCndoaWxlIFsgLXogIiR7bm9kZV9pcH0iIF0KZG8KICAgIGVjaG8gIm5vZGVfaXAgbm90IHNldC4gU2xlZXBpbmcgZm9yIDUgc2Vjb25kcy4uLiIKICAgIHNsZWVwIDUKICAgIG5vZGVfaXA9JChpcCByb3V0ZSB8IGdyZXAgJzEwLjEwMC4wLjAvMTYnIHwgaGVhZCAtMSB8IGF3ayAne3ByaW50ICQ5fScpCmRvbmUKCmVjaG8gIkRldGVjdGVkIG5vZGUgSVA6ICR7bm9kZV9pcH0iCgplY2hvICJLVUJFX05PREVfSVA9JHtub2RlX2lwfSIgPiAvcnVuL2t1YmVfbm9kZV9pcC5lbnYK\",\n            \"verification\": {}\n          }\n        },\n        {\n          \"filesystem\": \"root\",\n          \"group\": {},\n          \"path\": \"/var/lib/kube-proxy/config.yaml\",\n          \"user\": {},\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjoga3ViZXByb3h5LmNvbmZpZy5rOHMuaW8vdjFhbHBoYTEKYmluZEFkZHJlc3M6IDAuMC4wLjAKY2xpZW50Q29ubmVjdGlvbjoKICBhY2NlcHRDb250ZW50VHlwZXM6ICIiCiAgYnVyc3Q6IDEwCiAgY29udGVudFR5cGU6IGFwcGxpY2F0aW9uL3ZuZC5rdWJlcm5ldGVzLnByb3RvYnVmCiAga3ViZWNvbmZpZzogIi92YXIvbGliL2t1YmVsZXQva3ViZWNvbmZpZyIKICBxcHM6IDUKY2x1c3RlckNJRFI6ICIxMC4xMjAuMC4wLzE2Igpjb25maWdTeW5jUGVyaW9kOiAxNW0wcwpjb25udHJhY2s6CiAgbWF4OiAwCiAgbWF4UGVyQ29yZTogMzI3NjgKICBtaW46IDEzMTA3MgogIHRjcENsb3NlV2FpdFRpbWVvdXQ6IDFoMG0wcwogIHRjcEVzdGFibGlzaGVkVGltZW91dDogMjRoMG0wcwplbmFibGVQcm9maWxpbmc6IGZhbHNlCmZlYXR1cmVHYXRlczogIiIKaGVhbHRoekJpbmRBZGRyZXNzOiAwLjAuMC4wOjEwMjU2Cmhvc3RuYW1lT3ZlcnJpZGU6ICIiCmlwdGFibGVzOgogIG1hc3F1ZXJhZGVBbGw6IGZhbHNlCiAgbWFzcXVlcmFkZUJpdDogMTQKICBtaW5TeW5jUGVyaW9kOiAwcwogIHN5bmNQZXJpb2Q6IDMwcwppcHZzOgogIG1pblN5bmNQZXJpb2Q6IDBzCiAgc2NoZWR1bGVyOiAiIgogIHN5bmNQZXJpb2Q6IDMwcwpraW5kOiBLdWJlUHJveHlDb25maWd1cmF0aW9uCm1ldHJpY3NCaW5kQWRkcmVzczogMTI3LjAuMC4xOjEwMjQ5Cm1vZGU6ICIiCm9vbVNjb3JlQWRqOiAtOTk5CnBvcnRSYW5nZTogIiIKcmVzb3VyY2VDb250YWluZXI6IC9rdWJlLXByb3h5CnVkcFRpbWVvdXRNaWxsaXNlY29uZHM6IDI1MG1zCg==\",\n            \"verification\": {}\n          }\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"contents\": \"[Service]\\nType=oneshot\\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \\u0026\\u0026 \\\\\\n  /opt/bootstrap/node_ip.sh'\\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \\u0026\\u0026 \\\\\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \\u0026\\u0026\\\\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \\u0026\\u0026 \\\\\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-server.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nEnvironmentFile=/run/kube_node_ip.env\\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\\nExecStart=/opt/kubernetes/server/bin/kubelet \\\\\\n  --allow-privileged=true \\\\\\n  --cluster-dns=10.110.50.10 \\\\\\n  --cluster-domain=cluster.local \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\\\\n  --network-plugin=cni \\\\\\n  --node-ip=${KUBE_NODE_IP} \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --register-node=true\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kubelet.service\"\n        },\n        {\n          \"dropins\": [\n            {\n              \"contents\": \"[Service]\\nEnvironment=DOCKER_OPTS=\\\"--iptables=false --ip-masq=false\\\"\\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\\n\",\n              \"name\": \"50-docker-options.conf\"\n            }\n          ],\n          \"enabled\": true,\n          \"name\": \"docker.service\"\n        },\n        {\n          \"contents\": \"[Unit]\\nRequires=kube-server.service docker.service\\nAfter=kube-server.service docker.service\\n\\n[Service]\\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\\\\n  --config=/var/lib/kube-proxy/config.yaml \\\\\\n  --master=http://10.100.100.100:8080\\n\\n[Install]\\nWantedBy=multi-user.target\\n\",\n          \"enabled\": true,\n          \"name\": \"kube-proxy.service\"\n        }\n      ]\n    }\n  }",
                            "systemd.#": "4",
                            "systemd.0": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                            "systemd.1": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                            "systemd.2": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                            "systemd.3": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "etcd1",
                "common"
            ],
            "outputs": {
                "ignition_file_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                        "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                        "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                        "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                        "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                        "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                        "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                        "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                        "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602"
                    ]
                },
                "ignition_systemd_unit_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                        "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                        "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                        "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107"
                    ]
                }
            },
            "resources": {
                "data.ignition_file.ca_crt": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "-----BEGIN CERTIFICATE-----\nMIIDmzCCAoOgAwIBAgIBATANBgkqhkiG9w0BAQUFADBeMQswCQYDVQQGEwJHQjEP\nMA0GA1UECBMGTG9uZG9uMQ8wDQYDVQQHEwZMb25kb24xDDAKBgNVBAoTA0RSQjEM\nMAoGA1UECxMDRFJCMREwDwYDVQQDEwhkcmIta3ViZTAeFw0xODAyMDQyMDMyNTBa\nFw0xOTAyMDQyMDMyNTBaMF4xCzAJBgNVBAYTAkdCMQ8wDQYDVQQIEwZMb25kb24x\nDzANBgNVBAcTBkxvbmRvbjEMMAoGA1UEChMDRFJCMQwwCgYDVQQLEwNEUkIxETAP\nBgNVBAMTCGRyYi1rdWJlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nv/BL8aupCMGnqSyrdNrM2ME+TXx3b9YnjJNq47sLegMP5DkP08zaObaiKhGe6sSN\ntq5+MhhD0tIuH1XZJBhb3DYehbe0CvGOY0YZR0vn05K086+H6UtETzEKBpjdl+Ef\nX7MxTu3C4jAycsM7n5jYTtuBmT65yqJvj+pG7mjvmqjIp1v9Yq8qbY5acpK0YsT2\n8Kn0+g6Y/nCR0WJCn4VbnZnRz7sUJv6qkJeOzY1pnpf/1+JvArRzCRyQHdrAEcSJ\noKFZLVvSMIN+sVAU2y3ngN2fM/w+6BvWbGkxFVIEGfAln1mVXxMzTeNPK98B0hbV\nXZPLs9HVe5M/aOyv1pmV9wIDAQABo2QwYjAPBgNVHRMBAf8EBTADAQH/MA8GA1Ud\nDwEB/wQFAwMHBgAwHQYDVR0OBBYEFPd/grBRXwV0c1d7mwxLWs36Gq6IMB8GA1Ud\nIwQYMBaAFPd/grBRXwV0c1d7mwxLWs36Gq6IMA0GCSqGSIb3DQEBBQUAA4IBAQCF\nX8BudLQ/Yz0olf17RQekTAfYnmsPYFQl5hlKOAspZkJFfEGlNQbVdQ1o9aapwVWx\nLGMpxyhd2zb+d4D0IMfMr+NFt3ZctyzGwULwGJ1w+7/SclUFGYuWoXRF0AtLXxit\n2QaEBSiLfc8pPzkKs2OAKinWCFZNgOxK0AyHS9ppTH6fC4zdB1CZo0T8njUapDGK\n4Tz9Fp8XXZ0yMZg+FAJa9WR5iNz+insgpKjyLAedpGiCWiVjMF5cVQyR67hNl8pi\n0yFxgQZo1rbZpc6qnkAVYT3Z7dhodhGvXhdFyO5N8JIhqYL9MgeYQudz84W1D9i7\nkjjwuT7e/d69LaOrufF2\n-----END CERTIFICATE-----\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                            "path": "/srv/kubernetes/ca.crt"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.calico": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                        "attributes": {
                            "filesystem": "root",
                            "id": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                            "path": "/opt/cni/bin/calico",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.calico_ipam": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                        "attributes": {
                            "filesystem": "root",
                            "id": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                            "path": "/opt/cni/bin/calico-ipam",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.cni": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                        "attributes": {
                            "filesystem": "root",
                            "id": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                            "path": "/opt/bootstrap/cni-v0.3.0.tgz",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_proxy_config": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube_proxy_config"
                    ],
                    "primary": {
                        "id": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"10.120.0.0/16\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                            "path": "/var/lib/kube-proxy/config.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_proxy_kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube_proxy_kubeconfig"
                    ],
                    "primary": {
                        "id": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: FOmB10wdEBdJvLtL8C72P8UKVEGuTsat\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                            "path": "/var/lib/kube-proxy/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_server": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                        "attributes": {
                            "filesystem": "root",
                            "id": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                            "path": "/opt/kubernetes-server-linux-amd64.tar.gz",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kubelet_kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kubelet_kubeconfig"
                    ],
                    "primary": {
                        "id": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: 8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                            "path": "/var/lib/kubelet/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.node_ip_sh": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.node_ip_sh"
                    ],
                    "primary": {
                        "id": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '10.100.0.0/16' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: ${node_ip}\"\n\necho \"KUBE_NODE_IP=${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                            "path": "/opt/bootstrap/node_ip.sh"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.docker_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                        "attributes": {
                            "dropin.#": "1",
                            "dropin.0.content": "[Service]\nEnvironment=DOCKER_OPTS=\"--iptables=false --ip-masq=false\"\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\n",
                            "dropin.0.name": "50-docker-options.conf",
                            "enabled": "true",
                            "id": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                            "name": "docker.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kube_proxy_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kube_proxy_service"
                    ],
                    "primary": {
                        "id": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107",
                        "attributes": {
                            "content": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://10.100.100.100:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107",
                            "name": "kube-proxy.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kube_server_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                        "attributes": {
                            "content": "[Service]\nType=oneshot\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \u0026\u0026 \\\n  /opt/bootstrap/node_ip.sh'\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \u0026\u0026 \\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \u0026\u0026\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \u0026\u0026 \\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                            "name": "kube-server.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kubelet_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kubelet_service"
                    ],
                    "primary": {
                        "id": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                        "attributes": {
                            "content": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=10.110.50.10 \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                            "name": "kubelet.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.template_file.kube_proxy_config": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "dd86182b8c2bf1870d5309c331f1c0ad6ff6060aa1b80f7851a2d09d042a0ff2",
                        "attributes": {
                            "id": "dd86182b8c2bf1870d5309c331f1c0ad6ff6060aa1b80f7851a2d09d042a0ff2",
                            "rendered": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"10.120.0.0/16\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "template": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"${pod_cidr}\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "vars.%": "1",
                            "vars.pod_cidr": "10.120.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_proxy_kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "a90a671af77e889ba0de014816a29710fde00c530ce58e0a6160be3a65a33af4",
                        "attributes": {
                            "id": "a90a671af77e889ba0de014816a29710fde00c530ce58e0a6160be3a65a33af4",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: FOmB10wdEBdJvLtL8C72P8UKVEGuTsat\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: ${TOKEN}\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "vars.%": "2",
                            "vars.TOKEN": "FOmB10wdEBdJvLtL8C72P8UKVEGuTsat",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_proxy_service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2c86011250e778a4ddacadf1ed252b21cea9f89e053152f52d5f398e8ccb695b",
                        "attributes": {
                            "id": "2c86011250e778a4ddacadf1ed252b21cea9f89e053152f52d5f398e8ccb695b",
                            "rendered": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://10.100.100.100:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://${master_ip}:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "1",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubelet_kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "e2c663987cde14bdef4a37e685a970fbf592948e10e259c136fce942841d3904",
                        "attributes": {
                            "id": "e2c663987cde14bdef4a37e685a970fbf592948e10e259c136fce942841d3904",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: 8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: ${TOKEN}\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "vars.%": "2",
                            "vars.TOKEN": "8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubelet_service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "5d602de0a16fd8189837aebcecc26f274dcde0c53e756a4b44daaa62cc2da67a",
                        "attributes": {
                            "id": "5d602de0a16fd8189837aebcecc26f274dcde0c53e756a4b44daaa62cc2da67a",
                            "rendered": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=10.110.50.10 \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=${cluster_dns_ip} \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=$${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "1",
                            "vars.cluster_dns_ip": "10.110.50.10"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.node_ip_sh": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b1140de1b9a6cab5e04089a5c1a8487296ee86c3c3b1502f2d4102be32074d35",
                        "attributes": {
                            "id": "b1140de1b9a6cab5e04089a5c1a8487296ee86c3c3b1502f2d4102be32074d35",
                            "rendered": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '10.100.0.0/16' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: ${node_ip}\"\n\necho \"KUBE_NODE_IP=${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "template": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"$${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '${cluster_cidr}' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: $${node_ip}\"\n\necho \"KUBE_NODE_IP=$${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "vars.%": "1",
                            "vars.cluster_cidr": "10.100.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "etcd2",
                "common"
            ],
            "outputs": {
                "ignition_file_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                        "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                        "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                        "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                        "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                        "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                        "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                        "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                        "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602"
                    ]
                },
                "ignition_systemd_unit_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                        "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                        "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                        "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107"
                    ]
                }
            },
            "resources": {
                "data.ignition_file.ca_crt": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "-----BEGIN CERTIFICATE-----\nMIIDmzCCAoOgAwIBAgIBATANBgkqhkiG9w0BAQUFADBeMQswCQYDVQQGEwJHQjEP\nMA0GA1UECBMGTG9uZG9uMQ8wDQYDVQQHEwZMb25kb24xDDAKBgNVBAoTA0RSQjEM\nMAoGA1UECxMDRFJCMREwDwYDVQQDEwhkcmIta3ViZTAeFw0xODAyMDQyMDMyNTBa\nFw0xOTAyMDQyMDMyNTBaMF4xCzAJBgNVBAYTAkdCMQ8wDQYDVQQIEwZMb25kb24x\nDzANBgNVBAcTBkxvbmRvbjEMMAoGA1UEChMDRFJCMQwwCgYDVQQLEwNEUkIxETAP\nBgNVBAMTCGRyYi1rdWJlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nv/BL8aupCMGnqSyrdNrM2ME+TXx3b9YnjJNq47sLegMP5DkP08zaObaiKhGe6sSN\ntq5+MhhD0tIuH1XZJBhb3DYehbe0CvGOY0YZR0vn05K086+H6UtETzEKBpjdl+Ef\nX7MxTu3C4jAycsM7n5jYTtuBmT65yqJvj+pG7mjvmqjIp1v9Yq8qbY5acpK0YsT2\n8Kn0+g6Y/nCR0WJCn4VbnZnRz7sUJv6qkJeOzY1pnpf/1+JvArRzCRyQHdrAEcSJ\noKFZLVvSMIN+sVAU2y3ngN2fM/w+6BvWbGkxFVIEGfAln1mVXxMzTeNPK98B0hbV\nXZPLs9HVe5M/aOyv1pmV9wIDAQABo2QwYjAPBgNVHRMBAf8EBTADAQH/MA8GA1Ud\nDwEB/wQFAwMHBgAwHQYDVR0OBBYEFPd/grBRXwV0c1d7mwxLWs36Gq6IMB8GA1Ud\nIwQYMBaAFPd/grBRXwV0c1d7mwxLWs36Gq6IMA0GCSqGSIb3DQEBBQUAA4IBAQCF\nX8BudLQ/Yz0olf17RQekTAfYnmsPYFQl5hlKOAspZkJFfEGlNQbVdQ1o9aapwVWx\nLGMpxyhd2zb+d4D0IMfMr+NFt3ZctyzGwULwGJ1w+7/SclUFGYuWoXRF0AtLXxit\n2QaEBSiLfc8pPzkKs2OAKinWCFZNgOxK0AyHS9ppTH6fC4zdB1CZo0T8njUapDGK\n4Tz9Fp8XXZ0yMZg+FAJa9WR5iNz+insgpKjyLAedpGiCWiVjMF5cVQyR67hNl8pi\n0yFxgQZo1rbZpc6qnkAVYT3Z7dhodhGvXhdFyO5N8JIhqYL9MgeYQudz84W1D9i7\nkjjwuT7e/d69LaOrufF2\n-----END CERTIFICATE-----\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                            "path": "/srv/kubernetes/ca.crt"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.calico": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                        "attributes": {
                            "filesystem": "root",
                            "id": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                            "path": "/opt/cni/bin/calico",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.calico_ipam": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                        "attributes": {
                            "filesystem": "root",
                            "id": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                            "path": "/opt/cni/bin/calico-ipam",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.cni": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                        "attributes": {
                            "filesystem": "root",
                            "id": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                            "path": "/opt/bootstrap/cni-v0.3.0.tgz",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_proxy_config": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube_proxy_config"
                    ],
                    "primary": {
                        "id": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"10.120.0.0/16\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                            "path": "/var/lib/kube-proxy/config.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_proxy_kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube_proxy_kubeconfig"
                    ],
                    "primary": {
                        "id": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: FOmB10wdEBdJvLtL8C72P8UKVEGuTsat\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                            "path": "/var/lib/kube-proxy/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_server": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                        "attributes": {
                            "filesystem": "root",
                            "id": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                            "path": "/opt/kubernetes-server-linux-amd64.tar.gz",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kubelet_kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kubelet_kubeconfig"
                    ],
                    "primary": {
                        "id": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: 8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                            "path": "/var/lib/kubelet/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.node_ip_sh": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.node_ip_sh"
                    ],
                    "primary": {
                        "id": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '10.100.0.0/16' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: ${node_ip}\"\n\necho \"KUBE_NODE_IP=${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                            "path": "/opt/bootstrap/node_ip.sh"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.docker_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                        "attributes": {
                            "dropin.#": "1",
                            "dropin.0.content": "[Service]\nEnvironment=DOCKER_OPTS=\"--iptables=false --ip-masq=false\"\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\n",
                            "dropin.0.name": "50-docker-options.conf",
                            "enabled": "true",
                            "id": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                            "name": "docker.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kube_proxy_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kube_proxy_service"
                    ],
                    "primary": {
                        "id": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107",
                        "attributes": {
                            "content": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://10.100.100.100:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107",
                            "name": "kube-proxy.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kube_server_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                        "attributes": {
                            "content": "[Service]\nType=oneshot\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \u0026\u0026 \\\n  /opt/bootstrap/node_ip.sh'\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \u0026\u0026 \\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \u0026\u0026\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \u0026\u0026 \\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                            "name": "kube-server.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kubelet_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kubelet_service"
                    ],
                    "primary": {
                        "id": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                        "attributes": {
                            "content": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=10.110.50.10 \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                            "name": "kubelet.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.template_file.kube_proxy_config": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "dd86182b8c2bf1870d5309c331f1c0ad6ff6060aa1b80f7851a2d09d042a0ff2",
                        "attributes": {
                            "id": "dd86182b8c2bf1870d5309c331f1c0ad6ff6060aa1b80f7851a2d09d042a0ff2",
                            "rendered": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"10.120.0.0/16\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "template": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"${pod_cidr}\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "vars.%": "1",
                            "vars.pod_cidr": "10.120.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_proxy_kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "a90a671af77e889ba0de014816a29710fde00c530ce58e0a6160be3a65a33af4",
                        "attributes": {
                            "id": "a90a671af77e889ba0de014816a29710fde00c530ce58e0a6160be3a65a33af4",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: FOmB10wdEBdJvLtL8C72P8UKVEGuTsat\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: ${TOKEN}\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "vars.%": "2",
                            "vars.TOKEN": "FOmB10wdEBdJvLtL8C72P8UKVEGuTsat",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_proxy_service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2c86011250e778a4ddacadf1ed252b21cea9f89e053152f52d5f398e8ccb695b",
                        "attributes": {
                            "id": "2c86011250e778a4ddacadf1ed252b21cea9f89e053152f52d5f398e8ccb695b",
                            "rendered": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://10.100.100.100:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://${master_ip}:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "1",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubelet_kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "e2c663987cde14bdef4a37e685a970fbf592948e10e259c136fce942841d3904",
                        "attributes": {
                            "id": "e2c663987cde14bdef4a37e685a970fbf592948e10e259c136fce942841d3904",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: 8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: ${TOKEN}\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "vars.%": "2",
                            "vars.TOKEN": "8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubelet_service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "5d602de0a16fd8189837aebcecc26f274dcde0c53e756a4b44daaa62cc2da67a",
                        "attributes": {
                            "id": "5d602de0a16fd8189837aebcecc26f274dcde0c53e756a4b44daaa62cc2da67a",
                            "rendered": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=10.110.50.10 \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=${cluster_dns_ip} \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=$${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "1",
                            "vars.cluster_dns_ip": "10.110.50.10"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.node_ip_sh": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b1140de1b9a6cab5e04089a5c1a8487296ee86c3c3b1502f2d4102be32074d35",
                        "attributes": {
                            "id": "b1140de1b9a6cab5e04089a5c1a8487296ee86c3c3b1502f2d4102be32074d35",
                            "rendered": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '10.100.0.0/16' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: ${node_ip}\"\n\necho \"KUBE_NODE_IP=${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "template": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"$${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '${cluster_cidr}' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: $${node_ip}\"\n\necho \"KUBE_NODE_IP=$${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "vars.%": "1",
                            "vars.cluster_cidr": "10.100.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "etcd3",
                "common"
            ],
            "outputs": {
                "ignition_file_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                        "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                        "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                        "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                        "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                        "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                        "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                        "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                        "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602"
                    ]
                },
                "ignition_systemd_unit_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                        "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                        "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                        "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107"
                    ]
                }
            },
            "resources": {
                "data.ignition_file.ca_crt": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "-----BEGIN CERTIFICATE-----\nMIIDmzCCAoOgAwIBAgIBATANBgkqhkiG9w0BAQUFADBeMQswCQYDVQQGEwJHQjEP\nMA0GA1UECBMGTG9uZG9uMQ8wDQYDVQQHEwZMb25kb24xDDAKBgNVBAoTA0RSQjEM\nMAoGA1UECxMDRFJCMREwDwYDVQQDEwhkcmIta3ViZTAeFw0xODAyMDQyMDMyNTBa\nFw0xOTAyMDQyMDMyNTBaMF4xCzAJBgNVBAYTAkdCMQ8wDQYDVQQIEwZMb25kb24x\nDzANBgNVBAcTBkxvbmRvbjEMMAoGA1UEChMDRFJCMQwwCgYDVQQLEwNEUkIxETAP\nBgNVBAMTCGRyYi1rdWJlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nv/BL8aupCMGnqSyrdNrM2ME+TXx3b9YnjJNq47sLegMP5DkP08zaObaiKhGe6sSN\ntq5+MhhD0tIuH1XZJBhb3DYehbe0CvGOY0YZR0vn05K086+H6UtETzEKBpjdl+Ef\nX7MxTu3C4jAycsM7n5jYTtuBmT65yqJvj+pG7mjvmqjIp1v9Yq8qbY5acpK0YsT2\n8Kn0+g6Y/nCR0WJCn4VbnZnRz7sUJv6qkJeOzY1pnpf/1+JvArRzCRyQHdrAEcSJ\noKFZLVvSMIN+sVAU2y3ngN2fM/w+6BvWbGkxFVIEGfAln1mVXxMzTeNPK98B0hbV\nXZPLs9HVe5M/aOyv1pmV9wIDAQABo2QwYjAPBgNVHRMBAf8EBTADAQH/MA8GA1Ud\nDwEB/wQFAwMHBgAwHQYDVR0OBBYEFPd/grBRXwV0c1d7mwxLWs36Gq6IMB8GA1Ud\nIwQYMBaAFPd/grBRXwV0c1d7mwxLWs36Gq6IMA0GCSqGSIb3DQEBBQUAA4IBAQCF\nX8BudLQ/Yz0olf17RQekTAfYnmsPYFQl5hlKOAspZkJFfEGlNQbVdQ1o9aapwVWx\nLGMpxyhd2zb+d4D0IMfMr+NFt3ZctyzGwULwGJ1w+7/SclUFGYuWoXRF0AtLXxit\n2QaEBSiLfc8pPzkKs2OAKinWCFZNgOxK0AyHS9ppTH6fC4zdB1CZo0T8njUapDGK\n4Tz9Fp8XXZ0yMZg+FAJa9WR5iNz+insgpKjyLAedpGiCWiVjMF5cVQyR67hNl8pi\n0yFxgQZo1rbZpc6qnkAVYT3Z7dhodhGvXhdFyO5N8JIhqYL9MgeYQudz84W1D9i7\nkjjwuT7e/d69LaOrufF2\n-----END CERTIFICATE-----\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                            "path": "/srv/kubernetes/ca.crt"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.calico": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                        "attributes": {
                            "filesystem": "root",
                            "id": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                            "path": "/opt/cni/bin/calico",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.calico_ipam": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                        "attributes": {
                            "filesystem": "root",
                            "id": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                            "path": "/opt/cni/bin/calico-ipam",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.cni": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                        "attributes": {
                            "filesystem": "root",
                            "id": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                            "path": "/opt/bootstrap/cni-v0.3.0.tgz",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_proxy_config": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube_proxy_config"
                    ],
                    "primary": {
                        "id": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"10.120.0.0/16\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                            "path": "/var/lib/kube-proxy/config.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_proxy_kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube_proxy_kubeconfig"
                    ],
                    "primary": {
                        "id": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: FOmB10wdEBdJvLtL8C72P8UKVEGuTsat\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                            "path": "/var/lib/kube-proxy/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_server": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                        "attributes": {
                            "filesystem": "root",
                            "id": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                            "path": "/opt/kubernetes-server-linux-amd64.tar.gz",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kubelet_kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kubelet_kubeconfig"
                    ],
                    "primary": {
                        "id": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: 8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                            "path": "/var/lib/kubelet/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.node_ip_sh": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.node_ip_sh"
                    ],
                    "primary": {
                        "id": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '10.100.0.0/16' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: ${node_ip}\"\n\necho \"KUBE_NODE_IP=${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                            "path": "/opt/bootstrap/node_ip.sh"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.docker_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                        "attributes": {
                            "dropin.#": "1",
                            "dropin.0.content": "[Service]\nEnvironment=DOCKER_OPTS=\"--iptables=false --ip-masq=false\"\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\n",
                            "dropin.0.name": "50-docker-options.conf",
                            "enabled": "true",
                            "id": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                            "name": "docker.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kube_proxy_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kube_proxy_service"
                    ],
                    "primary": {
                        "id": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107",
                        "attributes": {
                            "content": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://10.100.100.100:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107",
                            "name": "kube-proxy.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kube_server_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                        "attributes": {
                            "content": "[Service]\nType=oneshot\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \u0026\u0026 \\\n  /opt/bootstrap/node_ip.sh'\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \u0026\u0026 \\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \u0026\u0026\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \u0026\u0026 \\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                            "name": "kube-server.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kubelet_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kubelet_service"
                    ],
                    "primary": {
                        "id": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                        "attributes": {
                            "content": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=10.110.50.10 \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                            "name": "kubelet.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.template_file.kube_proxy_config": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "dd86182b8c2bf1870d5309c331f1c0ad6ff6060aa1b80f7851a2d09d042a0ff2",
                        "attributes": {
                            "id": "dd86182b8c2bf1870d5309c331f1c0ad6ff6060aa1b80f7851a2d09d042a0ff2",
                            "rendered": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"10.120.0.0/16\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "template": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"${pod_cidr}\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "vars.%": "1",
                            "vars.pod_cidr": "10.120.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_proxy_kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "a90a671af77e889ba0de014816a29710fde00c530ce58e0a6160be3a65a33af4",
                        "attributes": {
                            "id": "a90a671af77e889ba0de014816a29710fde00c530ce58e0a6160be3a65a33af4",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: FOmB10wdEBdJvLtL8C72P8UKVEGuTsat\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: ${TOKEN}\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "vars.%": "2",
                            "vars.TOKEN": "FOmB10wdEBdJvLtL8C72P8UKVEGuTsat",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_proxy_service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2c86011250e778a4ddacadf1ed252b21cea9f89e053152f52d5f398e8ccb695b",
                        "attributes": {
                            "id": "2c86011250e778a4ddacadf1ed252b21cea9f89e053152f52d5f398e8ccb695b",
                            "rendered": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://10.100.100.100:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://${master_ip}:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "1",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubelet_kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "e2c663987cde14bdef4a37e685a970fbf592948e10e259c136fce942841d3904",
                        "attributes": {
                            "id": "e2c663987cde14bdef4a37e685a970fbf592948e10e259c136fce942841d3904",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: 8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: ${TOKEN}\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "vars.%": "2",
                            "vars.TOKEN": "8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubelet_service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "5d602de0a16fd8189837aebcecc26f274dcde0c53e756a4b44daaa62cc2da67a",
                        "attributes": {
                            "id": "5d602de0a16fd8189837aebcecc26f274dcde0c53e756a4b44daaa62cc2da67a",
                            "rendered": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=10.110.50.10 \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=${cluster_dns_ip} \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=$${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "1",
                            "vars.cluster_dns_ip": "10.110.50.10"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.node_ip_sh": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b1140de1b9a6cab5e04089a5c1a8487296ee86c3c3b1502f2d4102be32074d35",
                        "attributes": {
                            "id": "b1140de1b9a6cab5e04089a5c1a8487296ee86c3c3b1502f2d4102be32074d35",
                            "rendered": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '10.100.0.0/16' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: ${node_ip}\"\n\necho \"KUBE_NODE_IP=${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "template": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"$${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '${cluster_cidr}' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: $${node_ip}\"\n\necho \"KUBE_NODE_IP=$${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "vars.%": "1",
                            "vars.cluster_cidr": "10.100.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "master",
                "common"
            ],
            "outputs": {
                "ignition_file_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                        "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                        "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                        "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                        "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                        "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                        "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                        "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                        "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602"
                    ]
                },
                "ignition_systemd_unit_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                        "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                        "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                        "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107"
                    ]
                }
            },
            "resources": {
                "data.ignition_file.ca_crt": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "-----BEGIN CERTIFICATE-----\nMIIDmzCCAoOgAwIBAgIBATANBgkqhkiG9w0BAQUFADBeMQswCQYDVQQGEwJHQjEP\nMA0GA1UECBMGTG9uZG9uMQ8wDQYDVQQHEwZMb25kb24xDDAKBgNVBAoTA0RSQjEM\nMAoGA1UECxMDRFJCMREwDwYDVQQDEwhkcmIta3ViZTAeFw0xODAyMDQyMDMyNTBa\nFw0xOTAyMDQyMDMyNTBaMF4xCzAJBgNVBAYTAkdCMQ8wDQYDVQQIEwZMb25kb24x\nDzANBgNVBAcTBkxvbmRvbjEMMAoGA1UEChMDRFJCMQwwCgYDVQQLEwNEUkIxETAP\nBgNVBAMTCGRyYi1rdWJlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nv/BL8aupCMGnqSyrdNrM2ME+TXx3b9YnjJNq47sLegMP5DkP08zaObaiKhGe6sSN\ntq5+MhhD0tIuH1XZJBhb3DYehbe0CvGOY0YZR0vn05K086+H6UtETzEKBpjdl+Ef\nX7MxTu3C4jAycsM7n5jYTtuBmT65yqJvj+pG7mjvmqjIp1v9Yq8qbY5acpK0YsT2\n8Kn0+g6Y/nCR0WJCn4VbnZnRz7sUJv6qkJeOzY1pnpf/1+JvArRzCRyQHdrAEcSJ\noKFZLVvSMIN+sVAU2y3ngN2fM/w+6BvWbGkxFVIEGfAln1mVXxMzTeNPK98B0hbV\nXZPLs9HVe5M/aOyv1pmV9wIDAQABo2QwYjAPBgNVHRMBAf8EBTADAQH/MA8GA1Ud\nDwEB/wQFAwMHBgAwHQYDVR0OBBYEFPd/grBRXwV0c1d7mwxLWs36Gq6IMB8GA1Ud\nIwQYMBaAFPd/grBRXwV0c1d7mwxLWs36Gq6IMA0GCSqGSIb3DQEBBQUAA4IBAQCF\nX8BudLQ/Yz0olf17RQekTAfYnmsPYFQl5hlKOAspZkJFfEGlNQbVdQ1o9aapwVWx\nLGMpxyhd2zb+d4D0IMfMr+NFt3ZctyzGwULwGJ1w+7/SclUFGYuWoXRF0AtLXxit\n2QaEBSiLfc8pPzkKs2OAKinWCFZNgOxK0AyHS9ppTH6fC4zdB1CZo0T8njUapDGK\n4Tz9Fp8XXZ0yMZg+FAJa9WR5iNz+insgpKjyLAedpGiCWiVjMF5cVQyR67hNl8pi\n0yFxgQZo1rbZpc6qnkAVYT3Z7dhodhGvXhdFyO5N8JIhqYL9MgeYQudz84W1D9i7\nkjjwuT7e/d69LaOrufF2\n-----END CERTIFICATE-----\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                            "path": "/srv/kubernetes/ca.crt"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.calico": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                        "attributes": {
                            "filesystem": "root",
                            "id": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                            "path": "/opt/cni/bin/calico",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.calico_ipam": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                        "attributes": {
                            "filesystem": "root",
                            "id": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                            "path": "/opt/cni/bin/calico-ipam",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.cni": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                        "attributes": {
                            "filesystem": "root",
                            "id": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                            "path": "/opt/bootstrap/cni-v0.3.0.tgz",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_proxy_config": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube_proxy_config"
                    ],
                    "primary": {
                        "id": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"10.120.0.0/16\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                            "path": "/var/lib/kube-proxy/config.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_proxy_kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube_proxy_kubeconfig"
                    ],
                    "primary": {
                        "id": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: FOmB10wdEBdJvLtL8C72P8UKVEGuTsat\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                            "path": "/var/lib/kube-proxy/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_server": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                        "attributes": {
                            "filesystem": "root",
                            "id": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                            "path": "/opt/kubernetes-server-linux-amd64.tar.gz",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kubelet_kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kubelet_kubeconfig"
                    ],
                    "primary": {
                        "id": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: 8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                            "path": "/var/lib/kubelet/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.node_ip_sh": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.node_ip_sh"
                    ],
                    "primary": {
                        "id": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '10.100.0.0/16' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: ${node_ip}\"\n\necho \"KUBE_NODE_IP=${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                            "path": "/opt/bootstrap/node_ip.sh"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.docker_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                        "attributes": {
                            "dropin.#": "1",
                            "dropin.0.content": "[Service]\nEnvironment=DOCKER_OPTS=\"--iptables=false --ip-masq=false\"\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\n",
                            "dropin.0.name": "50-docker-options.conf",
                            "enabled": "true",
                            "id": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                            "name": "docker.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kube_proxy_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kube_proxy_service"
                    ],
                    "primary": {
                        "id": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107",
                        "attributes": {
                            "content": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://10.100.100.100:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107",
                            "name": "kube-proxy.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kube_server_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                        "attributes": {
                            "content": "[Service]\nType=oneshot\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \u0026\u0026 \\\n  /opt/bootstrap/node_ip.sh'\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \u0026\u0026 \\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \u0026\u0026\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \u0026\u0026 \\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                            "name": "kube-server.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kubelet_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kubelet_service"
                    ],
                    "primary": {
                        "id": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                        "attributes": {
                            "content": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=10.110.50.10 \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                            "name": "kubelet.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.template_file.kube_proxy_config": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "dd86182b8c2bf1870d5309c331f1c0ad6ff6060aa1b80f7851a2d09d042a0ff2",
                        "attributes": {
                            "id": "dd86182b8c2bf1870d5309c331f1c0ad6ff6060aa1b80f7851a2d09d042a0ff2",
                            "rendered": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"10.120.0.0/16\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "template": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"${pod_cidr}\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "vars.%": "1",
                            "vars.pod_cidr": "10.120.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_proxy_kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "a90a671af77e889ba0de014816a29710fde00c530ce58e0a6160be3a65a33af4",
                        "attributes": {
                            "id": "a90a671af77e889ba0de014816a29710fde00c530ce58e0a6160be3a65a33af4",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: FOmB10wdEBdJvLtL8C72P8UKVEGuTsat\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: ${TOKEN}\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "vars.%": "2",
                            "vars.TOKEN": "FOmB10wdEBdJvLtL8C72P8UKVEGuTsat",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_proxy_service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2c86011250e778a4ddacadf1ed252b21cea9f89e053152f52d5f398e8ccb695b",
                        "attributes": {
                            "id": "2c86011250e778a4ddacadf1ed252b21cea9f89e053152f52d5f398e8ccb695b",
                            "rendered": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://10.100.100.100:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://${master_ip}:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "1",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubelet_kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "e2c663987cde14bdef4a37e685a970fbf592948e10e259c136fce942841d3904",
                        "attributes": {
                            "id": "e2c663987cde14bdef4a37e685a970fbf592948e10e259c136fce942841d3904",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: 8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: ${TOKEN}\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "vars.%": "2",
                            "vars.TOKEN": "8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubelet_service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "5d602de0a16fd8189837aebcecc26f274dcde0c53e756a4b44daaa62cc2da67a",
                        "attributes": {
                            "id": "5d602de0a16fd8189837aebcecc26f274dcde0c53e756a4b44daaa62cc2da67a",
                            "rendered": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=10.110.50.10 \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=${cluster_dns_ip} \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=$${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "1",
                            "vars.cluster_dns_ip": "10.110.50.10"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.node_ip_sh": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b1140de1b9a6cab5e04089a5c1a8487296ee86c3c3b1502f2d4102be32074d35",
                        "attributes": {
                            "id": "b1140de1b9a6cab5e04089a5c1a8487296ee86c3c3b1502f2d4102be32074d35",
                            "rendered": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '10.100.0.0/16' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: ${node_ip}\"\n\necho \"KUBE_NODE_IP=${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "template": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"$${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '${cluster_cidr}' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: $${node_ip}\"\n\necho \"KUBE_NODE_IP=$${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "vars.%": "1",
                            "vars.cluster_cidr": "10.100.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "worker",
                "common"
            ],
            "outputs": {
                "ignition_file_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                        "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                        "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                        "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                        "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                        "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                        "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                        "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                        "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602"
                    ]
                },
                "ignition_systemd_unit_ids": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                        "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                        "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                        "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107"
                    ]
                }
            },
            "resources": {
                "data.ignition_file.ca_crt": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "-----BEGIN CERTIFICATE-----\nMIIDmzCCAoOgAwIBAgIBATANBgkqhkiG9w0BAQUFADBeMQswCQYDVQQGEwJHQjEP\nMA0GA1UECBMGTG9uZG9uMQ8wDQYDVQQHEwZMb25kb24xDDAKBgNVBAoTA0RSQjEM\nMAoGA1UECxMDRFJCMREwDwYDVQQDEwhkcmIta3ViZTAeFw0xODAyMDQyMDMyNTBa\nFw0xOTAyMDQyMDMyNTBaMF4xCzAJBgNVBAYTAkdCMQ8wDQYDVQQIEwZMb25kb24x\nDzANBgNVBAcTBkxvbmRvbjEMMAoGA1UEChMDRFJCMQwwCgYDVQQLEwNEUkIxETAP\nBgNVBAMTCGRyYi1rdWJlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nv/BL8aupCMGnqSyrdNrM2ME+TXx3b9YnjJNq47sLegMP5DkP08zaObaiKhGe6sSN\ntq5+MhhD0tIuH1XZJBhb3DYehbe0CvGOY0YZR0vn05K086+H6UtETzEKBpjdl+Ef\nX7MxTu3C4jAycsM7n5jYTtuBmT65yqJvj+pG7mjvmqjIp1v9Yq8qbY5acpK0YsT2\n8Kn0+g6Y/nCR0WJCn4VbnZnRz7sUJv6qkJeOzY1pnpf/1+JvArRzCRyQHdrAEcSJ\noKFZLVvSMIN+sVAU2y3ngN2fM/w+6BvWbGkxFVIEGfAln1mVXxMzTeNPK98B0hbV\nXZPLs9HVe5M/aOyv1pmV9wIDAQABo2QwYjAPBgNVHRMBAf8EBTADAQH/MA8GA1Ud\nDwEB/wQFAwMHBgAwHQYDVR0OBBYEFPd/grBRXwV0c1d7mwxLWs36Gq6IMB8GA1Ud\nIwQYMBaAFPd/grBRXwV0c1d7mwxLWs36Gq6IMA0GCSqGSIb3DQEBBQUAA4IBAQCF\nX8BudLQ/Yz0olf17RQekTAfYnmsPYFQl5hlKOAspZkJFfEGlNQbVdQ1o9aapwVWx\nLGMpxyhd2zb+d4D0IMfMr+NFt3ZctyzGwULwGJ1w+7/SclUFGYuWoXRF0AtLXxit\n2QaEBSiLfc8pPzkKs2OAKinWCFZNgOxK0AyHS9ppTH6fC4zdB1CZo0T8njUapDGK\n4Tz9Fp8XXZ0yMZg+FAJa9WR5iNz+insgpKjyLAedpGiCWiVjMF5cVQyR67hNl8pi\n0yFxgQZo1rbZpc6qnkAVYT3Z7dhodhGvXhdFyO5N8JIhqYL9MgeYQudz84W1D9i7\nkjjwuT7e/d69LaOrufF2\n-----END CERTIFICATE-----\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "bdd679ec2c8a0e392aab6d019190e3b570e7be1ab427468f8a654bec6f3af393",
                            "path": "/srv/kubernetes/ca.crt"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.calico": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                        "attributes": {
                            "filesystem": "root",
                            "id": "2a93c23642a554b1b63c8463594ba1e28e085034024477078b5f208a19675e11",
                            "path": "/opt/cni/bin/calico",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.calico_ipam": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                        "attributes": {
                            "filesystem": "root",
                            "id": "3e7479d90c9663c1632e88242fe657df0345ccf9af3017ad27c408dc1cbb36c1",
                            "path": "/opt/cni/bin/calico-ipam",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/projectcalico/cni-plugin/releases/download/v1.11.2/calico-ipam",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.cni": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                        "attributes": {
                            "filesystem": "root",
                            "id": "11ba2865317789972a7b5213cbad1bd0f6e9d8c64a8221ed148323bc9ae92312",
                            "path": "/opt/bootstrap/cni-v0.3.0.tgz",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_proxy_config": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube_proxy_config"
                    ],
                    "primary": {
                        "id": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"10.120.0.0/16\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "3ac32dafb3e47b83fbfc17eee55e0fed3af48ea919a3f957cee9833f9c65c602",
                            "path": "/var/lib/kube-proxy/config.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_proxy_kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube_proxy_kubeconfig"
                    ],
                    "primary": {
                        "id": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: FOmB10wdEBdJvLtL8C72P8UKVEGuTsat\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "4840bbce5454e5631f448bb719e59ac51dc68ed9f9b105b8507f3e1bfd82a612",
                            "path": "/var/lib/kube-proxy/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kube_server": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                        "attributes": {
                            "filesystem": "root",
                            "id": "807cba201b91dc50b9764ac8f39a109e581393840a4a55a0ba04f9c0b4f6207a",
                            "path": "/opt/kubernetes-server-linux-amd64.tar.gz",
                            "source.#": "1",
                            "source.0.compression": "",
                            "source.0.source": "https://dl.k8s.io/v1.9.2/kubernetes-server-linux-amd64.tar.gz",
                            "source.0.verification": ""
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.kubelet_kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kubelet_kubeconfig"
                    ],
                    "primary": {
                        "id": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: 8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "8bbf3253f9a9058adf4b682fc358930fe749c15de392e1a4139acf8528c6a7af",
                            "path": "/var/lib/kubelet/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_file.node_ip_sh": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.node_ip_sh"
                    ],
                    "primary": {
                        "id": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '10.100.0.0/16' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: ${node_ip}\"\n\necho \"KUBE_NODE_IP=${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "1bd8d4704f6f2dc8e93722640fb97bc8f37c9ceb1ffd3cc688f1b5beb7ff304d",
                            "path": "/opt/bootstrap/node_ip.sh"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.docker_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                        "attributes": {
                            "dropin.#": "1",
                            "dropin.0.content": "[Service]\nEnvironment=DOCKER_OPTS=\"--iptables=false --ip-masq=false\"\nExecStartPre=/bin/ifconfig eth1 netmask 255.255.0.0\n",
                            "dropin.0.name": "50-docker-options.conf",
                            "enabled": "true",
                            "id": "864588b535fe2f92b07cf10d623333d57de4d5660ec6d09846eb74cb125cab34",
                            "name": "docker.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kube_proxy_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kube_proxy_service"
                    ],
                    "primary": {
                        "id": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107",
                        "attributes": {
                            "content": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://10.100.100.100:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "c24c9f7c827c8c5d36971dca11509a5ae9d2247f8333d9388ad174a112158107",
                            "name": "kube-proxy.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kube_server_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                        "attributes": {
                            "content": "[Service]\nType=oneshot\nExecStartPre=/usr/bin/sh -c 'chmod 0700 /opt/bootstrap/node_ip.sh \u0026\u0026 \\\n  /opt/bootstrap/node_ip.sh'\nExecStartPre=/usr/bin/sh -c 'mkdir -p /tmp/cni \u0026\u0026 \\\n  tar xzf /opt/bootstrap/cni-v0.3.0.tgz -C /tmp/cni \u0026\u0026\\\n  cp /tmp/cni/loopback /opt/cni/bin/ \u0026\u0026 \\\n  chmod 0755 /opt/cni/bin/calico /opt/cni/bin/calico-ipam /opt/cni/bin/loopback'\nExecStart=/usr/bin/sh -c 'tar xzf /opt/kubernetes-server-linux-amd64.tar.gz -C /opt'\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "ed673dbb008c18d1194f557094ce3add8e7f330fb55c32408868015275bf2c57",
                            "name": "kube-server.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.ignition_systemd_unit.kubelet_service": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kubelet_service"
                    ],
                    "primary": {
                        "id": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                        "attributes": {
                            "content": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=10.110.50.10 \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "enabled": "true",
                            "id": "244c615ed411bd210e340d6e4d2a35cbfa3dff54086f60695d138acd52083f22",
                            "name": "kubelet.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.ignition"
                },
                "data.template_file.kube_proxy_config": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "dd86182b8c2bf1870d5309c331f1c0ad6ff6060aa1b80f7851a2d09d042a0ff2",
                        "attributes": {
                            "id": "dd86182b8c2bf1870d5309c331f1c0ad6ff6060aa1b80f7851a2d09d042a0ff2",
                            "rendered": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"10.120.0.0/16\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "template": "apiVersion: kubeproxy.config.k8s.io/v1alpha1\nbindAddress: 0.0.0.0\nclientConnection:\n  acceptContentTypes: \"\"\n  burst: 10\n  contentType: application/vnd.kubernetes.protobuf\n  kubeconfig: \"/var/lib/kubelet/kubeconfig\"\n  qps: 5\nclusterCIDR: \"${pod_cidr}\"\nconfigSyncPeriod: 15m0s\nconntrack:\n  max: 0\n  maxPerCore: 32768\n  min: 131072\n  tcpCloseWaitTimeout: 1h0m0s\n  tcpEstablishedTimeout: 24h0m0s\nenableProfiling: false\nfeatureGates: \"\"\nhealthzBindAddress: 0.0.0.0:10256\nhostnameOverride: \"\"\niptables:\n  masqueradeAll: false\n  masqueradeBit: 14\n  minSyncPeriod: 0s\n  syncPeriod: 30s\nipvs:\n  minSyncPeriod: 0s\n  scheduler: \"\"\n  syncPeriod: 30s\nkind: KubeProxyConfiguration\nmetricsBindAddress: 127.0.0.1:10249\nmode: \"\"\noomScoreAdj: -999\nportRange: \"\"\nresourceContainer: /kube-proxy\nudpTimeoutMilliseconds: 250ms\n",
                            "vars.%": "1",
                            "vars.pod_cidr": "10.120.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_proxy_kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "a90a671af77e889ba0de014816a29710fde00c530ce58e0a6160be3a65a33af4",
                        "attributes": {
                            "id": "a90a671af77e889ba0de014816a29710fde00c530ce58e0a6160be3a65a33af4",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: FOmB10wdEBdJvLtL8C72P8UKVEGuTsat\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: kube-proxy\n  user:\n    token: ${TOKEN}\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: kube-proxy\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "vars.%": "2",
                            "vars.TOKEN": "FOmB10wdEBdJvLtL8C72P8UKVEGuTsat",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kube_proxy_service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "2c86011250e778a4ddacadf1ed252b21cea9f89e053152f52d5f398e8ccb695b",
                        "attributes": {
                            "id": "2c86011250e778a4ddacadf1ed252b21cea9f89e053152f52d5f398e8ccb695b",
                            "rendered": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://10.100.100.100:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nExecStartPre=/bin/chmod 0600 /var/lib/kube-proxy/kubeconfig\nExecStart=/opt/kubernetes/server/bin/kube-proxy \\\n  --config=/var/lib/kube-proxy/config.yaml \\\n  --master=http://${master_ip}:8080\n\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "1",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubelet_kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "e2c663987cde14bdef4a37e685a970fbf592948e10e259c136fce942841d3904",
                        "attributes": {
                            "id": "e2c663987cde14bdef4a37e685a970fbf592948e10e259c136fce942841d3904",
                            "rendered": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: 8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://10.100.100.100:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "template": "apiVersion: v1\nkind: Config\nusers:\n- name: kubelet\n  user:\n    token: ${TOKEN}\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /srv/kubernetes/ca.crt\n    server: http://${master_ip}:8080\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: service-account-context\ncurrent-context: service-account-context\n",
                            "vars.%": "2",
                            "vars.TOKEN": "8CUBtOiyuGoEB6ZosdoqZPX9VbQIRXgA",
                            "vars.master_ip": "10.100.100.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.kubelet_service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "5d602de0a16fd8189837aebcecc26f274dcde0c53e756a4b44daaa62cc2da67a",
                        "attributes": {
                            "id": "5d602de0a16fd8189837aebcecc26f274dcde0c53e756a4b44daaa62cc2da67a",
                            "rendered": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=10.110.50.10 \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=kube-server.service docker.service\nAfter=kube-server.service docker.service\n\n[Service]\nEnvironmentFile=/run/kube_node_ip.env\nExecStartPre=/bin/chmod 0600 /var/lib/kubelet/kubeconfig\nExecStartPre=/bin/mkdir -p /etc/cni/net.d\nExecStart=/opt/kubernetes/server/bin/kubelet \\\n  --allow-privileged=true \\\n  --cluster-dns=${cluster_dns_ip} \\\n  --cluster-domain=cluster.local \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --kubeconfig=/var/lib/kubelet/kubeconfig \\\n  --network-plugin=cni \\\n  --node-ip=$${KUBE_NODE_IP} \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --register-node=true\n\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "1",
                            "vars.cluster_dns_ip": "10.110.50.10"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                },
                "data.template_file.node_ip_sh": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "b1140de1b9a6cab5e04089a5c1a8487296ee86c3c3b1502f2d4102be32074d35",
                        "attributes": {
                            "id": "b1140de1b9a6cab5e04089a5c1a8487296ee86c3c3b1502f2d4102be32074d35",
                            "rendered": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '10.100.0.0/16' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: ${node_ip}\"\n\necho \"KUBE_NODE_IP=${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "template": "#!/usr/bin/env bash\nnode_ip=\"\"\nwhile [ -z \"$${node_ip}\" ]\ndo\n    echo \"node_ip not set. Sleeping for 5 seconds...\"\n    sleep 5\n    node_ip=$(ip route | grep '${cluster_cidr}' | head -1 | awk '{print $9}')\ndone\n\necho \"Detected node IP: $${node_ip}\"\n\necho \"KUBE_NODE_IP=$${node_ip}\" \u003e /run/kube_node_ip.env\n",
                            "vars.%": "1",
                            "vars.cluster_cidr": "10.100.0.0/16"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.template"
                }
            },
            "depends_on": []
        }
    ]
}
